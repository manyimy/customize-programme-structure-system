{"version":3,"sources":["serviceWorker.js","containers/Home/quontoComponent.js","components/Home/transferList.js","components/Home/psTable.js","containers/Home/Home.js","components/Admin/Login.js","containers/Admin/Admin.js","containers/Setting/settingsReducer.js","containers/Setting/Setting.js","components/Header/index.js","components/Header/Header.js","components/Sidebar/index.js","components/Sidebar/Sidebar.js","layouts/MainLayout.js","layouts/EmptyLayout.js","App.js","store/index.js","index.js"],"names":["Boolean","window","location","hostname","match","withStyles","alternativeLabel","top","left","right","active","borderColor","completed","line","borderTopWidth","borderRadius","StepConnector","makeStyles","root","color","display","height","alignItems","circle","width","backgroundColor","zIndex","fontSize","ColorlibConnector","backgroundImage","border","useColorlibStepIconStyles","justifyContent","boxShadow","ColorlibStepIcon","props","classes","icons","1","2","3","className","clsx","String","icon","theme","button","marginRight","spacing","instructions","marginTop","marginBottom","useStyles","margin","cardHeader","padding","list","palette","background","paper","overflow","state","checked","subject","subjects","map","value","index","push","code","name","this","setState","leftChecked","intersection","rightChecked","not","a","b","filter","indexOf","handleToggle","currentIndex","newChecked","splice","numberOfChecked","items","length","handleToggleAll","customList","title","Card","CardHeader","avatar","Checkbox","onClick","indeterminate","disabled","inputProps","subheader","Divider","List","dense","component","role","labelId","ListItem","key","ListItemIcon","tabIndex","disableRipple","ListItemText","id","primary","Grid","container","style","placeItems","item","direction","Button","variant","size","concat","aria-label","React","Component","intakeMonths","Trimesters","alignItem","updateTable","intake","initNum","psArr","AprilPS","JulyPS","NovPS","i","console","log","document","getElementById","innerText","ch","triMonth","triYear","triNum","intakeNum","updateTrimester","parseInt","year","inputIntake","inputYear","triName","j","y","n","triArray","defaultYear","type","defaultTri","formControl","minWidth","btnContainer","float","downloadBtn","inputAlert","position","inlineSize","marginLeft","pstable","textAlign","steps","handleNext","data","spec","prevActiveStep","activeStep","showError","handleBack","handleReset","handleChange","event","target","timerId","setTimeout","getYear","years","Date","getFullYear","yearOptions","intakeInputSize","yearInputSize","specInputSize","innerWidth","Alert","severity","Stepper","connector","label","Step","StepLabel","StepIconComponent","xs","Paper","FormControl","required","InputLabel","htmlFor","Select","native","onChange","FormHelperText","Specs","table","filename","sheet","buttonText","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","json","loginWrapper","flexDirection","secondary","main","form","submit","username","password","handleSubmit","setToken","e","preventDefault","token","parentCallback","Container","maxWidth","CssBaseline","Avatar","Typography","noValidate","onSubmit","TextField","fullWidth","autoFocus","autoComplete","FormControlLabel","control","userToken","sessionStorage","setItem","getToken","tokenString","getItem","parse","submitBtn","callbackFunction","childData","trimester1","trimester2","trimester3","TriJson","toString","require","tri","MenuItem","primaryColor","indigo","secondaryColor","green","themeConfig","typography","useNextVariants","error","red","contrastThreshold","tonalOffset","defaultTheme","settings","createSlice","initialState","darkMode","colorsSwaped","reducers","toggleThemeMode","action","payload","swapThemeColors","actions","isDarkMode","isColorSwaped","getTheme","Setting","useSelector","colorSwaped","dispatch","useDispatch","CardContent","ListItemSecondaryAction","Switch","Header","toolbarRoot","paddingRight","menuButton","flexGrow","handleToggleDrawer","AppBar","Toolbar","disableGutters","IconButton","noWrap","Sidebar","drawerPaper","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","open","Drawer","classNames","to","MainLayout","prevState","children","content","contentShift","drawerWidth","EmptyLayout","NotFound","DashboardRoute","rest","render","matchProps","EmptyRoute","App","theTheme","createMuiTheme","path","Home","Admin","exact","configureStore","reducer","ReactDOM","StrictMode","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2020cf0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nexport const QontoConnector = withStyles({\r\n    alternativeLabel: {\r\n      top: 10,\r\n      left: 'calc(-50% + 16px)',\r\n      right: 'calc(50% + 16px)',\r\n    },\r\n    active: {\r\n      '& $line': {\r\n        borderColor: '#784af4',\r\n      },\r\n    },\r\n    completed: {\r\n      '& $line': {\r\n        borderColor: '#784af4',\r\n      },\r\n    },\r\n    line: {\r\n      borderColor: '#eaeaf0',\r\n      borderTopWidth: 3,\r\n      borderRadius: 1,\r\n    },\r\n  })(StepConnector);\r\n  \r\n  export const useQontoStepIconStyles = makeStyles({\r\n    root: {\r\n      color: '#eaeaf0',\r\n      display: 'flex',\r\n      height: 22,\r\n      alignItems: 'center',\r\n    },\r\n    active: {\r\n      color: '#784af4',\r\n    },\r\n    circle: {\r\n      width: 8,\r\n      height: 8,\r\n      borderRadius: '50%',\r\n      backgroundColor: 'currentColor',\r\n    },\r\n    completed: {\r\n      color: '#784af4',\r\n      zIndex: 1,\r\n      fontSize: 18,\r\n    },\r\n  });\r\n  \r\n  export function QontoStepIcon(props) {\r\n    const classes = useQontoStepIconStyles();\r\n    const { active, completed } = props;\r\n  \r\n    return (\r\n      <div\r\n        className={clsx(classes.root, {\r\n          [classes.active]: active,\r\n        })}\r\n      >\r\n        {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  QontoStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n  };\r\n  \r\n  export const ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n      top: 22,\r\n    },\r\n    active: {\r\n      '& $line': {\r\n        backgroundImage:\r\n          'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n      },\r\n    },\r\n    completed: {\r\n      '& $line': {\r\n        backgroundImage:\r\n          'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n      },\r\n    },\r\n    line: {\r\n      height: 3,\r\n      border: 0,\r\n      backgroundColor: '#eaeaf0',\r\n      borderRadius: 1,\r\n    },\r\n  })(StepConnector);\r\n  \r\n  export const useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: '#ccc',\r\n      zIndex: 1,\r\n      color: '#fff',\r\n      width: 50,\r\n      height: 50,\r\n      display: 'flex',\r\n      borderRadius: '50%',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    active: {\r\n      backgroundImage:\r\n        'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n      boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n    },\r\n    completed: {\r\n      backgroundImage:\r\n        'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    },\r\n  });\r\n  \r\n  export function ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n  \r\n    const icons = {\r\n      1: <SettingsIcon />,\r\n      2: <GroupAddIcon />,\r\n      3: <VideoLabelIcon />,\r\n    };\r\n  \r\n    return (\r\n      <div\r\n        className={clsx(classes.root, {\r\n          [classes.active]: active,\r\n          [classes.completed]: completed,\r\n        })}\r\n      >\r\n        {icons[String(props.icon)]}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  ColorlibStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n    /**\r\n     * The label displayed in the step icon.\r\n     */\r\n    icon: PropTypes.node,\r\n  };\r\n  \r\n  export const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    button: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  }));\r\n  \r\n  export function getSteps() {\r\n    return ['Submit Information', 'Generate Programme Structure'];\r\n  }","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport subjects from '../../constants/subjectLists.json'\r\n\r\nconst useStyles = withStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  cardHeader: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  list: {\r\n    width: 380,\r\n    height: 230,\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow: 'auto',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nexport default useStyles(class TransferList extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: [],\r\n      left: [],\r\n      right: [],\r\n    }\r\n  }\r\n\r\n  // set the subjects from json file to the transfer list once this page is load\r\n  componentDidMount(){\r\n    let subject = []\r\n    subjects.map((value, index) => {\r\n      subject.push(value.code + \" \" + value.name);\r\n    })\r\n    this.setState({left: subject});\r\n  }\r\n\r\n  render(){\r\n  const { classes } = this.props;   // for the styles\r\n  const leftChecked = intersection(this.state.checked, this.state.left);\r\n  const rightChecked = intersection(this.state.checked, this.state.right);\r\n\r\n  function not(a, b) {\r\n    return a.filter((value) => b.indexOf(value) === -1);\r\n  }\r\n  \r\n  function intersection(a, b) {\r\n    return a.filter((value) => b.indexOf(value) !== -1);\r\n  }\r\n  \r\n  function union(a, b) {\r\n    return [...a, ...not(b, a)];\r\n  }\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = this.state.checked.indexOf(value);\r\n    const newChecked = [...this.state.checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    this.setState({checked: newChecked});\r\n    // setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = (items) => intersection(this.state.checked, items).length;\r\n\r\n  const handleToggleAll = (items) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      this.setState({checked: not(this.state.checked, items)})\r\n      // setChecked(not(checked, items));\r\n    } else {\r\n      this.setState({checked: union(this.state.checked, items)})\r\n      // setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    this.setState({right: this.state.right.concat(leftChecked)})\r\n    this.setState({left: not(this.state.left, leftChecked)})\r\n    this.setState({checked: not(this.state.checked, leftChecked)})\r\n\r\n    // setRight(right.concat(leftChecked));\r\n    // setLeft(not(left, leftChecked));\r\n    // setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    this.setState({left: this.state.left.concat(rightChecked)})\r\n    this.setState({right: not(this.state.right, rightChecked)})\r\n    this.setState({checked: not(this.state.checked, rightChecked)})\r\n\r\n    // setLeft(left.concat(rightChecked));\r\n    // setRight(not(right, rightChecked));\r\n    // setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const customList = (title, items) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n            disabled={items.length === 0}\r\n            inputProps={{ 'aria-label': 'all subjects selected' }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List className={classes.list} dense component=\"div\" role=\"list\">\r\n        {items.map((value) => {\r\n          const labelId = `transfer-list-all-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={this.state.checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`${value}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      style={{justifyContent: 'center', placeItems: 'center'}}\r\n      className={classes.root}\r\n    >\r\n      <Grid item>{customList('Subject List', this.state.left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList('Credit Transferred Subjects', this.state.right)}</Grid>\r\n    </Grid>\r\n  )};\r\n});","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './psTable.css';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TableRow from '@material-ui/core/TableRow';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\n// import { Button } from '@material-ui/core';\r\n// import { border } from '@material-ui/system';\r\nimport JulyPS from '../../constants/julyPS.json';\r\nimport AprilPS from '../../constants/aprilPS.json';\r\nimport NovPS from '../../constants/novPS.json';\r\nimport aprilID from '../../constants/aprilNum.json';\r\nimport julyID from '../../constants/julyNum.json';\r\nimport novID from '../../constants/novNum.json';\r\nimport Trimesters from '../../constants/trimesters.json';\r\n\r\nconst intakeMonths = Trimesters;\r\n\r\nconst useStyles = withStyles((theme) => ({\r\n  container: {\r\n    alignItem: 'center',\r\n  },\r\n}));\r\nexport default useStyles(class PSTable extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            triMonth: [],\r\n            triYear: [],\r\n            triNum: [],\r\n            intakeNum: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateTrimester(this.props.intake, parseInt(this.props.year));\r\n        // this.updateTable(this.props.intake);\r\n    }\r\n\r\n    updateTrimester(inputIntake, inputYear) {\r\n        var triName = [];\r\n        // 0 - APRIL\r\n        // 1 - JULY\r\n        // 2 - NOVEMBER\r\n        var initNum = intakeMonths.indexOf(inputIntake);\r\n        this.setState({intakeNum: initNum});\r\n        for(var i = initNum; triName.length < 9; i++){\r\n            triName.push(intakeMonths[i]);\r\n            if (i === intakeMonths.length - 1)\r\n                i = -1;\r\n        }\r\n\r\n        var triYear = [];\r\n        for(var j = 0, y = 0; triYear.length < 9;){\r\n            triYear.push(inputYear + y);\r\n            j++;\r\n            if(triName[j] === \"July\") \r\n                y++;\r\n        }\r\n\r\n        var n = 0;\r\n        switch(initNum) {\r\n            // APRIL\r\n            case 0: \r\n                n = 3;\r\n                // document.getElementById(\"145\").setAttribute(\"rowSpan\", 14);\r\n                // document.getElementById(\"145\").innerText = \"TPT2201\tIndustrial Training\";\r\n                // document.getElementById(\"146\").setAttribute(\"rowSpan\", 14);\r\n                // document.getElementById(\"146\").innerText = 4;\r\n                break;\r\n            // JULY\r\n            case 1:\r\n                n = 1;\r\n                // document.getElementById(\"121\").setAttribute(\"rowSpan\", 14);\r\n                // document.getElementById(\"121\").innerText = \"TPT2201\tIndustrial Training\";\r\n                // document.getElementById(\"122\").setAttribute(\"rowSpan\", 14);\r\n                // document.getElementById(\"122\").innerText = 4;\r\n                break;\r\n            // NOVEMBER\r\n            case 2:\r\n                n = 2;\r\n                // document.getElementById(\"169\").setAttribute(\"rowSpan\", 14);\r\n                // document.getElementById(\"169\").innerText = \"TPT2201\tIndustrial Training\";\r\n                // document.getElementById(\"170\").setAttribute(\"rowSpan\", 14);\r\n                // document.getElementById(\"170\").innerText = 4;\r\n                break;\r\n            default: \r\n                n = 1;\r\n                // document.getElementById(\"121\").setAttribute(\"rowSpan\", 14);\r\n                // document.getElementById(\"121\").innerText = \"TPT2201\tIndustrial Training\";\r\n                // document.getElementById(\"122\").setAttribute(\"rowSpan\", 14);\r\n                // document.getElementById(\"122\").innerText = 4;\r\n                break;\r\n        }\r\n        let triArray = [];\r\n        for(let i = 0; i < 9; i++) {\r\n            triArray.push(n++);\r\n            if(n === 4) n = 1;\r\n        }\r\n\r\n        this.setState({\r\n            triMonth: triName, \r\n            triYear: triYear, \r\n            triNum: triArray\r\n        });\r\n    }\r\n\r\n    updateTable = (intake) => {\r\n        var initNum = intakeMonths.indexOf(intake);\r\n        let psArr = (initNum === 0)\r\n                        ? AprilPS\r\n                        : (initNum === 1)\r\n                            ? JulyPS\r\n                            : NovPS;\r\n        for(let i = 0; i < psArr.length; i++) {\r\n            console.log(i);\r\n            console.log(psArr[i].key);\r\n            console.log(document.getElementById(psArr[i].key));\r\n            if(initNum !== 0 && ((psArr[i].key >= 153 && psArr[i].key <= 161) || (psArr[i].key >= 177 && psArr[i].key <= 185) || (psArr[i].key >= 201 && psArr[i].key <= 209))) {\r\n                if(document.getElementById(psArr[i].key - 24)) {\r\n                document.getElementById((psArr[i].key) - 24).innerText = psArr[i].code + \" \" + psArr[i].subject;\r\n                document.getElementById((psArr[i].key) - 23).innerText = psArr[i].ch;\r\n                }\r\n            } else {\r\n                if(document.getElementById(psArr[i].key)) {\r\n                    document.getElementById(psArr[i].key).innerText = psArr[i].code + \" \" + psArr[i].subject;\r\n                    document.getElementById(psArr[i].key + 1).innerText = psArr[i].ch;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        // const jsonTable = () => {\r\n        //     const dbParam = JSON.stringify({table:\"customers\",limit:20});   \r\n        //     const xmlhttp = new XMLHttpRequest();\r\n        //     const myObj = JSON.parse(this.responseText);\r\n        //     let text = \"<table border='1' id='ps-table'>\"\r\n        //     text += \"<tr><th colSpan={2} rowSpan={3}></th>\";\r\n        //     text += \"<th colSpan={6}>Beta Level</th><th colSpan={6}>Gamma Level</th><th colSpan={6}>Delta Level</th></tr>\";\r\n        //     text += \"</table>\";\r\n        //     document.getElementById(\"demo\").innerHTML = text;\r\n        // }\r\n        return (\r\n            <div className={classes.container}>\r\n                {/* <div id=\"demo\">{jsonTable()}</div> */}\r\n                <h1>Year 1</h1>\r\n                <table id=\"ps-table\">\r\n                    <tr>\r\n                        <th>Category</th>\r\n                        <th>Subject Code</th>\r\n                        <th>Subject Name</th>\r\n                        {/* <th>Year</th> */}\r\n                        <th>Trimester</th>\r\n                    </tr>\r\n                    {(this.state.intakeNum === 0) ?\r\n                        AprilPS.map((item, index) => {\r\n                            if(item.defaultYear === 1) {\r\n                                return (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td>{ item.type }</td>\r\n                                            <td>{ item.code }</td>\r\n                                            <td>{ item.subject }</td>\r\n                                            {/* <td>{ item.defaultYear }</td> */}\r\n                                            <td>{ item.defaultTri }</td>\r\n                                        </tr>\r\n                                    </>\r\n                                );\r\n                            }\r\n                        })\r\n                    : (this.state.intakeNum === 1) ?\r\n                        JulyPS.map((item, index) => {\r\n                            if(item.defaultYear === 1) {\r\n                                return (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td>{ item.type }</td>\r\n                                            <td>{ item.code }</td>\r\n                                            <td>{ item.subject }</td>\r\n                                            {/* <td>{ item.defaultYear }</td> */}\r\n                                            <td>{ item.defaultTri }</td>\r\n                                        </tr>\r\n                                    </>\r\n                                );\r\n                            }\r\n                        })\r\n                    : NovPS.map((item, index) => {\r\n                            if(item.defaultYear === 1) {\r\n                                return (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td>{ item.type }</td>\r\n                                            <td>{ item.code }</td>\r\n                                            <td>{ item.subject }</td>\r\n                                            {/* <td>{ item.defaultYear }</td> */}\r\n                                            <td>{ item.defaultTri }</td>\r\n                                        </tr>\r\n                                    </>\r\n                                );\r\n                            }\r\n                        })\r\n                    }\r\n                </table>\r\n                <h1>Year 2</h1>\r\n                <table id=\"ps-table\">\r\n                    <tr>\r\n                        <th>Category</th>\r\n                        <th>Subject Code</th>\r\n                        <th>Subject Name</th>\r\n                        {/* <th>Year</th> */}\r\n                        <th>Trimester</th>\r\n                    </tr>\r\n                    {(this.state.intakeNum === 0) ?\r\n                        AprilPS.map((item, index) => {\r\n                            if(item.defaultYear === 2) {\r\n                                return (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td>{ item.type }</td>\r\n                                            <td>{ item.code }</td>\r\n                                            <td>{ item.subject }</td>\r\n                                            {/* <td>{ item.defaultYear }</td> */}\r\n                                            <td>{ item.defaultTri }</td>\r\n                                        </tr>\r\n                                    </>\r\n                                );\r\n                            }\r\n                        })\r\n                    : (this.state.intakeNum === 1) ?\r\n                        JulyPS.map((item, index) => {\r\n                            if(item.defaultYear === 2) {\r\n                                return (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td>{ item.type }</td>\r\n                                            <td>{ item.code }</td>\r\n                                            <td>{ item.subject }</td>\r\n                                            {/* <td>{ item.defaultYear }</td> */}\r\n                                            <td>{ item.defaultTri }</td>\r\n                                        </tr>\r\n                                    </>\r\n                                );\r\n                            }\r\n                        })\r\n                    : NovPS.map((item, index) => {\r\n                            if(item.defaultYear === 2) {\r\n                                return (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td>{ item.type }</td>\r\n                                            <td>{ item.code }</td>\r\n                                            <td>{ item.subject }</td>\r\n                                            {/* <td>{ item.defaultYear }</td> */}\r\n                                            <td>{ item.defaultTri }</td>\r\n                                        </tr>\r\n                                    </>\r\n                                );\r\n                            }\r\n                        })\r\n                    }\r\n                </table>\r\n                <h1>Year 3</h1>\r\n                <table id=\"ps-table\">\r\n                    <tr>\r\n                        <th>Category</th>\r\n                        <th>Subject Code</th>\r\n                        <th>Subject Name</th>\r\n                        {/* <th>Year</th> */}\r\n                        <th>Trimester</th>\r\n                    </tr>\r\n                    {(this.state.intakeNum === 0) ?\r\n                        AprilPS.map((item, index) => {\r\n                            if(item.defaultYear === 3) {\r\n                                return (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td>{ item.type }</td>\r\n                                            <td>{ item.code }</td>\r\n                                            <td>{ item.subject }</td>\r\n                                            {/* <td>{ item.defaultYear }</td> */}\r\n                                            <td>{ item.defaultTri }</td>\r\n                                        </tr>\r\n                                    </>\r\n                                );\r\n                            }\r\n                        })\r\n                    : (this.state.intakeNum === 1) ?\r\n                        JulyPS.map((item, index) => {\r\n                            if(item.defaultYear === 3) {\r\n                                return (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td>{ item.type }</td>\r\n                                            <td>{ item.code }</td>\r\n                                            <td>{ item.subject }</td>\r\n                                            {/* <td>{ item.defaultYear }</td> */}\r\n                                            <td>{ item.defaultTri }</td>\r\n                                        </tr>\r\n                                    </>\r\n                                );\r\n                            }\r\n                        })\r\n                    : NovPS.map((item, index) => {\r\n                            if(item.defaultYear === 3) {\r\n                                return (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td>{ item.type }</td>\r\n                                            <td>{ item.code }</td>\r\n                                            <td>{ item.subject }</td>\r\n                                            {/* <td>{ item.defaultYear }</td> */}\r\n                                            <td>{ item.defaultTri }</td>\r\n                                        </tr>\r\n                                    </>\r\n                                );\r\n                            }\r\n                        })\r\n                    }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n});","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { getSteps, ColorlibConnector, ColorlibStepIcon } from './quontoComponent';\r\nimport TransferList from '../../components/Home/transferList';\r\nimport PSTable from '../../components/Home/psTable';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\n// import { getTheme } from '../Setting/settingsReducer';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Trimesters from '../../constants/trimesters.json';\r\nimport Specs from '../../constants/specs.json';\r\n\r\nconst useStyles = withStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"100%\",\r\n  },\r\n  container: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  btnContainer: {\r\n    float: \"right\",\r\n  },\r\n  downloadBtn: {\r\n    margin: theme.spacing(0.5, 0),\r\n    padding:  theme.spacing(1, 1.5),\r\n  },\r\n  inputAlert: {\r\n    boxShadow: \"4px 5px #e4e4e4\",\r\n    position: \"absolute\",\r\n    zIndex: 100,\r\n    inlineSize: \"fit-content\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    display: \"none\"\r\n  },\r\n  pstable: {\r\n    textAlign: \"-webkit-center\"\r\n  }\r\n}));\r\n\r\n\r\nconst steps = getSteps();\r\n// const [checked, setChecked] = React.useState([]);\r\n// const [activeStep, setActiveStep] = React.useState(0);\r\n// const [state, setState] = React.useState({\r\n//   intake: '',\r\n//   spec: '',\r\n// });\r\n\r\n// step navigation\r\n\r\n\r\nexport default useStyles(class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeStep: 0,\r\n      data: {\r\n        intake: 'July',\r\n        year: (new Date()).getFullYear(),\r\n        spec: 'Game Development'\r\n      },\r\n      intakeInputSize: 2,\r\n      yearInputSize: 1,\r\n      specInputSize: 2,\r\n      yearOptions: []\r\n    }\r\n    this.timerId = null;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    if(window.innerWidth <= 480) {\r\n      this.setState({intakeInputSize: 5, specInputSize: 6});\r\n    }\r\n    this.getYear();\r\n  }\r\n\r\n  handleNext = () => {\r\n    if(this.state.data.intake && this.state.data.year && this.state.data.spec) {\r\n      let prevActiveStep = this.state.activeStep;\r\n      this.setState({ activeStep: prevActiveStep + 1 });\r\n    } else {\r\n      this.showError();\r\n    }\r\n    \r\n    // setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n  \r\n  handleBack = () => {\r\n    let prevActiveStep = this.state.activeStep;\r\n    this.setState({ activeStep: prevActiveStep - 1 })\r\n    // setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n  \r\n  handleReset = () => {\r\n    this.setState({ activeStep: 0 })\r\n    // setActiveStep(0);\r\n  };\r\n  \r\n  handleChange = (event) => {\r\n    const name = event.target.name;\r\n    this.setState({\r\n      data: {\r\n        ...this.state.data,\r\n        [name]: event.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  showError = () => {\r\n    // document.getElementById(\"error-alert\").innerText = message;\r\n    document.getElementById(\"error-alert\").style.display = \"flex\";\r\n    this.timerId = setTimeout(() => {\r\n      document.getElementById(\"error-alert\").style.display = \"none\";\r\n      this.timerId = null;\r\n    }, 5000);\r\n  }\r\n  \r\n  getYear = () => {\r\n    let thisYear = (new Date()).getFullYear();\r\n    let years = [];\r\n    for(let i = thisYear-4; years.length <= 6; i++) {\r\n      years.push(i);\r\n    }\r\n    this.setState({yearOptions: years});\r\n  }\r\n\r\n  render(){\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <Alert id=\"error-alert\" severity=\"error\" className={classes.inputAlert}>Input field(s) cannot be empty!</Alert>\r\n        <Stepper alternativeLabel activeStep={this.state.activeStep} connector={<ColorlibConnector />}>\r\n          {steps.map((label) => (\r\n            <Step key={label}>\r\n              <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <div>\r\n          {this.state.activeStep === steps.length ? (\r\n            <div>\r\n              <Button onClick={this.handleReset} className={classes.button}>\r\n                Reset\r\n              </Button>\r\n            </div>\r\n          ) :\r\n          this.state.activeStep === 0 ? (\r\n            <div>\r\n              <Grid container spacing={3}>\r\n               {(window.innerWidth > 480 ? \r\n                  <Grid  item xs>\r\n                    <Paper className={classes.paper}></Paper>\r\n                  </Grid>\r\n                  :<div></div>\r\n               )}\r\n                <Grid item xs={this.state.intakeInputSize}>\r\n                  <FormControl required className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"intake-native-simple\">Intake</InputLabel>\r\n                    <Select\r\n                      native\r\n                      value={this.state.data.intake}\r\n                      onChange={this.handleChange}\r\n                      inputProps={{\r\n                        name: 'intake',\r\n                        id: 'intake-native-simple',\r\n                      }}\r\n                      required\r\n                    >\r\n                      <option aria-label=\"None\" value=\"\" />\r\n                      {Trimesters.map((item, index) => {\r\n                        return <option key={item}>{item}</option>\r\n                      })}\r\n                    </Select>\r\n                    <FormHelperText>Required</FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={this.state.intakeInputSize}>\r\n                  <FormControl required className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"intake-native-simple\">Year</InputLabel>\r\n                    <Select\r\n                      native\r\n                      value={this.state.data.year}\r\n                      onChange={this.handleChange}\r\n                      inputProps={{\r\n                        name: 'year',\r\n                        id: 'year-native-simple',\r\n                      }}\r\n                      required\r\n                    >\r\n                      <option aria-label=\"None\" value=\"\" />\r\n                      {this.state.yearOptions.map((item, index) => {\r\n                        return <option key={item}>{item}</option>\r\n                      })}\r\n                    </Select>\r\n                    <FormHelperText>Required</FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={this.state.specInputSize}>\r\n                  <FormControl required className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"spec-native-simple\">Specialization</InputLabel>\r\n                    <Select\r\n                      native\r\n                      value={this.state.data.spec}\r\n                      onChange={this.handleChange}\r\n                      inputProps={{\r\n                        name: 'spec',\r\n                        id: 'spec-native-simple',\r\n                      }}\r\n                    >\r\n                      <option aria-label=\"None\" value=\"\" />\r\n                      {Specs.map((item, index) => {\r\n                        return <option key={item}>{item}</option>\r\n                      })}\r\n                    </Select>\r\n                    <FormHelperText>Required</FormHelperText>\r\n                  </FormControl>\r\n                </Grid>\r\n                {(window.innerWidth > 480 ? \r\n                  <Grid item xs>\r\n                    <Paper className={classes.paper}></Paper>\r\n                  </Grid>\r\n                  : <div></div>\r\n                )}\r\n              </Grid>\r\n              <Grid container spacing={3} >\r\n              {(window.innerWidth > 480 ? \r\n                <Grid item xs>\r\n                  <Paper className={classes.paper}></Paper>\r\n                </Grid>\r\n                : <div></div>\r\n              )}\r\n                <Grid item xs={12}>\r\n                  <TransferList />\r\n                </Grid>\r\n              {(window.innerWidth > 480 ? \r\n                <Grid item xs>\r\n                  <Paper className={classes.paper}></Paper>\r\n                </Grid>\r\n                : <div></div>\r\n              )}\r\n              </Grid>\r\n              <div className={classes.btnContainer}>\r\n                <Button disabled={this.state.activeStep === 0} onClick={this.handleBack} className={classes.button}>\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.handleNext}\r\n                  className={classes.button}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.container}>\r\n              <Grid container spacing={3} >\r\n                <Grid item xs>\r\n                  <Paper className={classes.paper}></Paper>\r\n                </Grid>\r\n                <Grid item className={classes.pstable} xs={12}>\r\n                  <PSTable\r\n                    intake={this.state.data.intake}\r\n                    year={this.state.data.year}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Paper className={classes.paper}></Paper>\r\n                </Grid>\r\n              </Grid>\r\n              <div className={classes.btnContainer}>\r\n                <Button disabled={this.state.activeStep === 0} onClick={this.handleBack} className={classes.button}>\r\n                  Back\r\n                </Button>\r\n                {/* <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleNext}\r\n                  className={classes.button}\r\n                > */}\r\n                  <ReactHTMLTableToExcel\r\n                    id=\"test-table-xls-button\"\r\n                    className={classes.downloadBtn + \" download-table-xls-button\" }\r\n                    table=\"ps-table\"\r\n                    filename=\"tablexls\"\r\n                    sheet=\"tablexls\"\r\n                    buttonText=\"Download\"/>\r\n                  {/* Download */}\r\n                {/* </Button> */}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n});","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = withStyles((theme) => ({\r\n  loginWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  inputAlert: {\r\n    boxShadow: \"4px 5px #e4e4e4\",\r\n    position: \"absolute\",\r\n    zIndex: 100,\r\n    inlineSize: \"fit-content\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    display: \"none\"\r\n  }\r\n}));\r\n\r\nasync function loginUser(credentials) {\r\n  return fetch('http://localhost:4000/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n    .then(data => data.json())\r\n }\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes, setToken } = this.props;\r\n\r\n    const handleSubmit = async e => {\r\n      e.preventDefault();\r\n      var { username, password } = this.state;\r\n      if(username === \"admin\" && password === \"admin123\") {\r\n        const token = await loginUser({\r\n          username,\r\n          password\r\n        });\r\n        this.props.parentCallback(token);\r\n      } else {\r\n        document.getElementById(\"error-alert\").style.display = \"flex\";\r\n      }\r\n    }\r\n\r\n    return(\r\n      <div className={classes.loginWrapper}>\r\n        <Alert id=\"error-alert\" severity=\"error\" className={classes.inputAlert}>Credentials entered are incorrect!</Alert>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoFocus\r\n                onChange={e => {this.setState({username: e.target.value})}}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={e => {this.setState({password: e.target.value})}}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n}\r\n\r\nexport default useStyles(Login);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import {writeJsonFile} from 'write-json-file';\r\n\r\nimport TriJson from '../../constants/trimesters.json';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Login from '../../components/Admin/Login';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = withStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  submitBtn: {\r\n    float: \"right\",\r\n    marginRight: 200,\r\n  }\r\n}));\r\n\r\nfunction setToken(userToken) {\r\n  sessionStorage.setItem('token', JSON.stringify(userToken));\r\n}\r\n\r\nfunction getToken() {\r\n  const tokenString = sessionStorage.getItem('token');\r\n  const userToken = JSON.parse(tokenString);\r\n  return userToken?.token\r\n}\r\n\r\n// async function editTrimester (newData) {\r\n//   await writeJsonFile('../../constants/trimesters.json', {foo: true});\r\n// }\r\n\r\n\r\nexport default useStyles(class Admin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: getToken(),\r\n      trimester1: '',\r\n      trimester2: '',\r\n      trimester3: '',\r\n    }\r\n    // this.setState({token: getToken()})\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      trimester1: TriJson[0].toString(),\r\n      trimester2: TriJson[1].toString(),\r\n      trimester3: TriJson[2].toString(),\r\n    })\r\n  }\r\n\r\n  callbackFunction = (childData) => {\r\n    this.setState({token: childData})\r\n  }\r\n  \r\n  render(){\r\n    const { classes } = this.props;\r\n    const fs = require('fs');\r\n    const writeFile = (filePath, fileContent) => {\r\n      return new Promise((resolve, reject) => {\r\n       fs.writeFile(filePath, fileContent, writeFileError => {\r\n        if (writeFileError) {\r\n         reject(writeFileError);\r\n         return;\r\n        }\r\n     \r\n        resolve(filePath);\r\n       });\r\n      });\r\n    };\r\n\r\n    const handleChange = (event, tri) => {\r\n      this.setState({[tri]: event.target.value});\r\n    };\r\n\r\n    function onSubmit() {\r\n      // fs = require('fs');\r\n      var name = '../../constants/trimesters.json';\r\n      // var m = JSON.parse(fs.readFileSync(name).toString());\r\n      var newData = [\"January\", \"February\", \"March\"];\r\n      // newData.push(this.state.trimester1);\r\n      // newData.push(this.state.trimester2);\r\n      // newData.push(this.state.trimester3);\r\n      // fs.writeFileSync(name, JSON.stringify(newData));\r\n      // fs.writeFile('../../constants/trimesters.json', JSON.stringify(newData), (err) => {\r\n      //   if (err) console.log('Error writing file:', err);\r\n      // })\r\n      writeFile(name, JSON.stringify(newData));\r\n    }\r\n\r\n    if(!this.state.token) {\r\n      return <Login setToken={setToken} parentCallback={this.callbackFunction} />\r\n    }\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          Trimester Months: \r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={this.state.trimester1}\r\n            onChange={(e) => {handleChange(e, \"trimester1\")}}\r\n          >\r\n            <MenuItem value={\"January\"}>January</MenuItem>\r\n            <MenuItem value={\"February\"}>February</MenuItem>\r\n            <MenuItem value={\"March\"}>March</MenuItem>\r\n            <MenuItem value={\"April\"}>April</MenuItem>\r\n            <MenuItem value={\"May\"}>May</MenuItem>\r\n            <MenuItem value={\"June\"}>June</MenuItem>\r\n            <MenuItem value={\"July\"}>July</MenuItem>\r\n            <MenuItem value={\"August\"}>August</MenuItem>\r\n            <MenuItem value={\"September\"}>September</MenuItem>\r\n            <MenuItem value={\"October\"}>October</MenuItem>\r\n            <MenuItem value={\"November\"}>November</MenuItem>\r\n            <MenuItem value={\"December\"}>December</MenuItem>\r\n          </Select>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={this.state.trimester2}\r\n            onChange={(e) => {handleChange(e, \"trimester2\")}}\r\n          >\r\n            <MenuItem value={\"January\"}>January</MenuItem>\r\n            <MenuItem value={\"February\"}>February</MenuItem>\r\n            <MenuItem value={\"March\"}>March</MenuItem>\r\n            <MenuItem value={\"April\"}>April</MenuItem>\r\n            <MenuItem value={\"May\"}>May</MenuItem>\r\n            <MenuItem value={\"June\"}>June</MenuItem>\r\n            <MenuItem value={\"July\"}>July</MenuItem>\r\n            <MenuItem value={\"August\"}>August</MenuItem>\r\n            <MenuItem value={\"September\"}>September</MenuItem>\r\n            <MenuItem value={\"October\"}>October</MenuItem>\r\n            <MenuItem value={\"November\"}>November</MenuItem>\r\n            <MenuItem value={\"December\"}>December</MenuItem>\r\n          </Select>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={this.state.trimester3}\r\n            onChange={(e) => {handleChange(e, \"trimester3\")}}\r\n          >\r\n            <MenuItem value={\"January\"}>January</MenuItem>\r\n            <MenuItem value={\"February\"}>February</MenuItem>\r\n            <MenuItem value={\"March\"}>March</MenuItem>\r\n            <MenuItem value={\"April\"}>April</MenuItem>\r\n            <MenuItem value={\"May\"}>May</MenuItem>\r\n            <MenuItem value={\"June\"}>June</MenuItem>\r\n            <MenuItem value={\"July\"}>July</MenuItem>\r\n            <MenuItem value={\"August\"}>August</MenuItem>\r\n            <MenuItem value={\"September\"}>September</MenuItem>\r\n            <MenuItem value={\"October\"}>October</MenuItem>\r\n            <MenuItem value={\"November\"}>November</MenuItem>\r\n            <MenuItem value={\"December\"}>December</MenuItem>\r\n          </Select>\r\n        </form>\r\n        <Button \r\n          className={classes.submitBtn} \r\n          variant=\"contained\" \r\n          color=\"primary\"\r\n          // onClick={onSubmit}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n});","import indigo from \"@material-ui/core/colors/indigo\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst primaryColor = indigo;\r\nconst secondaryColor = green;\r\n\r\nconst themeConfig = {\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: green,\r\n    error: red,\r\n    // Used by `getContrastText()` to maximize the contrast between the background and\r\n    // the text.\r\n    contrastThreshold: 3,\r\n    // Used to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2\r\n  }\r\n};\r\n\r\n// All the following keys are optional.\r\n// We try our best to provide a great default value.\r\nconst defaultTheme = themeConfig;\r\n\r\nexport const settings = createSlice({\r\n  name: 'settings',\r\n  initialState: {\r\n    theme: defaultTheme,\r\n    darkMode: false,\r\n    colorsSwaped: false\r\n  },\r\n  reducers: {\r\n    toggleThemeMode: (state, action) => {\r\n      if (action.payload) { //darknode set\r\n        state.darkMode = true;\r\n        state.theme = {\r\n          ...themeConfig,\r\n          palette: {\r\n            ...themeConfig.palette,\r\n            primary: state.theme.palette.primary,\r\n            secondary: state.theme.palette.secondary,\r\n            type: \"dark\"\r\n          }\r\n        };\r\n      } else {\r\n        state.darkMode = false;\r\n        state.theme = {\r\n          ...themeConfig,\r\n          palette: {\r\n            ...themeConfig.palette,\r\n            primary: state.theme.palette.primary,\r\n            secondary: state.theme.palette.secondary\r\n          }\r\n        };\r\n      }\r\n\r\n      state.value = action.payload;\r\n    },\r\n    swapThemeColors: (state, action) => {\r\n      if (action.payload) { // colorsSwaped\r\n        state.colorsSwaped = true;\r\n        state.theme = {\r\n            ...themeConfig,\r\n            palette: {\r\n              ...state.theme.palette,\r\n              primary: secondaryColor,\r\n              secondary: primaryColor\r\n            }\r\n          };\r\n      } else {\r\n        state.colorsSwaped = false;\r\n        state.theme = {\r\n          ...themeConfig,\r\n          palette: {\r\n            ...state.theme.palette,\r\n            primary: primaryColor,\r\n            secondary: secondaryColor\r\n          }\r\n        };\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleThemeMode, swapThemeColors } = settings.actions;\r\n\r\nexport const isDarkMode = state => state.settings.darkMode;\r\n\r\nexport const isColorSwaped = state => state.settings.colorsSwaped;\r\n\r\nexport const getTheme = state => state.settings.theme;\r\n\r\nexport default settings.reducer;","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport PaletteIcon from \"@material-ui/icons/Palette\";\r\nimport CompareArrowsIcon from \"@material-ui/icons/CompareArrows\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { toggleThemeMode, swapThemeColors, isDarkMode, isColorSwaped } from \"./settingsReducer\";\r\n\r\nexport default function Setting() {\r\n\r\n  const darkMode = useSelector(isDarkMode);\r\n  const colorSwaped = useSelector(isColorSwaped);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n  <div>\r\n    <Typography variant=\"h5\">Settings</Typography>\r\n    <Card>\r\n      <CardContent>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <PaletteIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dark Mode\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                onChange={(e, checked) =>  dispatch(toggleThemeMode(checked))}\r\n                checked={darkMode}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <CompareArrowsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Swap Colors\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                onChange={(e, checked) => dispatch(swapThemeColors(checked))}\r\n                checked={colorSwaped}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  </div>);\r\n};\r\n","import Header from \"./Header\";\r\nexport default Header;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  toolbarRoot: {\r\n    paddingRight: 24\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\nconst Header = props => {\r\n  const { classes, handleToggleDrawer } = props;\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <Toolbar disableGutters={true} classes={{ root: classes.toolbarRoot }}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"Open drawer\"\r\n          onClick={handleToggleDrawer}\r\n          className={classes.menuButton}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          Customize Programme Structure\r\n        </Typography>\r\n        {/* <IconButton color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton color=\"inherit\">\r\n          <PersonIcon />\r\n        </IconButton> */}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","import Sidebar from \"./Sidebar\";\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  drawerPaper: {\r\n    position: \"fixed\",\r\n    top: theme.spacing(8),\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(8),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  }\r\n});\r\n\r\nconst Sidebar = props => {\r\n  const { open, classes } = props;\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: classNames(\r\n          classes.drawerPaper,\r\n          !open && classes.drawerPaperClose\r\n        )\r\n      }}\r\n      open={open}\r\n    >\r\n      <List>\r\n        <Link to=\"/\">\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/admin\">\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <PermIdentityIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Admin\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/setting\">\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <SettingsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Settings\" />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Sidebar);\r\n","import React, { Fragment, Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing(9),\r\n    padding: theme.spacing(3),\r\n    marginTop: theme.spacing(7),\r\n    overflowX: \"hidden\"\r\n  },\r\n  contentShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  }\r\n});\r\n\r\nclass MainLayout extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleToggleDrawer = () => {\r\n    this.setState(prevState => {\r\n      return { open: !prevState.open };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, children } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <div className={classes.root}>\r\n          <Header\r\n            handleToggleDrawer={this.handleToggleDrawer}\r\n          />\r\n          <main\r\n            className={classNames(classes.content, {\r\n              [classes.contentShift]: this.state.open\r\n            })}\r\n          >\r\n            {children}\r\n          </main>\r\n        </div>\r\n        <Sidebar open={this.state.open} drawerWidth={drawerWidth} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MainLayout);\r\n","import React from \"react\";\r\n\r\nconst EmptyLayout = props => {\r\n  return <div style={{ height: \"inherit\" }}>{props.children}</div>;\r\n};\r\n\r\nexport default EmptyLayout;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Home from \"./containers/Home/Home\";\r\nimport Admin from \"./containers/Admin/Admin\";\r\nimport Setting from \"./containers/Setting/Setting\";\r\n\r\nimport MainLayout from \"./layouts/MainLayout\";\r\nimport EmptyLayout from \"./layouts/EmptyLayout\";\r\n\r\nimport { getTheme } from \"./containers/Setting/settingsReducer\";\r\n\r\nconst NotFound = () => {\r\n  return <div>NotFound</div>;\r\n};\r\n\r\nconst DashboardRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={matchProps => (\r\n        <MainLayout>\r\n          <Component {...matchProps} />\r\n        </MainLayout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst EmptyRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={matchProps => (\r\n        <EmptyLayout>\r\n          <Component {...matchProps} />\r\n        </EmptyLayout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n\r\n  const theTheme = useSelector(getTheme);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={createMuiTheme(theTheme)}>\r\n      <CssBaseline />\r\n      <div style={{ height: \"100vh\" }}>\r\n        <Router>\r\n          <Switch>\r\n            <DashboardRoute path=\"/dashboard\" component={Home} />\r\n            <DashboardRoute path=\"/admin\" component={Admin} />\r\n            <DashboardRoute path=\"/setting\" component={Setting} />\r\n            <DashboardRoute exact path=\"/\" component={Home} />\r\n            <EmptyRoute component={NotFound} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n};","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport settings from \"../containers/Setting/settingsReducer\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    settings: settings\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
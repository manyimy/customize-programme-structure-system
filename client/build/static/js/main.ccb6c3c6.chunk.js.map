{"version":3,"sources":["serviceWorker.js","containers/Home/quontoComponent.js","components/Home/transferList.js","components/Home/psTable.js","containers/Home/Home.js","components/Admin/Login.js","components/Admin/EditSubjectList.js","components/Admin/EditSPS.js","containers/Admin/Admin.js","containers/Setting/settingsReducer.js","containers/Setting/Setting.js","components/Header/index.js","components/Header/Header.js","components/Sidebar/index.js","components/Sidebar/Sidebar.js","layouts/MainLayout.js","layouts/EmptyLayout.js","App.js","store/index.js","index.js"],"names":["Boolean","window","location","hostname","match","withStyles","alternativeLabel","top","left","right","active","borderColor","completed","line","borderTopWidth","borderRadius","StepConnector","makeStyles","root","color","display","height","alignItems","circle","width","backgroundColor","zIndex","fontSize","ColorlibConnector","backgroundImage","border","useColorlibStepIconStyles","justifyContent","boxShadow","ColorlibStepIcon","props","classes","icons","1","2","3","className","clsx","String","icon","theme","button","marginRight","spacing","instructions","marginTop","marginBottom","useStyles","margin","cardHeader","padding","list","palette","background","paper","overflow","TransferList","rightCallback","React","useState","checked","setChecked","setLeft","setRight","useEffect","axios","get","process","then","response","subject","Array","from","Map","data","entries","map","entry","key","value","push","name","not","a","b","filter","indexOf","intersection","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","splice","numberOfChecked","items","length","handleToggleAll","customList","title","Card","CardHeader","avatar","Checkbox","onClick","indeterminate","disabled","inputProps","subheader","Divider","List","dense","component","role","labelId","ListItem","ListItemIcon","tabIndex","disableRipple","ListItemText","id","primary","Grid","container","style","placeItems","item","direction","Button","variant","size","concat","sort","aria-label","require","config","alignItem","table","maxWidth","PSTable","selectedPS","setSelectedPS","transferredCH","setStandardPS","setSubjectList","i","trans","substr","console","log","API_PATH","res","subList","generatedPS","generateCPS","catch","err","standard","afterTransferPS","ch2d","creditHour","element","intake","PS","spec","code","val","includes","ch","set","defaultYear","defaultTri","priorityList","subj","yearPriority","has","offer","prereq","forEach","sortedList","toBePlacedSubjects","thisYear","thisTri","maxCHOfTri","shortLimit","longLimit","candidateSubject","anyReplaceble","sortPSMap","index","keys","prioritySubjectCode","meetPrerequisite","toSortPS","sortedPS","y","t","toCheckSubject","isMeet","sumCH","minCHRequire","year","tri","totalCHTransferred","transSubject","sumTransferredCH","prereqSubjCode","yearNum","type","formControl","minWidth","btnContainer","float","downloadBtn","inputAlert","position","inlineSize","marginLeft","pstable","textAlign","steps","Home","activeStep","setActiveStep","intakeInputSize","setIntakeInputSize","specInputSize","setSpecInputSize","Specs","setSpecs","standardPS","Date","getFullYear","setData","setTimerId","longTriCHLimit","setLongTriCHLimit","shortTriCHLimit","setShortTriCHLimit","innerWidth","setRightCallback","useCallback","handleBack","prevActiveStep","handleChange","event","target","updateData","showError","document","getElementById","setTimeout","tablesToExcel","format","s","c","replace","m","p","e","tables","wsnames","wbname","appname","preventDefault","workbookXML","ctx","worksheetsXML","rowsXML","nodeType","j","rows","k","cells","dataType","getAttribute","dataStyle","dataValue","innerHTML","dataFormula","attributeStyleID","nameType","attributeFormula","nameWS","created","getTime","worksheets","link","createElement","href","btoa","unescape","encodeURIComponent","download","body","appendChild","click","removeChild","Alert","severity","Stepper","connector","label","Step","StepLabel","StepIconComponent","xs","Paper","FormControl","required","InputLabel","htmlFor","Select","native","onChange","FormHelperText","Typography","gutterBottom","Slider","aria-labelledby","step","min","max","valueLabelDisplay","marks","newValue","loginUser","credentials","fetch","method","headers","JSON","stringify","json","loginWrapper","flexDirection","secondary","main","form","submit","state","username","password","this","handleSubmit","token","parentCallback","Container","CssBaseline","Avatar","noValidate","onSubmit","TextField","fullWidth","autoFocus","setState","autoComplete","Component","elevation","btnSL","listPaper","gridContainer","codeInput","addBtnGrid","addBtn","multiSelect","inputFullWidth","inputSelection","EditSubjectList","subjects","setSubjects","openAddPop","setOpenAddPop","addPopMsg","setAddPopMsg","alertSev","setAlertSev","newCode","setNewCode","newSubject","setNewSubject","newCH","setNewCH","newOffer","setNewOffer","newPreReq","setNewPreReq","openDialog","setOpenDialog","deletingItem","setDeletingItem","removeMsg","setRemoveMsg","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","handleCloseSnackbar","handleCloseDialog","toString","IconButton","handleOpenDialog","edge","placeholder","maxLength","Number","multiple","displayEmpty","input","OutlinedInput","renderValue","selected","font","join","MenuItem","trim","post","Snackbar","open","autoHideDuration","onClose","Dialog","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","delete","selectionCont","overflowX","tableBody","overflowY","typoh1","saveBtn","bottom","selectEmpty","speedDial","EditSPS","years","setYears","subjectList","selectionDisable","setSelectionDisable","openSnackbar","setOpenSnackbar","snackbarMsg","setSnackbarMsg","snackbarSev","setSnackbarSev","openDeletePS","setOpenDeletePS","openDeletePSDialog","setOpenDeletePSDialog","openSpeedDial","setOpenSpeedDial","toDeleteSubject","setToDeleteSubject","selectedIntake","setSelectedIntake","selectedSpec","setSelectedSpec","editingPS","setEditingPS","standardIndex","setStandardIndex","openAddPS","setOpenAddPS","openCopyPS","setOpenCopyPS","newIntakeMonth","setNewIntakeMonth","newIntakeYear","setNewIntakeYear","copyFromIntake","setCopyFromIntake","toDeleteIntake","setToDeleteIntake","toDeleteSpec","setToDeleteSpec","inputs","setInputs","actions","action","handleActionAddPS","handleActionCopyPS","handleActionCloseEditPS","handleActionEditPS","handleActionDeletePS","inputIndex","updateInputs","handleCloseDeletePSDialog","handleCloseAddPSDialog","handleCloseCopyPSDialog","SpeedDial","ariaLabel","hidden","SpeedDialIcon","onOpen","SpeedDialAction","tooltipTitle","TableContainer","yearIndex","Table","stickyHeader","updatePS","handleAdd","TableHead","TableRow","TableCell","align","TableBody","scope","subjectCode","Tooltip","Fab","map1","map2","testVal","undefined","compareMaps","copyStandard","parse","emptyInputs","newPS","mapCopy","temp","intakes","newIntakePS","currentPS","copyOfSelectedPS","flexGrow","TabPanel","children","other","Box","a11yProps","Admin","tokenString","sessionStorage","getItem","userToken","getToken","activeTab","setActiveTab","Tabs","indicatorColor","textColor","centered","Tab","primaryColor","indigo","secondaryColor","green","themeConfig","typography","useNextVariants","error","red","contrastThreshold","tonalOffset","defaultTheme","settings","createSlice","initialState","darkMode","colorsSwaped","reducers","toggleThemeMode","payload","swapThemeColors","isDarkMode","isColorSwaped","getTheme","Setting","useSelector","colorSwaped","dispatch","useDispatch","CardContent","ListItemSecondaryAction","Switch","Header","toolbarRoot","paddingRight","menuButton","handleToggleDrawer","AppBar","Toolbar","disableGutters","noWrap","Sidebar","drawerPaper","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","leavingScreen","breakpoints","up","Drawer","classNames","to","textDecoration","MainLayout","prevState","content","contentShift","drawerWidth","EmptyLayout","NotFound","DashboardRoute","rest","render","matchProps","EmptyRoute","App","theTheme","createMuiTheme","path","exact","configureStore","reducer","ReactDOM","StrictMode","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kNAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qQCRwBC,YAAW,CACrCC,iBAAkB,CAChBC,IAAK,GACLC,KAAM,oBACNC,MAAO,oBAETC,OAAQ,CACN,UAAW,CACTC,YAAa,YAGjBC,UAAW,CACT,UAAW,CACTD,YAAa,YAGjBE,KAAM,CACJF,YAAa,UACbG,eAAgB,EAChBC,aAAc,IAnBUV,CAqBzBW,KAEmCC,YAAW,CAC/CC,KAAM,CACJC,MAAO,UACPC,QAAS,OACTC,OAAQ,GACRC,WAAY,UAEdZ,OAAQ,CACNS,MAAO,WAETI,OAAQ,CACNC,MAAO,EACPH,OAAQ,EACRN,aAAc,MACdU,gBAAiB,gBAEnBb,UAAW,CACTO,MAAO,UACPO,OAAQ,EACRC,SAAU,MA8BP,IAAMC,EAAoBvB,YAAW,CAC1CC,iBAAkB,CAChBC,IAAK,IAEPG,OAAQ,CACN,UAAW,CACTmB,gBACE,uFAGNjB,UAAW,CACT,UAAW,CACTiB,gBACE,uFAGNhB,KAAM,CACJQ,OAAQ,EACRS,OAAQ,EACRL,gBAAiB,UACjBV,aAAc,IApBeV,CAsB9BW,KAEUe,EAA4Bd,YAAW,CAClDC,KAAM,CACJO,gBAAiB,OACjBC,OAAQ,EACRP,MAAO,OACPK,MAAO,GACPH,OAAQ,GACRD,QAAS,OACTL,aAAc,MACdiB,eAAgB,SAChBV,WAAY,UAEdZ,OAAQ,CACNmB,gBACE,yFACFI,UAAW,gCAEbrB,UAAW,CACTiB,gBACE,4FAIC,SAASK,EAAiBC,GAAQ,IAAD,EAChCC,EAAUL,IACRrB,EAAsByB,EAAtBzB,OAAQE,EAAcuB,EAAdvB,UAEVyB,EAAQ,CACZC,EAAG,kBAAC,IAAD,MACHC,EAAG,kBAAC,IAAD,MACHC,EAAG,kBAAC,IAAD,OAGL,OACE,yBACEC,UAAWC,YAAKN,EAAQlB,MAAT,mBACZkB,EAAQ1B,OAASA,GADL,cAEZ0B,EAAQxB,UAAYA,GAFR,KAKdyB,EAAMM,OAAOR,EAAMS,QAoBD3B,aAAW,SAAC4B,GAAD,MAAY,CAC9C3B,KAAM,CACJM,MAAO,QAETsB,OAAQ,CACNC,YAAaF,EAAMG,QAAQ,IAE7BC,aAAc,CACZC,UAAWL,EAAMG,QAAQ,GACzBG,aAAcN,EAAMG,QAAQ,Q,qGChK5BI,EAAYnC,aAAW,SAAC4B,GAAD,MAAY,CACvC3B,KAAM,CACJmC,OAAQ,QAEVC,WAAY,CACVC,QAASV,EAAMG,QAAQ,EAAG,IAE5BQ,KAAM,CACJhC,MAAO,IACPH,OAAQ,IACRI,gBAAiBoB,EAAMY,QAAQC,WAAWC,MAC1CC,SAAU,QAEZd,OAAQ,CACNO,OAAQR,EAAMG,QAAQ,GAAK,QAIhB,SAASa,EAAT,GAAwC,IAAjBC,EAAgB,EAAhBA,cAC9B1B,EAAUgB,IAEhB,EAA8BW,IAAMC,SAAS,IAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBH,IAAMC,SAAS,IAAvC,mBAAOxD,EAAP,KAAa2D,EAAb,KACA,EAA0BJ,IAAMC,SAAS,IAAzC,mBAAOvD,EAAP,KAAc2D,EAAd,KAWAC,qBAAU,WACRC,IAAMC,IAAIC,0CACPC,MAAK,SAACC,GACL,IAAIC,EAAU,GACdC,MAAMC,KAAK,IAAIC,IAAIJ,EAASK,MAAMC,WAC/BC,KAAI,SAACC,GACJ,kBAAqBA,EAArB,GAAOC,EAAP,KAAYC,EAAZ,KACA,OAAOT,EAAQU,KAAKF,EAAM,IAAMC,EAAME,SAE1CnB,EAAQQ,QAGX,IAcH,IAAMY,EAAM,SAACC,EAAGC,GACd,OAAOD,EAAEE,QAAO,SAACN,GAAD,OAAiC,IAAtBK,EAAEE,QAAQP,OAGjCQ,EAAe,SAACJ,EAAGC,GACvB,OAAOD,EAAEE,QAAO,SAACN,GAAD,OAAiC,IAAtBK,EAAEE,QAAQP,OAOjCS,EAAcD,EAAa3B,EAASzD,GACpCsF,EAAeF,EAAa3B,EAASxD,GAErCsF,EAAe,SAACX,GAAD,OAAW,WAC9B,IAAMY,EAAe/B,EAAQ0B,QAAQP,GAC/Ba,EAAU,YAAOhC,IAED,IAAlB+B,EACFC,EAAWZ,KAAKD,GAEhBa,EAAWC,OAAOF,EAAc,GAIlC9B,EAAW+B,KAGPE,EAAkB,SAACC,GAAD,OAAWR,EAAa3B,EAASmC,GAAOC,QAE1DC,EAAkB,SAACF,GAAD,OAAW,WAvBrB,IAACZ,EAAGC,EAwBZU,EAAgBC,KAAWA,EAAMC,OACnCnC,EAAWqB,EAAItB,EAASmC,IAExBlC,GA3BWsB,EA2BMvB,EA3BHwB,EA2BYW,EA1BtB,GAAN,mBAAWZ,GAAX,YAAiBD,EAAIE,EAAGD,SAiDpBe,EAAa,SAACC,EAAOJ,GAAR,OACjB,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEjE,UAAWL,EAAQkB,WACnBqD,OACE,kBAACC,EAAA,EAAD,CACEC,QAASP,EAAgBF,GACzBnC,QAASkC,EAAgBC,KAAWA,EAAMC,QAA2B,IAAjBD,EAAMC,OAC1DS,cAAeX,EAAgBC,KAAWA,EAAMC,QAAqC,IAA3BF,EAAgBC,GAC1EW,SAA2B,IAAjBX,EAAMC,OAChBW,WAAY,CAAE,aAAc,2BAGhCR,MAAOA,EACPS,UAAS,UAAKd,EAAgBC,GAArB,YAA+BA,EAAMC,OAArC,eAEX,kBAACa,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAM1E,UAAWL,EAAQoB,KAAM4D,OAAK,EAACC,UAAU,MAAMC,KAAK,QACvDlB,EAAMnB,KAAI,SAACG,GAER,IAAMmC,EAAO,iCAA6BnC,EAA7B,UAEb,OACE,kBAACoC,EAAA,EAAD,CAAUrC,IAAKC,EAAOkC,KAAK,WAAWxE,QAAM,EAAC+D,QAASd,EAAaX,IACjE,kBAACqC,EAAA,EAAD,KACE,kBAACb,EAAA,EAAD,CACE3C,SAAqC,IAA5BA,EAAQ0B,QAAQP,GACzBsC,UAAW,EACXC,eAAa,EACbX,WAAY,CAAE,kBAAmBO,MAGrC,kBAACK,EAAA,EAAD,CAAcC,GAAIN,EAASO,QAAO,UAAK1C,SAK/C,kBAACoC,EAAA,EAAD,SAKN,OACE,kBAACO,EAAA,EAAD,CACEC,WAAS,EACThF,QAAS,EACTiF,MAAO,CAACjG,eAAgB,SAAUkG,WAAY,UAC9CzF,UAAWL,EAAQlB,MAEnB,kBAAC6G,EAAA,EAAD,CAAMI,MAAI,GAAE5B,EAAW,eAAgB/F,IACvC,kBAACuH,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,UAAU,SAAS9G,WAAW,UAC5C,kBAAC+G,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,QACL9F,UAAWL,EAAQU,OACnB+D,QA3EiB,WAEzBzC,EAAS3D,EAAM+H,OAAO3C,GAAa4C,QACnC3E,EAAcrD,EAAM+H,OAAO3C,GAAa4C,QACxCtE,EAAQoB,EAAI/E,EAAMqF,GAAa4C,QAC/BvE,EAAWqB,EAAItB,EAAS4B,GAAa4C,SAuE7B1B,SAAiC,IAAvBlB,EAAYQ,OACtBqC,aAAW,uBANb,KAUA,kBAACL,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,QACL9F,UAAWL,EAAQU,OACnB+D,QA7EgB,WAKxB1C,EAAQ3D,EAAKgI,OAAO1C,GAAc2C,QAClCrE,EAASmB,EAAI9E,EAAOqF,GAAc2C,QAClC3E,EAAcyB,EAAI9E,EAAOqF,GAAc2C,QACvCvE,EAAWqB,EAAItB,EAAS6B,GAAc2C,SAsE9B1B,SAAkC,IAAxBjB,EAAaO,OACvBqC,aAAW,sBANb,OAYJ,kBAACX,EAAA,EAAD,CAAMI,MAAI,GAAE5B,EAAW,8BAA+B9F,K,mBC1M5DkI,EAAQ,KAAUC,SAClB,IAGMxF,GAAYnC,aAAW,SAAC4B,GAAD,MAAY,CACvCmF,UAAW,CACTa,UAAW,UAEbC,MAAO,CACLC,SAAU,YAGC,SAASC,GAAQ7G,GAC9B,IAAMC,EAAUgB,KAGhB,EAAoCY,mBAAS,IAAIc,KAAjD,mBAAOmE,EAAP,KAAmBC,EAAnB,KACA,EAA0ClF,mBAAS,GAAnD,mBAAOmF,EAAP,KACA,GADA,KACoCnF,mBAAS,KAA7C,mBAAmBoF,GAAnB,WACA,EAAsCpF,qBAAtC,mBAAoBqF,GAApB,WAYAhF,qBAAU,WAER,IAAK,IAAIiF,EAAI,EAAGA,EAAInH,EAAMoH,MAAMlD,OAAQiD,IACtCnH,EAAMoH,MAAMD,GAAKnH,EAAMoH,MAAMD,GAAGE,OAAO,EAAGrH,EAAMoH,MAAMD,GAAG3D,QAAQ,MAEnE8D,QAAQC,IAAIvH,EAAMoH,OAGlBjF,IACGC,IAAIoF,0CACJlF,MAAK,SAACmF,GACL,IAAIC,EAAU,IAAI/E,IAAI8E,EAAI7E,MAC1BsE,EAAeQ,GAEfvF,IACGC,IAAIoF,yCACJlF,MAAK,SAACC,GACL,IAAIoF,EAAcC,EAAY,IAAIjF,IAAI8E,EAAI7E,MAAOL,EAASK,MAE1DqE,EAAc1E,EAASK,MACvBmE,EAAcY,MACbE,OAAM,SAACC,GACRR,QAAQC,IAAIO,SAEfD,OAAM,SAACC,GACRR,QAAQC,IAAIO,MAEhBR,QAAQC,IAAIvH,EAAMoH,SACjB,IAQH,IAAMQ,EAAc,SAACF,EAASK,GAC5B,IAAIC,EAAkB,IAAIrF,IACtBsF,EAAO,GACXA,EAAK/E,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,IAC/BoE,QAAQC,IAAIU,GAGZ,IAFA,IAAIC,EAtEO,IAwEFf,EAAI,EAAGA,EAAIY,EAAS7D,OAAQiD,IAAK,CACxC,IAAMgB,EAAUJ,EAASZ,GAKzB,GAAIgB,EAAQC,SAAWpI,EAAMoI,OAAQ,CAKnC,GAJAd,QAAQC,IAAIY,EAAQE,GAAGrI,EAAMsI,OAIF,IAAvBtI,EAAMoH,MAAMlD,OACd,OAAO,IAAIvB,IAAIwF,EAAQE,GAAGrI,EAAMsI,OAIlC,IAVmC,gBAWTH,EAAQE,GAAGrI,EAAMsI,OAXR,IAWnC,2BAAkD,CAAC,IAAD,yBAAtCC,EAAsC,KAAhCC,EAAgC,KAChDlB,QAAQC,IAAIgB,GACZjB,QAAQC,IAAIiB,GAGPxI,EAAMoH,MAAMqB,SAASF,GAKxBL,GAAcM,EAAIE,IAJlBV,EAAgBW,IAAIJ,EAAMC,GAC1BP,EAAKO,EAAII,YAAY,GAAGJ,EAAIK,WAAW,IAAML,EAAIE,KAlBlB,8BAwBnCpB,QAAQC,IAAIU,GACZX,QAAQC,IAAI,+BAAiCW,GAkB7C,IA3CmC,EA2C/BY,EAAe,IAAInG,IA3CY,cA4CRqF,GA5CQ,IA4CnC,2BAA4C,CAAC,IAAD,yBAAhCO,EAAgC,KAA1BQ,EAA0B,KAOtCC,EAAoC,IAApBD,EAAKF,WAAqC,IAAjBE,EAAKH,YAAmB,IAAwB,IAAjBG,EAAKH,YAEjFE,EAAaH,IAAIJ,EAAMS,EAA+B,IAAhBD,EAAKF,WAAiB,KArD3B,8BAwDnCvB,QAAQC,IAAIS,GACZV,QAAQC,IAAIuB,GACZxB,QAAQC,IAAIG,GA1DuB,oBA6DRA,GA7DQ,IA6DnC,2BAAoC,CAAC,IAAD,yBAAxB1E,EAAwB,KAAnBC,EAAmB,KAC/B6F,EAAaG,IAAIjG,KAIQ,IAAvBC,EAAMiG,MAAMhF,QACb4E,EAAaH,IAAI3F,EAAK8F,EAAa1G,IAAIY,GAAK,IAE9CC,EAAMkG,OAAOC,SAAQ,SAAAD,GAChBL,EAAaG,IAAIE,IAClBL,EAAaH,IAAIQ,EAAQL,EAAa1G,IAAI+G,GAAQ,SAvEvB,8BA6EnC,IAAIE,EAAa,IAAI1G,IAAI,YAAImG,EAAajG,WAAWyD,MAAK,SAACjD,EAAGC,GAAJ,OAAUD,EAAE,GAAKC,EAAE,OAE7EwF,EAAe,IAAInG,IAAI0G,GACvB/B,QAAQC,IAAIuB,GAIZ,IApFmC,EAoF/BQ,EAAqB,GApFU,cAqFTtB,GArFS,IAqFnC,2BAA2C,CAAC,IAAD,yBAA/BO,EAA+B,UACzCe,EAAmBpG,KAAKqF,IAtFS,8BAwFnCjB,QAAQC,IAAI+B,GAMZ,IAAK,IAAIC,EAAW,EAAGA,GAAY,EAAGA,IACpC,IAAK,IAAIC,EAAU,EAAGA,GAAW,EAAGA,IAAW,qBAGnBxB,GAHmB,IAG7C,2BAA2C,CAAC,IAAD,yBAA/BO,EAA+B,KAAzBC,EAAyB,KACtCA,EAAII,aAAeW,GAAYf,EAAIK,YAAcW,GAAWF,EAAmBb,SAASF,IACzFe,EAAmBvF,OAAOuF,EAAmB9F,QAAQ+E,GAAO,IALnB,8BAS7CjB,QAAQC,IAAI+B,GAEZ,IAAIG,EAAwB,IAAVD,EAAexJ,EAAM0J,WAAa1J,EAAM2J,UACtDC,EAAmBC,EAAcN,EAAUC,EAASV,EAAcQ,EAAoB5B,EAASO,EAAMwB,EAAYzB,GAGrH,IAFAV,QAAQC,IAAI,oBACZD,QAAQC,IAAIqC,GACN3B,EAAKsB,EAAS,GAAGC,EAAQ,IAAMC,GAAcG,GAAkB,CAAC,IAAD,gBAE3C5B,GAF2C,IAEnE,2BAAyC,CAAC,IAAD,yBAA/BO,EAA+B,KAAzBC,EAAyB,KACvC,GAAGD,IAASqB,EAAkB,CAC5BtC,QAAQC,IAAI,YAAcgB,GAC1BjB,QAAQC,IAAIiB,GACZP,EAAKO,EAAII,YAAY,GAAGJ,EAAIK,WAAW,IAAML,EAAIE,GACjDF,EAAIK,WAAaW,EACjBhB,EAAII,YAAcW,EAClBtB,EAAKsB,EAAS,GAAGC,EAAQ,IAAMhB,EAAIE,GACnCY,EAAmBvF,OAAOuF,EAAmB9F,QAAQoG,GAAmB,GACxE,QAX+D,8BAcnEA,EAAmBC,EAAcN,EAAUC,EAASV,EAAcQ,EAAoB5B,EAASO,EAAMwB,EAAYzB,GACjHV,QAAQC,IAAI,oBACZD,QAAQC,IAAIqC,GAEdtC,QAAQC,IAAIU,EAAKsB,EAAS,GAAGC,EAAQ,IAGzC,OAIJ,OADAlC,QAAQC,IAAIS,GACL8B,EAAU9B,IAIb6B,EAAgB,SAACN,EAAUC,EAASV,EAAcQ,EAAoB5B,EAASO,EAAMwB,EAAYzB,GACrGV,QAAQC,IAAI+B,GACZ,IAAK,IAAIS,EAAQ,EAAGA,EAAQtH,MAAMC,KAAKoG,EAAakB,QAAQ9F,OAAQ6F,IAAS,CAC3E,IAAME,EAAsBxH,MAAMC,KAAKoG,EAAakB,QAAQD,GAC5D,GAAGrC,EAAQtF,IAAI6H,IAAwBX,EAAmBb,SAASwB,IAAwBvC,EAAQtF,IAAI6H,GAAqBf,MAAMT,SAASe,IACvIvB,EAAKsB,EAAS,GAAGC,EAAQ,GAAK9B,EAAQtF,IAAI6H,GAAqBvB,IAAMe,GAAcS,EAAiBD,EAAqBV,EAAUC,EAASxB,EAAiBN,EAASO,GAGxK,OADAX,QAAQC,IAAI0C,GACLA,EAGX,OAAO,MAIHH,EAAY,SAACK,GAEjB,IADA,IAAIC,EAAW,IAAIzH,IACV0H,EAAI,EAAGA,GAAK,EAAGA,IACtB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAAC,IAAD,gBACHH,GADG,IAC3B,2BAAkC,CAAC,IAAD,yBAAxB5B,EAAwB,KAAlBC,EAAkB,KAC7BA,EAAII,cAAcyB,GAAK7B,EAAIK,aAAayB,GACzCF,EAASzB,IAAIJ,EAAMC,IAHI,+BAQ/B,OAAO4B,GAkBHF,EAAmB,SAACK,EAAgBhB,EAAUC,EAASxB,EAAiBN,EAASO,GACrF,IAAIuC,GAAS,EAEb,GADAlD,QAAQC,IAAIP,GACU,YAAnBuD,GAAgCA,EAAe9B,SAAS,WAAY,CACrEnB,QAAQC,IAAI,sBAAwBgD,GAGpC,IAFA,IAAIE,EAAQ,EACNC,EAAmC,YAAnBH,EAAgC,GAAK,GAClDI,EAAO,EAAGA,EAAOpB,EAAUoB,IAClC,IAAK,IAAIC,EAAM,EAAGA,EAAMpB,EAASoB,IAC/BH,GAASxC,EAAK0C,GAAMC,GAIxBJ,IAAUC,EA3BW,SAAC/C,GACxB,IAAImD,EAAqB,EAIzB,OAHA7K,EAAMoH,MAAMgC,SAAQ,SAAA0B,GAClBD,GAAsBnD,EAAQtF,IAAI0I,GAAcpC,MAE3CmC,EAsBWE,CAAiBrD,GAAWgD,GAY9C,OATGF,GACD9C,EAAQtF,IAAImI,GAAgBpB,OAAOC,SAAQ,SAAC4B,GAC1C1D,QAAQC,IAAIvH,EAAMoH,MAAMqB,SAASuC,IAC9BhD,EAAgB5F,IAAI4I,KAAoBhD,EAAgB5F,IAAI4I,GAAgBpC,YAAcW,GACxFvB,EAAgB5F,IAAI4I,GAAgBpC,cAAgBW,GAAYvB,EAAgB5F,IAAI4I,GAAgBnC,YAAcW,KACrHgB,GAAS,MAIRA,GAGT,OACE,yBAAKlK,UAAWL,EAAQ4F,WACrB,CAAC,EAAE,EAAE,GAAG/C,KAAI,SAACmI,GACZ,OACE,oCACA,oCAAUA,GACV,2BAAOvF,GAAI,aAAauF,EAAS3K,UAAWL,EAAQ0G,OAClD,4BACE,wBAAIb,MAAO,CAAC1E,QAAS,WAAY/B,MAAO,QAAxC,YACA,wBAAIyG,MAAO,CAAC1E,QAAS,WAAY/B,MAAO,QAAxC,gBACA,wBAAIyG,MAAO,CAAC1E,QAAS,WAAY/B,MAAO,QAAxC,gBACA,wBAAIyG,MAAO,CAAC1E,QAAS,WAAY/B,MAAO,OAAxC,MACA,wBAAIyG,MAAO,CAAC1E,QAAS,WAAY/B,MAAO,QAAxC,cAEDoD,MAAMC,KAAKoE,EAAWjE,WAAWC,KAAI,SAACC,GACrC,kBAAoBA,EAApB,GAAOwF,EAAP,KAAaC,EAAb,KACA,OAAIA,EAAII,cAAgBqC,EAEpB,4BACE,4BAAKzC,EAAI0C,MACT,4BAAK3C,GACL,4BAAKC,EAAIrF,MACT,4BAAKqF,EAAIE,IACT,4BAAKF,EAAIK,aAIN,8C,iCC3SjB5H,GAAYnC,aAAW,SAAC4B,GAAD,MAAY,CACvCyK,YAAa,CACXjK,OAAQR,EAAMG,QAAQ,GACtBuK,SAAU,QAEZvF,UAAW,CACTvG,gBAAiBoB,EAAMY,QAAQC,WAAWC,OAE5C6J,aAAc,CACZC,MAAO,SAETC,YAAa,CACXrK,OAAQR,EAAMG,QAAQ,GAAK,GAC3BO,QAAUV,EAAMG,QAAQ,EAAG,MAE7B2K,WAAY,CACV1L,UAAW,kBACX2L,SAAU,WACVlM,OAAQ,IACRmM,WAAY,cACZC,WAAY,OACZ/K,YAAa,OACbvC,KAAM,EACNC,MAAO,EACPW,QAAS,QAEX2M,QAAS,CACPC,UAAW,sBAITC,GH6HK,CAAC,qBAAsB,gCG3HnB,SAASC,GAAK/L,GAC3B,IAAMC,EAAUgB,KAChB,EAAoCY,mBAAS,GAA7C,mBAAOmK,EAAP,KAAmBC,EAAnB,KACA,EAA8CpK,mBAAS,GAAvD,mBAAOqK,EAAP,KAAwBC,EAAxB,KACA,EAA0CtK,mBAAS,GAAnD,mBAAOuK,EAAP,KAAsBC,EAAtB,KACA,EAA0BxK,mBAAS,IAAnC,mBAAOyK,EAAP,KAAcC,EAAd,KACA,EAAoC1K,mBAAS,IAA7C,mBAAO2K,EAAP,KAAmBvF,EAAnB,KACA,EAAwBpF,mBACtB,CACEuG,OAAQ,GACRuC,MAAO,IAAI8B,MAAQC,cACnBpE,KAAM,KAJV,mBAAO1F,EAAP,KAAa+J,EAAb,KAOA,EAA8B9K,mBAAS,MAAvC,mBAAgB+K,GAAhB,WACA,EAA0B/K,mBAAS,IAAnC,mBAAOvD,EAAP,KAAc2D,EAAd,KACA,EAA4CJ,mBAAS,IAArD,mBAAOgL,GAAP,KAAuBC,GAAvB,KACA,GAA8CjL,mBAAS,IAAvD,qBAAOkL,GAAP,MAAwBC,GAAxB,MAsBA9K,qBAAU,WACLpE,OAAOmP,YAAc,MACtBd,EAAmB,GACnBE,EAAiB,IAEnBlK,IAAMC,IAAIC,yCACPC,MAAK,SAACC,GACL0E,EAAc1E,EAASK,SAG3BT,IAAMC,IAAIC,oCACPC,MAAK,SAACC,GACLgK,EAAShK,EAASK,WAErB,IAEH,IAAMsK,GAAmBC,uBAAY,SAAC7O,GACpC2D,EAAS3D,KACR,IAWG8O,GAAa,WACjB,IAAIC,EAAiBrB,EACrB/J,EAAS,IACTgK,EAAcoB,EAAiB,IAS3BC,GAAe,SAACC,GACpB,IAAMpK,EAAOoK,EAAMC,OAAOrK,KACpBsK,EAAU,2BACX7K,GADW,kBAEbO,EAAOoK,EAAMC,OAAOvK,QAEvB0J,EAAQc,IAIJC,GAAY,WAEhBC,SAASC,eAAe,eAAe9H,MAAM7G,QAAU,OACvC4O,YAAW,WACzBF,SAASC,eAAe,eAAe9H,MAAM7G,QAAU,OACvD2N,EAAW,QACV,MAIDkB,GAAiB,WACnB,IAWEC,EAAS,SAASC,EAAGC,GAAK,OAAOD,EAAEE,QAAQ,YAAY,SAASC,EAAGC,GAAK,OAAOH,EAAEG,OACnF,OAAO,SAASC,EAAGC,EAAQC,EAASC,EAAQC,GAC1CJ,EAAEK,iBAMF,IALA,IACIC,EADAC,EAAM,GAENC,EAAgB,GAChBC,EAAU,GAEL3H,EAAI,EAAGA,EAAImH,EAAOpK,OAAQiD,IAAK,CACtCG,QAAQC,IAAI+G,EAAOnH,GAAG4H,UACtBzH,QAAQC,IAAIoG,SAASC,eAAeU,EAAOnH,KACtCmH,EAAOnH,GAAG4H,WAAUT,EAAOnH,GAAKwG,SAASC,eAAeU,EAAOnH,KACpE,IAAK,IAAI6H,EAAI,EAAGA,EAAIV,EAAOnH,GAAG8H,KAAK/K,OAAQ8K,IAAK,CAC9CF,GAAW,QACX,IAAK,IAAII,EAAI,EAAGA,EAAIZ,EAAOnH,GAAG8H,KAAKD,GAAGG,MAAMjL,OAAQgL,IAAK,CACvD,IAAIE,EAAWd,EAAOnH,GAAG8H,KAAKD,GAAGG,MAAMD,GAAGG,aAAa,aACnDC,EAAYhB,EAAOnH,GAAG8H,KAAKD,GAAGG,MAAMD,GAAGG,aAAa,cACpDE,EAAYjB,EAAOnH,GAAG8H,KAAKD,GAAGG,MAAMD,GAAGG,aAAa,cACxDE,EAAaA,GAAqBjB,EAAOnH,GAAG8H,KAAKD,GAAGG,MAAMD,GAAGM,UAC7D,IAAIC,EAAcnB,EAAOnH,GAAG8H,KAAKD,GAAGG,MAAMD,GAAGG,aAAa,gBAO1DP,GAAWf,EA5BH,4FAuBRa,EAAM,CAAGc,iBAA+B,aAAZJ,GAAsC,SAAZA,EAAoB,gBAAgBA,EAAU,IAAI,GAC9FK,SAAsB,WAAXP,GAAkC,aAAXA,GAAoC,YAAXA,GAAmC,UAAXA,EAAoBA,EAAS,SAChHxM,MAHV6M,EAAeA,IAAoC,SAAVhB,GAA+B,aAAXW,EAAuBG,EAAU,OAGhE,GAAGA,EACvBK,iBAAmBH,EAAa,gBAAgBA,EAAY,IAAI,KAI5EX,GAAW,SAEbF,EAAM,CAACK,KAAMH,EAASe,OAAQtB,EAAQpH,IAAM,QAAUA,GACtD0H,GAAiBd,EAlCA,kEAkCyBa,GAC1CE,EAAU,GAGZF,EAAM,CAACkB,SAAU,IAAIrD,MAAQsD,UAAWC,WAAYnB,GACpDF,EAAcZ,EA9CI,ohBA8CoBa,GAItC,IAzCkBZ,EAyCdiC,EAAOtC,SAASuC,cAAc,KAClCD,EAAKE,KApDG,yCAUUnC,EA0COW,EA1CK7Q,OAAOsS,KAAKC,SAASC,mBAAmBtC,MA2CtEiC,EAAKM,SAAW/B,GAAU,eAC1ByB,EAAKzC,OAAS,SACdG,SAAS6C,KAAKC,YAAYR,GAC1BA,EAAKS,QACL/C,SAAS6C,KAAKG,YAAYV,IA1DT,GA8DrB,OACE,yBAAK3P,UAAWL,EAAQ4F,WACtB,kBAAC+K,GAAA,EAAD,CAAOlL,GAAG,cAAcmL,SAAS,QAAQvQ,UAAWL,EAAQuL,YAA5D,mCACA,kBAACsF,EAAA,EAAD,CAAS3S,kBAAgB,EAAC6N,WAAYA,EAAY+E,UAAW,kBAACtR,EAAD,OAC1DqM,GAAMhJ,KAAI,SAACkO,GAAD,OACT,kBAACC,EAAA,EAAD,CAAMjO,IAAKgO,GACT,kBAACE,EAAA,EAAD,CAAWC,kBAAmBpR,GAAmBiR,QAIvD,6BACkB,IAAfhF,EACC,6BACE,kBAACpG,EAAA,EAAD,CAAMC,WAAS,EAAChF,QAAS,GACvB/C,OAAOmP,WAAa,IAClB,kBAACrH,EAAA,EAAD,CAAMI,MAAI,EAACoL,IAAE,GACX,kBAACC,EAAA,EAAD,CAAO/Q,UAAWL,EAAQuB,SAE3B,8BAEH,kBAACoE,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAIlF,GACb,kBAACoF,EAAA,EAAD,CAAaC,UAAQ,EAACjR,UAAWL,EAAQkL,aACvC,kBAACqG,EAAA,EAAD,CAAYC,QAAQ,wBAApB,UACA,kBAACC,EAAA,EAAD,CACEC,QAAM,EACN1O,MAAOL,EAAKwF,OACZwJ,SAAUtE,GACVzI,WAAY,CACV1B,KAAM,SACNuC,GAAI,wBAEN6L,UAAQ,GAER,4BAAQhL,aAAW,OAAOtD,MAAM,KAC/BuJ,EAAW1J,KAAI,SAACkD,EAAM+D,GACrB,OAAO,4BAAQ/G,IAAKgD,EAAKoC,QAASpC,EAAKoC,YAG3C,kBAACyJ,EAAA,EAAD,mBAGJ,kBAACjM,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAIhF,GACb,kBAACkF,EAAA,EAAD,CAAaC,UAAQ,EAACjR,UAAWL,EAAQkL,aACvC,kBAACqG,EAAA,EAAD,CAAYC,QAAQ,sBAApB,kBACA,kBAACC,EAAA,EAAD,CACEC,QAAM,EACN1O,MAAOL,EAAK0F,KACZsJ,SAAUtE,GACVzI,WAAY,CACV1B,KAAM,OACNuC,GAAI,uBAGN,4BAAQa,aAAW,OAAOtD,MAAM,KAC/BqJ,EAAMxJ,KAAI,SAACkD,EAAM+D,GAChB,OAAO,4BAAQ/G,IAAKgD,GAAOA,OAG/B,kBAAC6L,EAAA,EAAD,mBAGF/T,OAAOmP,WAAa,IACpB,kBAACrH,EAAA,EAAD,CAAMI,MAAI,EAACoL,IAAE,GACX,kBAACC,EAAA,EAAD,CAAO/Q,UAAWL,EAAQuB,SAE1B,+BAGN,kBAACoE,EAAA,EAAD,CAAMC,WAAS,EAAChF,QAAS,GACvB,kBAAC+E,EAAA,EAAD,CAAMI,MAAI,EAACoL,IAAE,IACb,kBAACxL,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAI,GACb,kBAACU,GAAA,EAAD,CAAYpM,GAAG,uBAAuBqM,cAAY,GAAlD,kBAGA,kBAACC,GAAA,EAAD,CACE/O,MAAO4J,GACPnH,GAAG,cAEHuM,kBAAgB,yBAChBC,KAAM,EACNC,IAAK,GACLC,IAAK,GACLC,kBAAkB,OAClBC,MAnOE,CAChB,CACErP,MAAO,GACP+N,MAAO,SAET,CACE/N,MAAO,GACP+N,MAAO,UA6NKY,SAAU,SAACvD,EAAGkE,GAAczF,GAAkByF,OAGlD,kBAAC3M,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAI,GACb,kBAACU,GAAA,EAAD,CAAYpM,GAAG,wBAAwBqM,cAAY,GAAnD,mBAGA,kBAACC,GAAA,EAAD,CACE/O,MAAO8J,GACPrH,GAAG,eAEHuM,kBAAgB,yBAChBC,KAAM,EACNC,IAAK,EACLC,IAAK,GACLC,kBAAkB,OAClBC,MA1OG,CACjB,CACErP,MAAO,EACP+N,MAAO,QAET,CACE/N,MAAO,GACP+N,MAAO,UAoOKY,SAAU,SAACvD,EAAGkE,GAAcvF,GAAmBuF,OAGnD,kBAAC3M,EAAA,EAAD,CAAMI,MAAI,EAACoL,IAAE,KAEf,kBAACxL,EAAA,EAAD,CAAMC,WAAS,EAAChF,QAAS,GACvB/C,OAAOmP,WAAa,IACpB,kBAACrH,EAAA,EAAD,CAAMI,MAAI,EAACoL,IAAE,GACX,kBAACC,EAAA,EAAD,CAAO/Q,UAAWL,EAAQuB,SAE1B,8BAEF,kBAACoE,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAI,IACb,kBAAC1P,EAAD,CACEC,cAAeuL,MAGnBpP,OAAOmP,WAAa,IACpB,kBAACrH,EAAA,EAAD,CAAMI,MAAI,EAACoL,IAAE,GACX,kBAACC,EAAA,EAAD,CAAO/Q,UAAWL,EAAQuB,SAE1B,+BAGJ,yBAAKlB,UAAWL,EAAQoL,cACtB,kBAACnF,EAAA,EAAD,CAAQtB,SAAyB,IAAfoH,EAAkBtH,QAAS0I,GAAY9M,UAAWL,EAAQU,QAA5E,QAGA,kBAACuF,EAAA,EAAD,CACEC,QAAQ,YACRnH,MAAM,UACN0F,QA3OK,WACd9B,EAAKwF,QAAUxF,EAAK+H,MAAQ/H,EAAK0F,KAElC2D,EADqBD,EACU,GAE/B0B,MAuOUpN,UAAWL,EAAQU,QAJrB,UAWJ,yBAAKL,UAAWL,EAAQ4F,WACtB,kBAACD,EAAA,EAAD,CAAMC,WAAS,EAAChF,QAAS,GACvB,kBAAC+E,EAAA,EAAD,CAAMI,MAAI,EAACoL,IAAE,GACX,kBAACC,EAAA,EAAD,CAAO/Q,UAAWL,EAAQuB,SAE5B,kBAACoE,EAAA,EAAD,CAAMI,MAAI,EAAC1F,UAAWL,EAAQ2L,QAASwF,GAAI,IACzC,kBAACvK,GAAD,CACEuB,OAAQxF,EAAKwF,OACbE,KAAM1F,EAAK0F,KACXlB,MAAO9I,EACPoL,WAAYqD,GACZpD,UAAWkD,MAGf,kBAACjH,EAAA,EAAD,CAAMI,MAAI,EAACoL,IAAE,GACX,kBAACC,EAAA,EAAD,CAAO/Q,UAAWL,EAAQuB,UAG9B,yBAAKlB,UAAWL,EAAQoL,cACtB,kBAACnF,EAAA,EAAD,CAAQtB,SAAyB,IAAfoH,EAAkBtH,QAAS0I,GAAY9M,UAAWL,EAAQU,QAA5E,QAGA,kBAACuF,EAAA,EAAD,CACEC,QAAQ,YACRnH,MAAM,UACN0F,QAAS,SAAC2J,GAAOP,GAAcO,EAAG,CAAC,cAAc,cAAc,eAAgB,CAAC,QAAQ,QAAQ,SAAU,yBAA0B,UACpI/N,UAAWL,EAAQU,QAJrB,qB,kIC7UC6R,G,mFAAf,WAAyBC,GAAzB,UAAApP,EAAA,+EACSqP,MAAM,8BAA+B,CAC1CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBpC,KAAMqC,KAAKC,UAAUL,KAEpBnQ,MAAK,SAAAM,GAAI,OAAIA,EAAKmQ,WARvB,4C,sBApCkB7U,aAAW,SAACwC,GAAD,MAAY,CACvCsS,aAAc,CACZ/T,QAAS,OACTgU,cAAe,SACf9T,WAAY,UAEdqC,MAAO,CACLT,UAAWL,EAAMG,QAAQ,GACzB5B,QAAS,OACTgU,cAAe,SACf9T,WAAY,UAEdqF,OAAQ,CACNtD,OAAQR,EAAMG,QAAQ,GACtBvB,gBAAiBoB,EAAMY,QAAQ4R,UAAUC,MAE3CC,KAAM,CACJ/T,MAAO,OACP0B,UAAWL,EAAMG,QAAQ,IAE3BwS,OAAQ,CACNnS,OAAQR,EAAMG,QAAQ,EAAG,EAAG,IAE9B2K,WAAY,CACV1L,UAAW,kBACX2L,SAAU,WACVlM,OAAQ,IACRmM,WAAY,cACZC,WAAY,OACZ/K,YAAa,OACbvC,KAAM,EACNC,MAAO,EACPW,QAAS,WAsGEgC,C,oDAtFb,WAAYjB,GAAQ,IAAD,+BACjB,cAAMA,IACDsT,MAAQ,CACXC,SAAU,GACVC,SAAU,IAJK,E,2CAQnB,WAAU,IAAD,OACCvT,EAAYwT,KAAKzT,MAAjBC,QAEFyT,EAAY,yCAAG,WAAMrF,GAAN,sBAAAhL,EAAA,yDACnBgL,EAAEK,iBADiB,EAEU,EAAK4E,MAA5BC,EAFa,EAEbA,SAAUC,EAFG,EAEHA,SACA,UAAbD,GAAqC,aAAbC,EAHR,gCAIGhB,GAAU,CAC5Be,WACAC,aANe,OAIXG,EAJW,OAQjB,EAAK3T,MAAM4T,eAAeD,GART,uBAUjBhG,SAASC,eAAe,eAAe9H,MAAM7G,QAAU,OAVtC,4CAAH,sDAclB,OACE,yBAAKqB,UAAWL,EAAQ+S,cACtB,kBAACpC,GAAA,EAAD,CAAOlL,GAAG,cAAcmL,SAAS,QAAQvQ,UAAWL,EAAQuL,YAA5D,sCACA,kBAACqI,GAAA,EAAD,CAAW3O,UAAU,OAAO0B,SAAS,MACnC,kBAACkN,EAAA,EAAD,MACA,yBAAKxT,UAAWL,EAAQuB,OACtB,kBAACuS,GAAA,EAAD,CAAQzT,UAAWL,EAAQuE,QACzB,kBAAC,KAAD,OAEF,kBAACsN,GAAA,EAAD,CAAY5M,UAAU,KAAKiB,QAAQ,MAAnC,UAGA,0BAAM7F,UAAWL,EAAQmT,KAAMY,YAAU,EAACC,SAAUP,GAClD,kBAACQ,GAAA,EAAD,CACE/N,QAAQ,WACRjF,OAAO,SACPqQ,UAAQ,EACR4C,WAAS,EACTzO,GAAG,WACHsL,MAAM,WACN7N,KAAK,WACLiR,WAAS,EACTxC,SAAU,SAAAvD,GAAM,EAAKgG,SAAS,CAACd,SAAUlF,EAAEb,OAAOvK,WAEpD,kBAACiR,GAAA,EAAD,CACE/N,QAAQ,WACRjF,OAAO,SACPqQ,UAAQ,EACR4C,WAAS,EACThR,KAAK,WACL6N,MAAM,WACN9F,KAAK,WACLxF,GAAG,WACH4O,aAAa,mBACb1C,SAAU,SAAAvD,GAAM,EAAKgG,SAAS,CAACb,SAAUnF,EAAEb,OAAOvK,WAMpD,kBAACiD,EAAA,EAAD,CACEgF,KAAK,SACLiJ,WAAS,EACThO,QAAQ,YACRnH,MAAM,UACNsB,UAAWL,EAAQoT,QALrB,kB,GAlEMzR,IAAM2S,Y,gJC/B1B,SAAS3D,GAAM5Q,GACb,OAAO,kBAAC,KAAD,eAAUwU,UAAW,EAAGrO,QAAQ,UAAanG,IAGtD,IAAMiB,GAAYnC,aAAW,SAAC4B,GAAD,cAAY,CACvC+T,MAAO,CACLpV,MAAO,OACP0B,UAAW,IAEb2T,WAAS,GACPrV,MAAO,OACPsM,WAAY,OACZ/K,YAAa,QAHN,cAIN,4BAA8B,CAC7BvB,MAAO,OACPsM,WAAY,OACZ/K,YAAa,SAPR,cASN,2BAA6B,CAC5BvB,MAAO,SAVF,6BAYO,QAZP,uBAaC,QAbD,0BAcI,UAdJ,GAgBTsV,eAAa,GACXtV,MAAO,OACPsM,WAAY,OACZ/K,YAAa,QAHF,cAIV,4BAA8B,CAC7BvB,MAAO,OACPsM,WAAY,OACZ/K,YAAa,SAPJ,cASV,2BAA6B,CAC5BvB,MAAO,SAVE,GAabuV,UAAW,GAGXC,WAAY,CACV5V,QAAS,OACTY,eAAgB,QAChBV,WAAY,UAEd2V,OAAQ,CACNxJ,MAAO,SAETyJ,YAAa,CACX7T,OAAQR,EAAMG,QAAQ,EAAE,EAAE,EAAE,GAC5BuK,SAAU,OACVxE,SAAU,QAEZuC,OAAQ,CACN,uBAAwB,CACtBlK,QAAS,SAGb+V,eAAgB,CACd3V,MAAO,QAET4V,eAAgB,CACdrU,YAAa,WAIF,SAASsU,GAAgBlV,GACtC,IAAMC,EAAUgB,KAEhB,EAAgCW,IAAMC,SAAS,IAAIc,KAAnD,mBAAOwS,EAAP,KAAiBC,EAAjB,KACA,EAAoCxT,IAAMC,UAAS,GAAnD,mBAAOwT,EAAP,KAAmBC,EAAnB,KACA,EAAkC1T,IAAMC,SAAS,IAAjD,mBAAO0T,EAAP,KAAkBC,EAAlB,KACA,EAAgC5T,IAAMC,SAAS,SAA/C,mBAAO4T,EAAP,KAAiBC,EAAjB,KACA,EAA8B9T,IAAMC,SAAS,IAA7C,mBAAO8T,EAAP,KAAgBC,EAAhB,KACA,EAAoChU,IAAMC,SAAS,IAAnD,mBAAOgU,EAAP,KAAmBC,EAAnB,KACA,EAA0BlU,IAAMC,SAAS,IAAzC,mBAAOkU,EAAP,KAAcC,EAAd,KACA,EAAgCpU,IAAMC,SAAS,IAA/C,mBAAOoU,EAAP,KAAiBC,EAAjB,KACA,EAAkCtU,IAAMC,SAAS,IAAjD,mBAAOsU,EAAP,KAAkBC,EAAlB,KAEA,EAAoCxU,IAAMC,UAAS,GAAnD,mBAAOwU,EAAP,KAAmBC,EAAnB,KACA,GAAwC1U,IAAMC,SAAS,MAAvD,qBAAO0U,GAAP,MAAqBC,GAArB,MACA,GAAkC5U,IAAMC,SAAS,IAAjD,qBAAO4U,GAAP,MAAkBC,GAAlB,MAuBMC,GAAY,CAChBC,WAAY,CACV9Q,MAAO,CACL+Q,UAAWC,OAMjB5U,qBAAU,WACRC,IAAMC,IAAKoF,0CACRlF,MAAK,SAACC,GACL6S,EAAY,IAAIzS,IAAIJ,EAASK,YAKhC,IASH,IAAMmU,GAAsB,WAC1BzB,GAAc,IA+FV0B,GAAoB,SAACzJ,GACzBA,EAAMmB,iBACN8H,GAAgB,MAChBF,GAAc,IAiBhB,OACE,yBAAKhW,UAAWL,EAAQlB,MACtB,kBAACsS,EAAA,EAAD,CAAO/Q,UAAWL,EAAQyU,UAAWF,UAAW,GAC9C,kBAACxP,EAAA,EAAD,CAAMC,OAAO,GACVxC,MAAMC,KAAKyS,EAAStS,WAAWC,KAAI,SAACC,GACnC,kBAAqBA,EAArB,GAAOC,EAAP,KAAYC,EAAZ,KACMmC,EAAO,8BAA0BpC,GAEvC,OACE,kBAACqC,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAcC,GAAIN,EAASU,MAAO,CAAC+F,UAAW,OAAQxM,MAAO,MAAOuB,YAAa,QAAS+E,QAAO,UAAK3C,EAAL,kBAAkBC,EAAME,QACzH,kBAACsC,EAAA,EAAD,CAAcK,MAAO,CAAC+F,UAAW,QAASxM,MAAO,KAAMuB,YAAa,OAAQ+E,QAAO,UAAK1C,EAAMiG,SAC9F,kBAACzD,EAAA,EAAD,CAAcK,MAAO,CAAC+F,UAAW,QAASxM,MAAO,OAAQsG,QAAS,kBAACmM,GAAA,EAAD,CAAYxR,UAAWL,EAAQkJ,OAAQrD,MAAO,CAACrE,SAAU,WAAYwB,EAAMkG,OAAO8N,cACpJ,kBAACxR,EAAA,EAAD,CAAcK,MAAO,CAAC+F,UAAW,QAASjL,YAAa,OAAQ+E,QAAO,UAAK1C,EAAMyF,GAAX,SACtE,kBAACwO,GAAA,EAAD,CAAYxS,QAAS,SAAC2J,IA9CX,SAACd,EAAOvK,GAC/BuK,EAAMmB,iBACN8H,GAAgBxT,GAChB0T,GAAa,0BAA4B1T,EAAM,IAAMmS,EAAS/S,IAAIY,GAAKG,KAAO,iBAC9EmT,GAAc,GA0C2Ba,CAAiB9I,EAAGrL,IAAO8C,MAAO,CAACzG,MAAO,eAAgB+X,KAAK,MAAM7Q,aAAW,UAC3G,kBAAC,KAAD,aAOZ,kBAACX,EAAA,EAAD,CAAMC,WAAS,EAAChF,QAAS,EAAGP,UAAWL,EAAQ0U,eAC7C,kBAAC/O,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAI,GACb,kBAAC8C,GAAA,EAAD,CACE5T,UAAWL,EAAQ2U,UACnB1T,OAAO,QACPwE,GAAG,OACHvC,KAAK,UACLkU,YAAY,OACZxS,WAAY,CAAEyS,UAAW,GAEzB1F,SAAU,SAACvD,GAAOuH,EAAWvH,EAAEb,OAAOvK,QACtCkD,QAAQ,WAERlD,MAAO0S,KAGX,kBAAC/P,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAI,GACb,kBAAC8C,GAAA,EAAD,CACE3C,UAAQ,EACRrQ,OAAO,QACPZ,UAAWL,EAAQ+U,eACnB7R,KAAK,aACLkU,YAAY,eACZlR,QAAQ,WACRyL,SAAU,SAACvD,GAAOyH,EAAczH,EAAEb,OAAOvK,QACzCA,MAAO4S,KAGX,kBAACjQ,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAI,GACb,kBAACE,EAAA,EAAD,CAAahR,UAAWL,EAAQ+U,gBAC9B,kBAACd,GAAA,EAAD,CACE3C,UAAQ,EACRrQ,OAAO,QACPwE,GAAG,KACHvC,KAAK,QACL+H,KAAK,SACLmM,YAAY,cACZlR,QAAQ,WACRyL,SAAU,SAACvD,GAAO2H,EAASuB,OAAOlJ,EAAEb,OAAOvK,SAC3CA,MAAO8S,EACPlR,WAAY,CAAE,IAAO,EAAG,IAAO,OAIrC,kBAACe,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAI,GACb,kBAACE,EAAA,EAAD,CAAahR,UAAWL,EAAQ8U,aAC9B,kBAACrD,EAAA,EAAD,CACE8F,UAAQ,EACRC,cAAY,EACZxU,MAAOgT,EACPrE,SAAU,SAACvD,GAAO6H,EAAY7H,EAAEb,OAAOvK,MAAMqD,SAC7CoR,MAAO,kBAACC,GAAA,EAAD,CAAezW,OAAO,UAC7B0W,YAAa,SAACC,GACZ,OAAwB,IAApBA,EAAS3T,OACJ,yBAAK4B,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,aAGF6Y,EAASE,KAAK,OAEvBpB,UAAWA,GACX9R,WAAY,CAAE,aAAc,kBAE5B,kBAACmT,GAAA,EAAD,CAAUpT,UAAQ,EAAC3B,MAAM,IACvB,yBAAK6C,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,cAED,CAAC,EAAE,EAAE,GAAG8D,KAAI,SAACkD,GAAD,OACX,kBAACgS,GAAA,EAAD,CAAUhV,IAAKgD,EAAM/C,MAAO+C,GACzBA,SAMX,kBAACJ,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAI,GACb,kBAACE,EAAA,EAAD,CAAahR,UAAWL,EAAQ8U,aAC9B,kBAACrD,EAAA,EAAD,CACE8F,UAAQ,EACRC,cAAY,EACZxU,MAAOkT,EACPvE,SAAU,SAACvD,GAAO+H,EAAa/H,EAAEb,OAAOvK,QACxCyU,MAAO,kBAACC,GAAA,EAAD,CAAezW,OAAO,UAC7B0W,YAAa,SAACC,GACZ,OAAwB,IAApBA,EAAS3T,OACJ,yBAAK4B,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,iBAGF6Y,EAASE,KAAK,OAEvBpB,UAAWA,GACX9R,WAAY,CAAE,aAAc,kBAE5B,kBAACmT,GAAA,EAAD,CAAUpT,UAAQ,EAAC3B,MAAM,IACvB,yBAAK6C,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,kBAEDyD,MAAMC,KAAKyS,EAAStS,WAAWC,KAAI,SAACC,GACnC,kBAAqBA,EAArB,GAAOC,EAAP,KAAYC,EAAZ,KACA,OACA,kBAAC+U,GAAA,EAAD,CAAUhV,IAAKA,EAAKC,MAAOD,GACxBA,EAAM,MAAQC,EAAME,YAM/B,kBAACyC,EAAA,EAAD,CAAMtF,UAAWL,EAAQ4U,WAAY7O,MAAI,EAACoL,GAAI,GAC5C,kBAAClL,EAAA,EAAD,CACE5F,UAAWL,EAAQ6U,OACnBpP,GAAG,qBACHS,QAAQ,YACRzB,QAvNQ,SAAC6I,GACjBA,EAAMmB,iBAEN,IAAIrN,EAAO8T,EAER9T,EAAK4H,IAAI0M,IACVH,EAAa,6CACbE,EAAY,SACZJ,GAAc,KAOdjU,EAAKsH,IAAIgN,EAAQsC,OAAQ,CACvB9U,KAAM0S,EAAWoC,OACjBvP,GAAIqN,EACJ7M,MAAO+M,EACP9M,OAAQgN,IAEVf,EAAY/T,GACZuU,EAAW,IACXE,EAAc,IACdE,EAAS,IACTE,EAAY,IACZE,EAAa,IAQbjU,IAAM+V,KAAK1Q,oCAA2B,CACpC2N,SAAU9T,IACTiB,MAAK,SAACmF,GACP+N,EAAa,sCACbE,EAAY,WACZJ,GAAc,MAObzN,OAAM,SAACC,GACRR,QAAQC,IAAIO,QAyKR9I,MAAM,UACN4F,WACG+Q,GAAWE,GACPE,GAA6B,GAAnBE,EAAS/R,SAR5B,SAkBJ,kBAACiU,GAAA,EAAD,CAAUC,KAAM/C,EAAYgD,iBAAkB,IAAMC,QAASvB,IAC3D,kBAAC,GAAD,CAAOuB,QAASvB,GAAqBlG,SAAU4E,GAC5CF,IAGL,kBAACgD,GAAA,EAAD,CACEH,KAAM/B,EACNiC,QAAStB,GACT/E,kBAAgB,qBAChBuG,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAa/S,GAAG,sBAAsB,6BACtC,kBAACgT,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBjT,GAAG,4BACnB+Q,KAGL,kBAACmC,GAAA,EAAD,KACE,kBAAC1S,EAAA,EAAD,CAAQxB,QAASsS,GAAmBhY,MAAM,UAAUoV,WAAS,GAA7D,UAGA,kBAAClO,EAAA,EAAD,CAAQxB,QArRK,SAAC2J,GACpBA,EAAEK,iBACF,IAAIrN,EAAO8T,EACX9T,EAAKwX,OAAOtC,IAKZpU,IAAM+V,KAAK1Q,oCAA2B,CACpC2N,SAAU9T,IACTiB,MAAK,SAACmF,GACP+N,EAAa,sCACbE,EAAY,WACZJ,GAAc,MAObzN,OAAM,SAACC,GACRR,QAAQC,IAAIO,MAGdkP,GAAkB3I,IA6PmBrP,MAAM,WAArC,c,2NC3YJwI,GAAWnF,wBAEjB,SAASuO,GAAM5Q,GACb,OAAO,kBAAC,KAAD,eAAUwU,UAAW,EAAGrO,QAAQ,UAAanG,IAGtD,IAAMiB,GAAYnC,aAAW,SAAC4B,GAAD,MAAY,CACvCoY,cAAe,CACbjZ,eAAgB,UAElB8G,MAAO,CACLtH,MAAO,OACPsM,WAAY,OACZ/K,YAAa,OACbmY,UAAW,WAEbC,UAAW,CACTC,UAAW,UAMbC,OAAQ,CACNrN,UAAW,UAEbiJ,OAAQ,CACNxJ,MAAO,SAET6N,QAAS,CACP7N,MAAO,QACPG,SAAU,QACV2N,OAAQ,MACR9a,MAAO,OAET6M,YAAa,CAEXC,SAAU,QAEZiO,YAAa,CACXtY,UAAWL,EAAMG,QAAQ,KAE3ByY,UAAW,CACT7N,SAAU,gBAIC,SAAS8N,GAAQvZ,GAC9B,IAAMC,EAAUgB,KAEhB,EAA0BW,IAAMC,SAAS,IAAzC,mBAAO2X,EAAP,KAAcC,EAAd,KACA,EAAsC7X,IAAMC,SAAS,IAAIc,KAAzD,mBAAO+W,EAAP,KAAoBxS,EAApB,KACA,EAAgDtF,IAAMC,UAAS,GAA/D,mBAAO8X,EAAP,KAAyBC,EAAzB,KACA,EAAwChY,IAAMC,UAAS,GAAvD,mBAAOgY,EAAP,KAAqBC,EAArB,KACA,EAAsClY,IAAMC,SAAS,IAArD,mBAAOkY,EAAP,KAAoBC,EAApB,KACA,EAAsCpY,IAAMC,SAAS,SAArD,mBAAOoY,EAAP,KAAoBC,EAApB,KACA,EAAwCtY,IAAMC,UAAS,GAAvD,mBAAOsY,EAAP,KAAqBC,EAArB,KACA,EAAoDxY,IAAMC,UAAS,GAAnE,mBAAOwY,EAAP,KAA2BC,EAA3B,KACA,EAA0C1Y,IAAMC,UAAS,GAAzD,mBAAO0Y,EAAP,KAAsBC,EAAtB,KACA,EAA8C5Y,IAAMC,UAAU,IAA9D,mBAAO4Y,EAAP,KAAwBC,GAAxB,KACA,GAA4C9Y,IAAMC,SAAS,IAA3D,qBAAO8Y,GAAP,MAAuBC,GAAvB,MACA,GAAwChZ,IAAMC,SAAS,IAAvD,qBAAOgZ,GAAP,MAAqBC,GAArB,MACA,GAAoClZ,IAAMC,SAAS,IAAnD,qBAAO2K,GAAP,MAAmBvF,GAAnB,MACA,GAAkCrF,IAAMC,SAAS,IAAIc,KAArD,qBAAOoY,GAAP,MAAkBC,GAAlB,MACA,GAA0CpZ,IAAMC,SAAS,IAAzD,qBAAOoZ,GAAP,MAAsBC,GAAtB,MACA,GAAkCtZ,IAAMC,UAAS,GAAjD,qBAAOsZ,GAAP,MAAkBC,GAAlB,MACA,GAAoCxZ,IAAMC,UAAS,GAAnD,qBAAOwZ,GAAP,MAAmBC,GAAnB,MACA,GAA4C1Z,IAAMC,SAAS,IAA3D,qBAAO0Z,GAAP,MAAuBC,GAAvB,MACA,GAA0C5Z,IAAMC,SAAS,IAAzD,qBAAO4Z,GAAP,MAAsBC,GAAtB,MACA,GAA4C9Z,IAAMC,SAAS,IAA3D,qBAAO8Z,GAAP,MAAuBC,GAAvB,MACA,GAA4Cha,IAAMC,SAAS,IAA3D,qBAAOga,GAAP,MAAuBC,GAAvB,MACA,GAAwCla,IAAMC,SAAS,IAAvD,qBAAOka,GAAP,MAAqBC,GAArB,MACA,GAA4Bpa,IAAMC,SAAS,CACzC,CACEqJ,KAAM,GACN3C,KAAM,GACNpF,KAAM,GACNuF,GAAI,GACJQ,MAAO,GACPL,WAAY,IAEd,CACEqC,KAAM,GACN3C,KAAM,GACNpF,KAAM,GACNuF,GAAI,GACJQ,MAAO,GACPL,WAAY,IAEd,CACEqC,KAAM,GACN3C,KAAM,GACNpF,KAAM,GACNuF,GAAI,GACJQ,MAAO,GACPL,WAAY,MAvBhB,qBAAOoT,GAAP,MAAeC,GAAf,MA2BAha,qBAAU,WACRC,IAAMC,IAAIoF,GAAW,qBAAqBlF,MAAK,SAACC,GAC9C2E,EAAe,IAAIvE,IAAIJ,EAASK,OAChC0E,QAAQC,IAAI,IAAI5E,IAAIJ,EAASK,UAG/BT,IAAMC,IAAIoF,GAAW,oBAAoBlF,MAAK,SAACC,GAC7C+E,QAAQC,IAAIhF,EAASK,MACrBqE,GAAc1E,EAASK,SAKzB,IAFA,IACI4W,EAAQ,GACJrS,GAFQ,IAAIsF,MAAQC,cAEP,EAAG8M,EAAMtV,QAAU,EAAGiD,IACzCqS,EAAMtW,KAAKiE,GAEbsS,EAASD,KACR,IAGH,IAAM2C,GAAU,CACd,CAAE1b,KAAM,kBAAC,KAAD,MAAa0C,KAAM,MAAOiZ,OAAQ,SAAC/N,GAAD,OAAOgO,GAAkBhO,IAAIzJ,SAAU+U,GACjF,CAAElZ,KAAM,kBAAC,KAAD,MAAkB0C,KAAM,OAAQiZ,OAAQ,SAAC/N,GAAD,OAAOiO,GAAmBjO,IAAIzJ,SAAU+U,GACxF,CAAElZ,KAAQkZ,EAAmC,kBAAC,KAAD,MAAf,kBAAC,KAAD,MAA8BxW,KAAQwW,EAA6B,QAAT,OAChFyC,OAAQ,SAAC/N,GAAD,OAASsL,EAA4C4C,GAAwBlO,GAAhDmO,GAAmBnO,IACxDzJ,UAAW+V,KAAkBE,IAErC,CAAEpa,KAAM,kBAAC,KAAD,MAAgB0C,KAAM,SAAUiZ,OAAQ,SAAC/N,GAAD,OAAOoO,GAAqBpO,IAAIzJ,SAAU+U,IAGtF5C,GAAsB,WAC1BiD,EAAe,IACfE,EAAe,IACfJ,GAAgB,IAIZlI,GAAW,SAACvD,EAAGqO,GACnB,MAAsBrO,EAAEb,OAAlBrK,EAAN,EAAMA,KAAMF,EAAZ,EAAYA,MAGZ,GADAqE,QAAQC,IAAItE,GACA,YAATE,EAAoB,CACrB,IAAIwZ,EAAY,YAAOV,IACvB,cAAmBhZ,EAAnB,GAAOD,EAAP,KAAYwF,EAAZ,KACAmU,EAAaD,GAAb,2BACKC,EAAaD,IADlB,IAEEnU,KAAMvF,EACNG,KAAMqF,EAAIrF,KACVuF,GAAI6O,OAAO/O,EAAIE,IACfQ,MAAOV,EAAIU,QAGbgT,GAAUS,OACL,CACL,IAAIA,EAAY,YAAOV,IACvBU,EAAaD,GAAb,2BACKC,EAAaD,IADlB,kBAEGvZ,EAAiB,eAATA,EAAyBoU,OAAOtU,GAASA,IAGpDiZ,GAAUS,GAEZrV,QAAQC,IAAI0U,KAURjF,GAAoB,SAACzJ,GACzBA,EAAMmB,iBACNgM,GAAmB,MACnBJ,GAAsB,IAuHlBmC,GAAuB,SAACpO,GAC5BA,EAAEK,iBACF0L,GAAgB,IAGZwC,GAA4B,SAACrP,GACjCA,EAAMmB,iBACNsN,GAAgB,IAChBF,GAAkB,IAClB1B,GAAgB,IA8CZiC,GAAoB,SAAChO,GACzBA,EAAEK,iBACF0M,IAAa,IAGTyB,GAAyB,SAACtP,GAC9BA,EAAMmB,iBACN8M,GAAkB,IAClBE,GAAiB,IACjBN,IAAa,IAmDToB,GAAqB,SAACnO,GAC1BA,EAAEK,iBAEF,IADA,IAAI3E,GAAS,EACJ5C,EAAI,EAAGA,EAAIqF,GAAWtI,OAAQiD,IAAK,CAE1C,GADgBqF,GAAWrF,GAChBiB,SAAWuS,GAAgB,CACpC5Q,EAAQ5C,EACRG,QAAQC,IAAI,SAAWJ,GACvB,OAGJG,QAAQC,IAAIiF,GAAWzC,IACvBzC,QAAQC,IAAIwT,IACZzT,QAAQC,IAAI,IAAI5E,IAAI6J,GAAWzC,GAAO1B,GAAGwS,MAGzCG,GAAa,IAAIrY,IAAI6J,GAAWzC,GAAO1B,GAAGwS,MAC1CK,GAAiB3D,OAAOxN,IACxB6P,GAAoB,GACpBjM,SAASC,eAAe,qBAAqB9H,MAAM7G,QAAU,SAIzDsd,GAA0B,SAAClO,GAC/BA,EAAEK,iBA2BFsM,GAAa,IAAIrY,KACjBuZ,GA3BkB,CAChB,CACEhR,KAAM,GACN3C,KAAM,GACNpF,KAAM,GACNuF,GAAI,GACJQ,MAAO,GACPL,WAAY,IAEd,CACEqC,KAAM,GACN3C,KAAM,GACNpF,KAAM,GACNuF,GAAI,GACJQ,MAAO,GACPL,WAAY,IAEd,CACEqC,KAAM,GACN3C,KAAM,GACNpF,KAAM,GACNuF,GAAI,GACJQ,MAAO,GACPL,WAAY,MAKhB+Q,GAAoB,GACpBjM,SAASC,eAAe,qBAAqB9H,MAAM7G,QAAU,QAIzDqd,GAAqB,SAAC/O,GAC1BA,EAAMmB,iBACN4M,IAAc,IAGVwB,GAA0B,SAACvP,GAC/BA,EAAMmB,iBACN8M,GAAkB,IAClBE,GAAiB,IACjBE,GAAkB,IAClBN,IAAc,IAsEhB,OACE,6BACE,kBAAC1V,EAAA,EAAD,CAAMC,WAAS,EAAChF,QAAS,EAAGP,UAAWL,EAAQ6Y,eAC7C,kBAAClT,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACsL,EAAA,EAAD,CAAa5L,GAAG,mBAAmBd,SAAU+U,GAC3C,kBAACjI,EAAA,EAAD,CACE5L,MAAO,CAACzG,MAAO,SACf4D,MAAO0X,GACP/I,SAAU,SAACvD,GAAOuM,GAAkBvM,EAAEb,OAAOvK,QAC7CwU,cAAY,EACZnX,UAAWL,EAAQoZ,YACnBzB,YAAa,SAACC,GACZ,OAAKA,GACI,yBAAK/R,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,WAKX6F,WAAY,CAAE,aAAc,kBAE3B2H,GAAW1J,KAAI,SAACkD,EAAM+D,GACrB,OACE,kBAACiO,GAAA,EAAD,CAAU/U,MAAO+C,EAAKoC,QAASpC,EAAKoC,cAM9C,kBAACxC,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACsL,EAAA,EAAD,CAAa1M,SAAU+U,GACrB,kBAACjI,EAAA,EAAD,CACEhM,GAAG,iBACHI,MAAO,CAACzG,MAAO,SACf4D,MAAO4X,GACPjJ,SAAU,SAACvD,GAAOyM,GAAgBzM,EAAEb,OAAOvK,QAC3CwU,cAAY,EACZnX,UAAWL,EAAQoZ,YACnBzB,YAAa,SAACC,GACZ,OAAKA,GACI,yBAAK/R,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,mBAKX6F,WAAY,CAAE,aAAc,kBAE5B,kBAACmT,GAAA,EAAD,CAAU/U,MAAM,wBAAhB,wBACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,gBAAhB,gBACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,oBAAhB,oBACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,iBAAhB,oBAIN,kBAAC2C,EAAA,EAAD,KACE,kBAACmX,GAAA,EAAD,CACEC,UAAU,oBACV1c,UAAWL,EAAQqZ,UACnB2D,QAAQ,EACRxc,KAAM,kBAACyc,GAAA,EAAD,MACN5E,QAjUmB,WAC3BkC,GAAiB,IAiUT2C,OA9TkB,WAC1B3C,GAAiB,IA8TTpC,KAAMmC,EACNtU,UAAU,QAETkW,GAAQrZ,KAAI,SAACsZ,GAAD,OACX,kBAACgB,GAAA,EAAD,CACEpa,IAAKoZ,EAAOjZ,KACZ1C,KAAM2b,EAAO3b,KACbmE,SAAUwX,EAAOxX,SACjByY,aAAcjB,EAAOjZ,KACrBuB,QAAS0X,EAAOA,eAM1B,kBAAC/K,EAAA,EAAD,CACE3L,GAAG,oBACHI,MAAO,CAAE7G,QAAS,SAElB,kBAACqe,GAAA,EAAD,CAAgBhd,UAAWL,EAAQ0G,OAChC,CAAC,EAAE,EAAE,GAAG7D,KAAI,SAACya,GACZ,OACE,oCACA,wBAAIjd,UAAWL,EAAQiZ,QAAvB,QAAqCqE,EAAY,GACjD,kBAACC,GAAA,EAAD,CACEld,UAAWL,EAAQ0G,MACnBP,KAAK,QACLqX,cAAY,EACZlX,aAAW,iBAEX,iCACE,kBAACX,EAAA,EAAD,CAAMC,WAAS,EAAChF,QAAS,EAAGP,UAAWL,EAAQ0U,eAC7C,kBAAC/O,EAAA,EAAD,CAAMI,MAAI,EAACoL,IAAE,GACX,kBAACE,EAAA,EAAD,CAAahR,UAAWL,EAAQkL,aAC9B,kBAACuG,EAAA,EAAD,CACEzO,MAAOgZ,GAAOsB,GAAWrS,KACzB0G,SAAU,SAACvD,GAAD,OAAOuD,GAASvD,EAAGkP,IAC7Bpa,KAAK,OACLsU,cAAY,EACZnX,UAAWL,EAAQoZ,YACnBzB,YAAa,SAACC,GACZ,OAAKA,GACI,yBAAK/R,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,aAKX6F,WAAY,CAAE,aAAc,kBAE5B,kBAACmT,GAAA,EAAD,CAAU/U,MAAM,QAAhB,QACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,YAAhB,YACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,OAAhB,OACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,aAAhB,uBACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,aAAhB,8BAIN,kBAAC2C,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAI,GACb,kBAACE,EAAA,EAAD,CAAahR,UAAWL,EAAQkL,aAC9B,kBAACuG,EAAA,EAAD,CACEzO,MACGgZ,GAAOsB,GAAWhV,KACf0T,GAAOsB,GAAWhV,KAAO,MACvB0T,GAAOsB,GAAWpa,KAAO,MACzB8Y,GAAOsB,GAAW7U,GAAK,IACzB,GACNkJ,SAAU,SAACvD,GAAD,OAAOuD,GAASvD,EAAGkP,IAC7Bpa,KAAK,UACLsU,cAAY,EACZnX,UAAWL,EAAQoZ,YACnBzB,YAAa,SAACC,GACZ,OAAKA,GACI,yBAAK/R,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,YAKX6F,WAAY,CAAE,aAAc,kBAE3BpC,MAAMC,KAAKgX,EAAY7W,WAAWC,KAAI,SAACC,GACtC,kBAAqBA,EAArB,GAAOC,EAAP,KAAYC,EAAZ,KACA,OACE,kBAAC+U,GAAA,EAAD,CAAUhV,IAAKA,EAAKC,MAAOF,GAAQC,EAAM,MAAQC,EAAME,KAAO,MAAQF,EAAMyF,GAAK,WAM3F,kBAAC9C,EAAA,EAAD,CAAMI,MAAI,EAACoL,IAAE,GACX,kBAACE,EAAA,EAAD,CAAahR,UAAWL,EAAQkL,aAC9B,kBAACuG,EAAA,EAAD,CACEzO,MAAOgZ,GAAOsB,GAAW1U,WACzB+I,SAAU,SAACvD,GAAD,OAAOuD,GAASvD,EAAGkP,IAC7Bpa,KAAK,aACLsU,cAAY,EACZnX,UAAWL,EAAQoZ,YACnBzB,YAAa,SAACC,GACZ,OAAKA,GACI,yBAAK/R,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,sBAKX6F,WAAY,CAAE,aAAc,kBAE1BoX,GAAOsB,GAAWrU,MAChB+S,GAAOsB,GAAWrU,MAAMpG,KAAI,SAACkD,EAAM+D,GACnC,OACE,kBAACiO,GAAA,EAAD,CAAU/U,MAAO+C,GAAOA,MAG1B,wCAIV,kBAACJ,EAAA,EAAD,CAAMI,MAAI,EAACoL,IAAE,GACX,kBAAClL,EAAA,EAAD,CACE5F,UAAWL,EAAQ6U,OACnBpP,GAAG,qBACHS,QAAQ,YACRzB,QAAS,SAAC2J,IAriBd,SAACA,EAAG1D,GAEpB,GADA0D,EAAEK,iBAECuN,GAAOtR,GAAMxH,MACb8Y,GAAOtR,GAAM9B,WAKT,CACL,IAAI6U,EAAW,IAAI/a,IAAIoY,IACvBzT,QAAQC,IAAImW,GACZA,EAAS/U,IAAIsT,GAAOtR,GAAMpC,KAAM,CAC9BpF,KAAM8Y,GAAOtR,GAAMxH,KACnBuF,GAAI6O,OAAO0E,GAAOtR,GAAMjC,IACxBwC,KAAM+Q,GAAOtR,GAAMO,KACnBrC,WAAY0O,OAAO0E,GAAOtR,GAAM9B,YAChCD,YAAa+B,EAAO,IAGtBrD,QAAQC,IAAIoD,GACZrD,QAAQC,IAAI0U,IACZ,IAAIU,EAAY,YAAOV,IACvBU,EAAahS,GAAb,2BACKgS,EAAahS,IADlB,IAEEO,KAAM,GACN3C,KAAM,GACNpF,KAAM,GACNuF,GAAI,GACJG,WAAY,KAEdqT,GAAUS,GACV3B,GAAa,IAAIrY,IAAI+a,SA1BrB1D,EAAe,mDACfE,EAAe,SACfJ,GAAgB,GA8hBI6D,CAAUtP,EAAGkP,IAEfve,MAAM,WAPR,UAmBN,kBAAC4e,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWze,MAAM,MAAM0e,MAAM,UAA7B,YAGA,kBAACD,GAAA,EAAD,CAAWze,MAAM,MAAM0e,MAAM,UAA7B,gBAGA,kBAACD,GAAA,EAAD,CAAWze,MAAM,MAAM0e,MAAM,UAA7B,gBAGA,kBAACD,GAAA,EAAD,CAAWze,MAAM,MAAM0e,MAAM,UAA7B,MAGA,kBAACD,GAAA,EAAD,CAAWze,MAAM,MAAM0e,MAAM,UAA7B,qBAGA,kBAACD,GAAA,EAAD,CAAWze,MAAM,MAAM0e,MAAM,UAA7B,YAKJ,kBAACC,GAAA,EAAD,CAAW1d,UAAWL,EAAQ+Y,WAC3BvW,MAAMC,KAAKqY,GAAUlY,WAAWC,KAAI,SAACC,GACpC,kBAAqBA,EAArB,GAAOC,EAAP,KAAYC,EAAZ,KAEA,OAAIA,EAAM2F,cAAgB2U,EAAY,EAElC,kBAACM,GAAA,EAAD,CAAU7a,IAAKA,GACb,kBAAC8a,GAAA,EAAD,CAAWC,MAAM,SAAS7Y,UAAU,KAAK+Y,MAAM,OAC5Chb,EAAMiI,MAET,kBAAC4S,GAAA,EAAD,CAAWC,MAAM,UAAU/a,GAC3B,kBAAC8a,GAAA,EAAD,KAAY7a,EAAME,MAClB,kBAAC2a,GAAA,EAAD,CAAWC,MAAM,UAAU9a,EAAMyF,IACjC,kBAACoV,GAAA,EAAD,CAAWC,MAAM,UACd9a,EAAM4F,YAET,kBAACiV,GAAA,EAAD,CAAWC,MAAM,SACf,kBAAC7G,GAAA,EAAD,CACExS,QAAS,SAAC2J,GAAD,OAzmBJ6P,EAymB+Blb,EAAHqL,EAxmBrDK,iBACNgM,GAAmBwD,QACnB5D,GAAsB,GAHC,IAAQ4D,IA2mBL,kBAAC,KAAD,CAAY1e,SAAS,aAMtB,+CAUrB,kBAAC2e,GAAA,EAAD,CAAS9Z,MAAM,eAAekC,aAAW,QACvC,kBAAC6X,GAAA,EAAD,CACE9d,UAAWL,EAAQkZ,QACnBna,MAAM,UACNuH,aAAW,OACX3B,UAAYqW,KAAkBzO,GAAWyO,KAnRnD,SAAqBoD,EAAMC,GACzB,IAAIC,EACJ,GAAIF,EAAKjY,OAASkY,EAAKlY,KACnB,OAAO,EAHoB,oBAKRiY,GALQ,IAK/B,2BAA6B,CAAC,IAAD,yBAAnBrb,EAAmB,KAAdwF,EAAc,KAIzB,GAHA+V,EAAUD,EAAKlc,IAAIY,GAGf6P,KAAKC,UAAUyL,KAAa1L,KAAKC,UAAUtK,SAAqBgW,IAAZD,IAA0BD,EAAKrV,IAAIjG,GACvF,OAAO,GAVgB,8BAa/B,OAAO,EAuQKyb,CAAY1D,GAAW,IAAIpY,IAAI6J,GAAWyO,IAAe5S,GAAGwS,MAEhEnW,QAtkBS,SAAC2J,GAClBA,EAAEK,iBACF,IAAIgQ,EAAe7L,KAAK8L,MAAM9L,KAAKC,UAAUtG,KAC7ClF,QAAQC,IAAImX,GACZ,IAAK,IAAIvX,EAAI,EAAGA,EAAIqF,GAAWtI,OAAQiD,IAAK,CAC1C,IAAMgB,EAAUqE,GAAWrF,GAC3B,GAAGwT,KAAmBxS,EAAQC,OAAQ,CACpCsW,EAAavX,GAAGkB,GAAGwS,IAAnB,YAAuCE,IACvC,OAGJ9T,GAAc4L,KAAK8L,MAAM9L,KAAKC,UAAU4L,KACxC9E,GAAoB,GACpB,IAAIgF,EAAc,CAChB,CACE1T,KAAM,GACN3C,KAAM,GACNpF,KAAM,GACNuF,GAAI,GACJQ,MAAO,GACPL,WAAY,IAEd,CACEqC,KAAM,GACN3C,KAAM,GACNpF,KAAM,GACNuF,GAAI,GACJQ,MAAO,GACPL,WAAY,IAEd,CACEqC,KAAM,GACN3C,KAAM,GACNpF,KAAM,GACNuF,GAAI,GACJQ,MAAO,GACPL,WAAY,KAGhB1G,IACG+V,KAAK1Q,GAAW,cAAe,CAC9BqX,MAAOH,IAERpc,MAAK,SAACmF,GACLuS,EAAe,yBACfE,EAAe,WACfJ,GAAgB,GAChBoC,GAAU0C,MAIX/W,OAAM,SAACC,GACNR,QAAQC,IAAIO,MAEhB6F,SAASC,eAAe,qBAAqB9H,MAAM7G,QAAU,SAkhBrD,kBAAC,KAAD,SAMN,kBAACsZ,GAAA,EAAD,CACEH,KAAMiC,EACN/B,QAAStB,GACT/E,kBAAgB,qBAChBuG,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAa/S,GAAG,sBAAhB,mBAGA,kBAACgT,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBjT,GAAG,4BAAtB,wCAIF,kBAACkT,GAAA,EAAD,KACE,kBAAC1S,EAAA,EAAD,CAAQxB,QAASsS,GAAmBhY,MAAM,UAAUoV,WAAS,GAA7D,UAGA,kBAAClO,EAAA,EAAD,CAAQxB,QA3mBK,SAAC2J,GACpB,IAAIyQ,EAAU,IAAInc,IAAIoY,IACtB+D,EAAQjG,OAAO4B,GACfO,GAAa8D,GACb9E,EAAe,oBACfE,EAAe,WACfJ,GAAgB,GAChB9C,GAAkB3I,IAomBmBrP,MAAM,WAArC,aAOJ,kBAACuZ,GAAA,EAAD,CACEH,KAAM+B,EACN7B,QAASsE,GACT3K,kBAAgB,qBAChBuG,mBAAiB,2BACjB5R,SAAU,MAEV,kBAAC6R,GAAA,EAAD,CAAa/S,GAAG,sBAAhB,8BAGA,kBAACgT,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBjT,GAAG,4BAAtB,mFAGA,kBAACgM,EAAA,EAAD,CACE5L,MAAO,CAACzG,MAAO,MAAOuB,YAAa,MACnCqC,MAAO4Y,GACPjK,SAAU,SAACvD,GAAOyN,GAAkBzN,EAAEb,OAAOvK,QAC7CwU,cAAY,EACZnX,UAAWL,EAAQoZ,YACnBzB,YAAa,SAACC,GACZ,OAAKA,GACI,yBAAK/R,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,WAKX6F,WAAY,CAAE,aAAc,kBAE3B2H,GAAW1J,KAAI,SAACkD,EAAM+D,GACrB,OACE,kBAACiO,GAAA,EAAD,CAAU/U,MAAO+C,EAAKoC,QAASpC,EAAKoC,YAI1C,kBAACsJ,EAAA,EAAD,CACIhM,GAAG,cACHI,MAAO,CAACzG,MAAO,OACf4D,MAAO8Y,GACPnK,SAAU,SAACvD,GAAO2N,GAAgB3N,EAAEb,OAAOvK,QAC3CwU,cAAY,EACZnX,UAAWL,EAAQoZ,YACnBzB,YAAa,SAACC,GACZ,OAAKA,GACI,yBAAK/R,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,mBAKX6F,WAAY,CAAE,aAAc,kBAE5B,kBAACmT,GAAA,EAAD,CAAU/U,MAAM,GAAG6C,MAAO,CAAC9G,MAAO,SAAS,qCAC3C,kBAACgZ,GAAA,EAAD,CAAU/U,MAAM,wBAAhB,wBACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,gBAAhB,gBACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,oBAAhB,oBACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,iBAAhB,mBAGN,kBAAC2V,GAAA,EAAD,KACE,kBAAC1S,EAAA,EAAD,CAAQxB,QAASkY,GAA2B5d,MAAM,UAAUoV,WAAS,GAArE,UAGA,kBAAClO,EAAA,EAAD,CAAQxB,QAtlBQ,WAEtBoW,GAAgB,IAChBF,GAAkB,IAClB,IAAImE,EAAOlM,KAAK8L,MAAM9L,KAAKC,UAAUtG,KACrC,GAAIuP,GASF,IAAK,IAAI5U,EAAI,EAAGA,EAAIqF,GAAWtI,OAAQiD,IAAK,CAE1C,GADWqF,GAAWrF,GAChBiB,SAAWyT,GAAgB,CAC/BkD,EAAK5X,GAAGkB,GAAG0T,IAAgB,GAC3B,YAZJ,IAAK,IAAI5U,EAAI,EAAGA,EAAIqF,GAAWtI,OAAQiD,IAAK,CAE1C,GADWqF,GAAWrF,GAChBiB,SAAWyT,GAAgB,CAC/BkD,EAAKhb,OAAOoD,EAAG,GACf,OAYNF,GAAc4L,KAAK8L,MAAM9L,KAAKC,UAAUiM,KACxC5c,IACG+V,KAAK1Q,GAAW,cAAe,CAC9BqX,MAAOE,IAERzc,MAAK,SAACmF,GACLuS,EAAe6B,IAAmBE,GAAkB,IAAMA,GAAgB,IAAM,sBAChF7B,EAAe,WACfJ,GAAgB,GAChBkC,GAAgB,IAChBF,GAAkB,OAInBjU,OAAM,SAACC,GACNR,QAAQC,IAAIO,MAEhBsS,GAAgB,IA+iBwBpb,MAAM,UAAU4F,UAAWiX,IAA7D,aAOJ,kBAACtD,GAAA,EAAD,CAAQH,KAAM+C,GAAW7C,QAASuE,GAAwB5K,kBAAgB,qBACxE,kBAACwG,GAAA,EAAD,CAAa/S,GAAG,qBAAhB,+BACA,kBAACgT,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,qCAGA,kBAACjH,EAAA,EAAD,CACE5L,MAAO,CAACzG,MAAO,QAASuB,YAAa,QACrCqC,MAAOsY,GACP3J,SAAU,SAACvD,GAAOmN,GAAkBnN,EAAEb,OAAOvK,QAC7CwU,cAAY,EACZnX,UAAWL,EAAQoZ,YACnBzB,YAAa,SAACC,GACZ,OAAKA,GACI,yBAAK/R,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,UAKX6F,WAAY,CAAE,aAAc,kBAE5B,kBAACmT,GAAA,EAAD,CAAU/U,MAAM,WAAhB,WACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,YAAhB,YACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,SAAhB,SACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,SAAhB,SACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,OAAhB,OACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,QAAhB,QACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,QAAhB,QACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,UAAhB,UACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,aAAhB,aACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,WAAhB,WACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,YAAhB,YACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,YAAhB,aAEF,kBAACyO,EAAA,EAAD,CACE5L,MAAO,CAACzG,MAAO,SACf4D,MAAOwY,GACP7J,SAAU,SAACvD,GAAOqN,GAAiBrN,EAAEb,OAAOvK,QAC5CwU,cAAY,EACZnX,UAAWL,EAAQoZ,YACnBzB,YAAa,SAACC,GACZ,OAAKA,GACI,yBAAK/R,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,SAKX6F,WAAY,CAAE,aAAc,kBAE3B2U,EAAM1W,KAAI,SAACkD,EAAM+D,GAChB,OACE,kBAACiO,GAAA,EAAD,CAAU/U,MAAO+C,GAAOA,QAKhC,kBAAC4S,GAAA,EAAD,KACE,kBAAC1S,EAAA,EAAD,CAAQxB,QAASmY,GAAwB7d,MAAM,UAAUoV,WAAS,GAAlE,UAGA,kBAAClO,EAAA,EAAD,CAAQxB,QAlmBK,SAAC2J,GACpBA,EAAEK,iBACF,IAAIsQ,EAAU,GAId,GAHAxS,GAAW1J,KAAI,SAACkD,EAAM+D,GACpBiV,EAAQ9b,KAAK8C,EAAKoC,WAEjB4W,EAAQvW,SAAS8S,GAAiB,IAAME,IACzCzB,EAAeuB,GAAiB,IAAME,GAAgB,aACtDvB,EAAe,SACfJ,GAAgB,GAChB0B,GAAkB,IAClBE,GAAiB,IACjBN,IAAa,OACR,CACL,IAAI6D,EAAc,CAChB,OAAU1D,GAAiB,IAAME,GACjC,GAAM,CACJ,uBAAwB,GACxB,eAAgB,GAChB,mBAAoB,GACpB,cAAiB,KAGjByD,EAAY1S,GAChB0S,EAAUhc,KAAK+b,GACfhY,GAAciY,GAEd/c,IACG+V,KAAK1Q,GAAW,cAAe,CAC9BqX,MAAOK,IAER5c,MAAK,SAACmF,GACLuS,EAAe,qBACfE,EAAe,WACfJ,GAAgB,GAChB0B,GAAkB,IAClBE,GAAiB,IACjBN,IAAa,MAIdvT,OAAM,SAACC,GACNR,QAAQC,IAAIO,QAwjBmBlD,UAAW2W,KAAkBE,GAA+Bzc,MAAM,WAAjG,aAOJ,kBAACuZ,GAAA,EAAD,CAAQH,KAAMiD,GAAY/C,QAASwE,GAAyB7K,kBAAgB,oBAAoBrL,SAAU,MACxG,kBAAC6R,GAAA,EAAD,CAAa/S,GAAG,qBAAhB,4BACA,kBAACgT,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,oGAGA,kBAAC/S,EAAA,EAAD,CAAMC,WAAS,EAAChF,QAAS,GACvB,kBAAC+E,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAI,GACb,kBAACM,EAAA,EAAD,CACE5L,MAAO,CAACzG,MAAO,OAAQuB,YAAa,QACpCqC,MAAO0Y,GACP/J,SAAU,SAACvD,GAAOuN,GAAkBvN,EAAEb,OAAOvK,QAC7CwU,cAAY,EACZnX,UAAWL,EAAQoZ,YACnBzB,YAAa,SAACC,GACZ,OAAKA,GACI,yBAAK/R,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,wBAKX6F,WAAY,CAAE,aAAc,kBAE3B2H,GAAW1J,KAAI,SAACkD,EAAM+D,GACrB,OACE,kBAACiO,GAAA,EAAD,CAAU/U,MAAO+C,EAAKoC,QAASpC,EAAKoC,aAK5C,kBAACxC,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAI,GACb,kBAACM,EAAA,EAAD,CACE5L,MAAO,CAACzG,MAAO,OAAQuB,YAAa,QACpCqC,MAAOsY,GACP3J,SAAU,SAACvD,GAAOmN,GAAkBnN,EAAEb,OAAOvK,QAC7CwU,cAAY,EACZnX,UAAWL,EAAQoZ,YACnBzB,YAAa,SAACC,GACZ,OAAKA,GACI,yBAAK/R,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,UAKX6F,WAAY,CAAE,aAAc,kBAE5B,kBAACmT,GAAA,EAAD,CAAU/U,MAAM,WAAhB,WACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,YAAhB,YACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,SAAhB,SACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,SAAhB,SACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,OAAhB,OACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,QAAhB,QACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,QAAhB,QACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,UAAhB,UACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,aAAhB,aACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,WAAhB,WACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,YAAhB,YACA,kBAAC+U,GAAA,EAAD,CAAU/U,MAAM,YAAhB,cAGJ,kBAAC2C,EAAA,EAAD,CAAMI,MAAI,EAACoL,GAAI,GACb,kBAACM,EAAA,EAAD,CACE5L,MAAO,CAACzG,MAAO,QACf4D,MAAOwY,GACP7J,SAAU,SAACvD,GAAOqN,GAAiBrN,EAAEb,OAAOvK,QAC5CwU,cAAY,EACZnX,UAAWL,EAAQoZ,YACnBzB,YAAa,SAACC,GACZ,OAAKA,GACI,yBAAK/R,MAAO,CAACgS,KAAM,UAAW9Y,MAAO,SAArC,SAKX6F,WAAY,CAAE,aAAc,kBAE3B2U,EAAM1W,KAAI,SAACkD,EAAM+D,GAChB,OACE,kBAACiO,GAAA,EAAD,CAAU/U,MAAO+C,GAAOA,UAOpC,kBAAC4S,GAAA,EAAD,KACE,kBAAC1S,EAAA,EAAD,CAAQxB,QAASoY,GAAyB9d,MAAM,UAAUoV,WAAS,GAAnE,UAGA,kBAAClO,EAAA,EAAD,CAAQxB,QA3kBM,WACpB,IAAIya,EACAH,EAAU,GAId,GAHAxS,GAAW1J,KAAI,SAACkD,EAAM+D,GACpBiV,EAAQ9b,KAAK8C,EAAKoC,WAEjB4W,EAAQvW,SAAS8S,GAAiB,IAAME,IACzCzB,EAAeuB,GAAiB,IAAME,GAAgB,aACtDvB,EAAe,SACfJ,GAAgB,GAChB0B,GAAkB,IAClBE,GAAiB,IACjBN,IAAa,QAEb,IAAK,IAAIjU,EAAI,EAAGA,EAAIqF,GAAWtI,OAAQiD,IAAK,CAC1C,IAAMgB,EAAUqE,GAAWrF,GAC3B,GAAGgB,EAAQC,SAAWuT,GAAgB,CACpCwD,EAAmB,CACjB,OAAU5D,GAAiB,IAAME,GACjC,GAAMtT,EAAQE,IAEhB,IAAIqW,EAAe7L,KAAK8L,MAAM9L,KAAKC,UAAUtG,KAE7CkS,EAAaxb,KAAKic,GAElBlY,GAAcyX,GACdvc,IACG+V,KAAK1Q,GAAW,cAAe,CAC9BqX,MAAOH,IAERpc,MAAK,SAACmF,GACLuS,EAAe,UAAY2B,GAAiB,cAAgBJ,GAAiB,IAAME,GAAgB,KACnGvB,EAAe,WACfJ,GAAgB,GAChB0B,GAAkB,IAClBE,GAAiB,IACjBE,GAAkB,IAClBR,IAAa,MAIdvT,OAAM,SAACC,GACNR,QAAQC,IAAIO,MAEdwT,IAAc,GAChB,SA8hBgC1W,UAAW2W,KAAkBE,GAA+Bzc,MAAM,WAAlG,aAKJ,kBAACmZ,GAAA,EAAD,CACEC,KAAMyB,EACNxB,iBAAkB,IAClBC,QAASvB,IAET,kBAAC,GAAD,CACEuB,QAASvB,GACTlG,SAAUoJ,GAETF,K,oCCxlCL9Y,GAAYnC,aAAW,SAAC4B,GAAD,MAAY,CACvCmF,UAAW,CACT1G,WAAY,UAEdJ,KAAM,CACJqgB,SAAU,OAcd,SAASC,GAASrf,GAChB,IAAQsf,EAAqCtf,EAArCsf,SAAUrc,EAA2BjD,EAA3BiD,MAAO8G,EAAoB/J,EAApB+J,MAAUwV,EAAnC,YAA6Cvf,EAA7C,IAEA,OACE,uCACEmF,KAAK,WACL8X,OAAQha,IAAU8G,EAClBrE,GAAE,0BAAqBqE,GACvBkI,kBAAA,qBAA+BlI,IAC3BwV,GAEHtc,IAAU8G,GACT,kBAACyV,GAAA,EAAD,CAAKpR,EAAG,GACN,kBAAC0D,GAAA,EAAD,KAAawN,KAavB,SAASG,GAAU1V,GACjB,MAAO,CACLrE,GAAG,cAAD,OAAgBqE,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIzB,SAAS2V,GAAM1f,GAC5B,IAAMC,EAAUgB,KAChB,EAA0BW,IAAMC,SAzClC,WACE,IAAM8d,EAAcC,eAAeC,QAAQ,SACrCC,EAAYjN,KAAK8L,MAAMgB,GAC7B,cAAOG,QAAP,IAAOA,OAAP,EAAOA,EAAWnM,MAsCuBoM,IAAzC,mBACA,GADA,UACkCne,IAAMC,SAAS,IAAjD,mBAAOme,EAAP,KAAkBC,EAAlB,KAwBA,OACE,yBAAK3f,UAAWL,EAAQ4F,WACtB,kBAACwL,EAAA,EAAD,CAAO/Q,UAAWL,EAAQlB,MACxB,kBAACmhB,GAAA,EAAD,CACEjd,MAAO+c,EACPpO,SAfa,SAACrE,EAAOgF,GAC3B0N,EAAa1N,IAeP4N,eAAe,UACfC,UAAU,UACVC,UAAQ,GAER,kBAACC,GAAA,EAAD,eAAKtP,MAAM,qBAAwByO,GAAU,KAC7C,kBAACa,GAAA,EAAD,eAAKtP,MAAM,4BAA+ByO,GAAU,OAGxD,kBAACJ,GAAD,CAAUpc,MAAO+c,EAAWjW,MAAO,GACjC,kBAACmL,GAAD,OAEF,kBAACmK,GAAD,CAAUpc,MAAO+c,EAAWjW,MAAO,GACjC,kBAACwP,GAAD,Q,oJC1GFgH,GAAeC,KACfC,GAAiBC,KAEjBC,GAAc,CAClBC,WAAY,CACVC,iBAAiB,GAEnBvf,QAAS,CACPqE,QAAS6a,KACTtN,UAAWwN,KACXI,MAAOC,KAGPC,kBAAmB,EAInBC,YAAa,KAMXC,GAAeP,GAERQ,GAAWC,aAAY,CAClCje,KAAM,WACNke,aAAc,CACZ3gB,MAAOwgB,GACPI,UAAU,EACVC,cAAc,GAEhBC,SAAU,CACRC,gBAAiB,SAACnO,EAAO8I,GACnBA,EAAOsF,SACTpO,EAAMgO,UAAW,EACjBhO,EAAM5S,MAAN,2BACKigB,IADL,IAEErf,QAAQ,2BACHqf,GAAYrf,SADV,IAELqE,QAAS2N,EAAM5S,MAAMY,QAAQqE,QAC7BuN,UAAWI,EAAM5S,MAAMY,QAAQ4R,UAC/BhI,KAAM,aAIVoI,EAAMgO,UAAW,EACjBhO,EAAM5S,MAAN,2BACKigB,IADL,IAEErf,QAAQ,2BACHqf,GAAYrf,SADV,IAELqE,QAAS2N,EAAM5S,MAAMY,QAAQqE,QAC7BuN,UAAWI,EAAM5S,MAAMY,QAAQ4R,eAKrCI,EAAMrQ,MAAQmZ,EAAOsF,SAEvBC,gBAAiB,SAACrO,EAAO8I,GACnBA,EAAOsF,SACTpO,EAAMiO,cAAe,EACrBjO,EAAM5S,MAAN,2BACOigB,IADP,IAEIrf,QAAQ,2BACHgS,EAAM5S,MAAMY,SADV,IAELqE,QAAS8a,GACTvN,UAAWqN,SAIjBjN,EAAMiO,cAAe,EACrBjO,EAAM5S,MAAN,2BACKigB,IADL,IAEErf,QAAQ,2BACHgS,EAAM5S,MAAMY,SADV,IAELqE,QAAS4a,GACTrN,UAAWuN,YAQhB,GAA6CU,GAAShF,QAA9CsF,GAAR,GAAQA,gBAAiBE,GAAzB,GAAyBA,gBAEnBC,GAAa,SAAAtO,GAAK,OAAIA,EAAM6N,SAASG,UAErCO,GAAgB,SAAAvO,GAAK,OAAIA,EAAM6N,SAASI,cAExCO,GAAW,SAAAxO,GAAK,OAAIA,EAAM6N,SAASzgB,OAEjCygB,MAAf,QClFe,SAASY,KAEtB,IAAMT,EAAWU,YAAYJ,IACvBK,EAAcD,YAAYH,IAE1BK,EAAWC,cAEjB,OACA,6BACE,kBAACrQ,GAAA,EAAD,CAAY3L,QAAQ,MAApB,YACA,kBAAC7B,EAAA,EAAD,KACE,kBAAC8d,GAAA,EAAD,KACE,kBAACpd,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACG,EAAA,EAAD,CAAcE,QAAQ,cACtB,kBAAC0c,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACE1Q,SAAU,SAACvD,EAAGvM,GAAJ,OAAiBogB,EAAST,GAAgB3f,KACpDA,QAASwf,MAIf,kBAACjc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACG,EAAA,EAAD,CAAcE,QAAQ,gBACtB,kBAAC0c,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACE1Q,SAAU,SAACvD,EAAGvM,GAAJ,OAAgBogB,EAASP,GAAgB7f,KACnDA,QAASmgB,U,iEChDVM,GCsDArkB,aA/CA,SAAAwC,GAAK,MAAK,CACvB8hB,YAAa,CACXC,aAAc,IAEhBC,WAAY,CACV/W,WAAY,GACZ/K,YAAa,IAEfyD,MAAO,CACL+a,SAAU,MAsCClhB,EAlCA,SAAA8B,GACb,IAAQC,EAAgCD,EAAhCC,QAAS0iB,EAAuB3iB,EAAvB2iB,mBACjB,OACE,kBAACC,GAAA,EAAD,CAAQnX,SAAS,SACf,kBAACoX,GAAA,EAAD,CAASC,gBAAgB,EAAM7iB,QAAS,CAAElB,KAAMkB,EAAQuiB,cACtD,kBAACtL,GAAA,EAAD,CACElY,MAAM,UACNuH,aAAW,cACX7B,QAASie,EACTriB,UAAWL,EAAQyiB,YAEnB,kBAAC,KAAD,OAEF,kBAAC5Q,GAAA,EAAD,CACE3L,QAAQ,KACRnH,MAAM,UACN+jB,QAAM,EACNziB,UAAWL,EAAQoE,OAJrB,sC,oDCjCO2e,GCiFA9kB,aAnEA,SAAAwC,GAAK,MAAK,CACvBuiB,YAAa,CACXxX,SAAU,QACVrN,IAAKsC,EAAMG,QAAQ,GACnBqiB,WAAY,SACZ7jB,MAPgB,IAQhB8jB,WAAYziB,EAAM0iB,YAAYC,OAAO,QAAS,CAC5CC,OAAQ5iB,EAAM0iB,YAAYE,OAAOC,MACjCC,SAAU9iB,EAAM0iB,YAAYI,SAASC,kBAGzCC,iBAAiB,aACf3K,UAAW,SACXoK,WAAYziB,EAAM0iB,YAAYC,OAAO,QAAS,CAC5CC,OAAQ5iB,EAAM0iB,YAAYE,OAAOC,MACjCC,SAAU9iB,EAAM0iB,YAAYI,SAASG,gBAEvCtkB,MAAOqB,EAAMG,QAAQ,IACpBH,EAAMkjB,YAAYC,GAAG,MAAQ,CAC5BxkB,MAAOqB,EAAMG,QAAQ,QAgDZ3C,EA3CC,SAAA8B,GACd,IAAQoY,EAAkBpY,EAAlBoY,KAAMnY,EAAYD,EAAZC,QACd,OACE,kBAAC6jB,GAAA,EAAD,CACE3d,QAAQ,YACRlG,QAAS,CACPuB,MAAOuiB,KACL9jB,EAAQgjB,aACP7K,GAAQnY,EAAQyjB,mBAGrBtL,KAAMA,GAEN,kBAACpT,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMgf,GAAG,IAAIle,MAAO,CAAEme,eAAgB,SACpC,kBAAC5e,EAAA,EAAD,CAAU1E,QAAM,GACd,kBAAC2E,EAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACG,EAAA,EAAD,CAAcE,QAAQ,gBAG1B,kBAAC,IAAD,CAAMqe,GAAG,SAASle,MAAO,CAAEme,eAAgB,SACzC,kBAAC5e,EAAA,EAAD,CAAU1E,QAAM,GACd,kBAAC2E,EAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACG,EAAA,EAAD,CAAcE,QAAQ,YAG1B,kBAAC,IAAD,CAAMqe,GAAG,WAAWle,MAAO,CAAEme,eAAgB,SAC3C,kBAAC5e,EAAA,EAAD,CAAU1E,QAAM,GACd,kBAAC2E,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACG,EAAA,EAAD,CAAcE,QAAQ,oBC5C5Bue,G,+MACJ5Q,MAAQ,CACN8E,MAAM,G,EAGRuK,mBAAqB,WACnB,EAAKtO,UAAS,SAAA8P,GACZ,MAAO,CAAE/L,MAAO+L,EAAU/L,U,6CAI9B,WACE,MAA8B3E,KAAKzT,MAA3BC,EAAR,EAAQA,QAASqf,EAAjB,EAAiBA,SACjB,OACE,kBAAC,WAAD,KACE,yBAAKhf,UAAWL,EAAQlB,MACtB,kBAAC,GAAD,CACE4jB,mBAAoBlP,KAAKkP,qBAE3B,0BACEriB,UAAWyjB,KAAW9jB,EAAQmkB,QAAT,eAClBnkB,EAAQokB,aAAe5Q,KAAKH,MAAM8E,QAGpCkH,IAGL,kBAAC,GAAD,CAASlH,KAAM3E,KAAKH,MAAM8E,KAAMkM,YAlDpB,W,GAuBK/P,aAiCVrW,gBAtDA,SAAAwC,GAAK,MAAK,CACvB3B,KAAM,CACJE,QAAS,QAEXmlB,QAAS,CACPhF,SAAU,EACVzT,WAAYjL,EAAMG,QAAQ,GAC1BO,QAASV,EAAMG,QAAQ,GACvBE,UAAWL,EAAMG,QAAQ,GACzBkY,UAAW,UAEbsL,aAAc,CACZ1Y,WAdgB,IAehBtM,MAAM,eAAD,OAfW,IAeX,OACL8jB,WAAYziB,EAAM0iB,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQ5iB,EAAM0iB,YAAYE,OAAOC,MACjCC,SAAU9iB,EAAM0iB,YAAYI,SAASC,qBAsC5BvlB,CAAmBgmB,ICzDnBK,GAJK,SAAAvkB,GAClB,OAAO,yBAAK8F,MAAO,CAAE5G,OAAQ,YAAcc,EAAMsf,W,kCCiB7CkF,GAAW,WACf,OAAO,0CAGHC,GAAiB,SAAC,GAAuC,IAA1BlQ,EAAyB,EAApCrP,UAAyBwf,EAAW,kBAC5D,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAC,GAAU,OAChB,kBAAC,GAAD,KACE,kBAACrQ,EAAcqQ,SAOnBC,GAAa,SAAC,GAAuC,IAA1BtQ,EAAyB,EAApCrP,UAAyBwf,EAAW,kBACxD,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAC,GAAU,OAChB,kBAAC,GAAD,KACE,kBAACrQ,EAAcqQ,SAOV,SAASE,KAEtB,IAAMC,EAAW/C,YAAYF,IAE7B,OACE,kBAAC,IAAD,CAAkBphB,MAAOskB,YAAeD,IACtC,kBAACjR,EAAA,EAAD,MACA,yBAAKhO,MAAO,CAAE5G,OAAQ,UACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAgB+lB,KAAK,aAAa/f,UAAW6G,KAC7C,kBAAC,GAAD,CAAgBkZ,KAAK,SAAS/f,UAAWwa,KACzC,kBAAC,GAAD,CAAgBuF,KAAK,WAAW/f,UAAW6c,KAC3C,kBAAC,GAAD,CAAgBmD,OAAK,EAACD,KAAK,IAAI/f,UAAW6G,KAC1C,kBAAC,GAAD,CAAY7G,UAAWsf,SC5DpBW,oBAAe,CAC5BC,QAAS,CACPjE,SAAUA,MCEdkE,IAASV,OACP,kBAAC,IAAMW,WAAP,KACE,kBAAC,IAAD,CAAUC,MAAOA,IACf,kBAACT,GAAD,QAGJnX,SAASC,eAAe,SnBqHpB,kBAAmB4X,WACrBA,UAAUC,cAAcC,MAAMpjB,MAAK,SAAAqjB,GACjCA,EAAaC,kB","file":"static/js/main.ccb6c3c6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Check from '@material-ui/icons/Check';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nexport const QontoConnector = withStyles({\r\n    alternativeLabel: {\r\n      top: 10,\r\n      left: 'calc(-50% + 16px)',\r\n      right: 'calc(50% + 16px)',\r\n    },\r\n    active: {\r\n      '& $line': {\r\n        borderColor: '#784af4',\r\n      },\r\n    },\r\n    completed: {\r\n      '& $line': {\r\n        borderColor: '#784af4',\r\n      },\r\n    },\r\n    line: {\r\n      borderColor: '#eaeaf0',\r\n      borderTopWidth: 3,\r\n      borderRadius: 1,\r\n    },\r\n  })(StepConnector);\r\n  \r\n  export const useQontoStepIconStyles = makeStyles({\r\n    root: {\r\n      color: '#eaeaf0',\r\n      display: 'flex',\r\n      height: 22,\r\n      alignItems: 'center',\r\n    },\r\n    active: {\r\n      color: '#784af4',\r\n    },\r\n    circle: {\r\n      width: 8,\r\n      height: 8,\r\n      borderRadius: '50%',\r\n      backgroundColor: 'currentColor',\r\n    },\r\n    completed: {\r\n      color: '#784af4',\r\n      zIndex: 1,\r\n      fontSize: 18,\r\n    },\r\n  });\r\n  \r\n  export function QontoStepIcon(props) {\r\n    const classes = useQontoStepIconStyles();\r\n    const { active, completed } = props;\r\n  \r\n    return (\r\n      <div\r\n        className={clsx(classes.root, {\r\n          [classes.active]: active,\r\n        })}\r\n      >\r\n        {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  QontoStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n  };\r\n  \r\n  export const ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n      top: 22,\r\n    },\r\n    active: {\r\n      '& $line': {\r\n        backgroundImage:\r\n          'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n      },\r\n    },\r\n    completed: {\r\n      '& $line': {\r\n        backgroundImage:\r\n          'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n      },\r\n    },\r\n    line: {\r\n      height: 3,\r\n      border: 0,\r\n      backgroundColor: '#eaeaf0',\r\n      borderRadius: 1,\r\n    },\r\n  })(StepConnector);\r\n  \r\n  export const useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n      backgroundColor: '#ccc',\r\n      zIndex: 1,\r\n      color: '#fff',\r\n      width: 50,\r\n      height: 50,\r\n      display: 'flex',\r\n      borderRadius: '50%',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    active: {\r\n      backgroundImage:\r\n        'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n      boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n    },\r\n    completed: {\r\n      backgroundImage:\r\n        'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    },\r\n  });\r\n  \r\n  export function ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n  \r\n    const icons = {\r\n      1: <SettingsIcon />,\r\n      2: <GroupAddIcon />,\r\n      3: <VideoLabelIcon />,\r\n    };\r\n  \r\n    return (\r\n      <div\r\n        className={clsx(classes.root, {\r\n          [classes.active]: active,\r\n          [classes.completed]: completed,\r\n        })}\r\n      >\r\n        {icons[String(props.icon)]}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  ColorlibStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n    /**\r\n     * The label displayed in the step icon.\r\n     */\r\n    icon: PropTypes.node,\r\n  };\r\n  \r\n  export const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    button: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  }));\r\n  \r\n  export function getSteps() {\r\n    return ['Submit Information', 'Generate Programme Structure'];\r\n  }","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n// import subjects from '../../constants/subjectList.json'\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  cardHeader: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  list: {\r\n    width: 380,\r\n    height: 300,\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow: 'auto',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nexport default function TransferList({rightCallback}) {\r\n  const classes = useStyles();\r\n\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([]);\r\n  const [right, setRight] = React.useState([]);\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     checked: [],\r\n  //     left: [],\r\n  //     right: [],\r\n  //   }\r\n  // }\r\n\r\n  // set the subjects from json file to the transfer list once this page is load\r\n  useEffect(() =>{\r\n    axios.get(process.env.REACT_APP_API_PATH + \"/subjectList.json\")\r\n      .then((response) => {\r\n        let subject = [];\r\n        Array.from(new Map(response.data).entries())\r\n          .map((entry) => {\r\n            const [key, value] = entry;\r\n            return subject.push(key + \" \" + value.name);\r\n          })\r\n        setLeft(subject);\r\n        // this.setState({left: subject});\r\n      });\r\n  }, []);\r\n\r\n  // componentDidMount(){\r\n  //   axios.get(process.env.REACT_APP_API_PATH + \"/subjectList.json\")\r\n  //     .then((response) => {\r\n  //       let subject = [];\r\n  //       response.data.sort((a, b) => (a.code > b.code) ? 1 : ((b.code > a.code) ? -1 : 0))\r\n  //         .map((value, index) => {\r\n  //           return subject.push(value.code + \" \" + value.name);\r\n  //         })\r\n  //       this.setState({left: subject});\r\n  //     });\r\n  // }\r\n\r\n  const not = (a, b) => {\r\n    return a.filter((value) => b.indexOf(value) === -1);\r\n  }\r\n  \r\n  const intersection = (a, b) => {\r\n    return a.filter((value) => b.indexOf(value) !== -1);\r\n  }\r\n  \r\n  const union = (a, b) => {\r\n    return [...a, ...not(b, a)];\r\n  }\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    // this.setState({checked: newChecked});\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n\r\n    setRight(right.concat(leftChecked).sort());\r\n    rightCallback(right.concat(leftChecked).sort());\r\n    setLeft(not(left, leftChecked).sort());\r\n    setChecked(not(checked, leftChecked).sort());\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    // this.setState({left: this.state.left.concat(rightChecked).sort((a, b) => (a.code > b.code) ? 1 : ((b.code > a.code) ? -1 : 0))})\r\n    // this.setState({right: not(this.state.right, rightChecked).sort((a, b) => (a.code > b.code) ? 1 : ((b.code > a.code) ? -1 : 0))})\r\n    // this.setState({checked: not(this.state.checked, rightChecked)})\r\n\r\n    setLeft(left.concat(rightChecked).sort());\r\n    setRight(not(right, rightChecked).sort());\r\n    rightCallback(not(right, rightChecked).sort());\r\n    setChecked(not(checked, rightChecked).sort());\r\n  };\r\n\r\n  const customList = (title, items) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n            disabled={items.length === 0}\r\n            inputProps={{ 'aria-label': 'all subjects selected' }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List className={classes.list} dense component=\"div\" role=\"list\">\r\n        {items.map((value) => {\r\n          // if (value.split(\" \", 1)[0].length >= 7) {   // to filter out the general subject types like electives or mpu (eg. E2 Elective #2)\r\n            const labelId = `transfer-list-all-item-${value}-label`;\r\n\r\n            return (\r\n              <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n                <ListItemIcon>\r\n                  <Checkbox\r\n                    checked={checked.indexOf(value) !== -1}\r\n                    tabIndex={-1}\r\n                    disableRipple\r\n                    inputProps={{ 'aria-labelledby': labelId }}\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText id={labelId} primary={`${value}`} />\r\n              </ListItem>\r\n            );\r\n          // }\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      style={{justifyContent: 'center', placeItems: 'center'}}\r\n      className={classes.root}\r\n    >\r\n      <Grid item>{customList('Subject List', left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList('Credit Transferred Subjects', right)}</Grid>\r\n    </Grid>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./psTable.css\";\r\nimport axios from \"axios\";\r\n\r\nrequire(\"dotenv\").config();\r\nconst API_PATH = process.env.REACT_APP_API_PATH;\r\nconst MAX_CH = 122;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    alignItem: \"center\",\r\n  },\r\n  table: {\r\n    maxWidth: \"50vw\"\r\n  }\r\n}));\r\nexport default function PSTable(props) {\r\n  const classes = useStyles();\r\n\r\n  // const [intakeNum, setIntakeNum] = useState(null);\r\n  const [selectedPS, setSelectedPS] = useState(new Map());\r\n  const [transferredCH, setTransferredCH] = useState(0);\r\n  const [standardPS, setStandardPS] = useState([]);\r\n  const [subjectList, setSubjectList] = useState();\r\n  // const [ch2D, setCh2D] = useState([]);\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     standardPS: [],\r\n  //     intakeNum: null,\r\n  //     selectedPS:[],\r\n  //   };\r\n  // }\r\n\r\n  useEffect(() => {\r\n    // format transferred subject list into subject code only\r\n    for (let i = 0; i < props.trans.length; i++) {\r\n      props.trans[i] = props.trans[i].substr(0, props.trans[i].indexOf(' '));\r\n    }\r\n    console.log(props.trans);\r\n\r\n    // fetch subjectList and standardPS from server\r\n    axios\r\n      .get(API_PATH + \"/subjectList.json\")\r\n      .then((res) => {\r\n        let subList = new Map(res.data)\r\n        setSubjectList(subList);\r\n\r\n        axios\r\n          .get(API_PATH + \"/standardPS.json\")\r\n          .then((response) => {\r\n            let generatedPS = generateCPS(new Map(res.data), response.data);          \r\n            \r\n            setStandardPS(response.data);\r\n            setSelectedPS(generatedPS);\r\n          }).catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n    console.log(props.trans);\r\n  }, []);\r\n\r\n  /** Function: \r\n   *    Generate Customized Programme Structure \r\n   *  Parameters: \r\n   *    Array[Object] sublist - subjectList from the server\r\n   *    Array[Object] standard - the complete standard programme structure\r\n   */\r\n  const generateCPS = (subList, standard) => {\r\n    let afterTransferPS = new Map();       // programme structure after removal of credit transferred subjects\r\n    let ch2d = [];\r\n    ch2d.push([0,0,0],[0,0,0],[0,0,0]);\r\n    console.log(ch2d);\r\n    let creditHour = MAX_CH;\r\n    \r\n    for (let i = 0; i < standard.length; i++) {    // loop all intake in standard programme structure\r\n      const element = standard[i];\r\n\r\n      /** \r\n       * Remove credit transferrec subjects\r\n       */\r\n      if (element.intake === props.intake) {    // if current intake is the selected intake\r\n        console.log(element.PS[props.spec]);  \r\n        // console.log(props.trans);\r\n\r\n        // if no subject is transferred, return the standard programme structure\r\n        if (props.trans.length === 0) {\r\n          return new Map(element.PS[props.spec]);\r\n        }\r\n\r\n        // loop subjects in the selected specialization and intake\r\n        let index = 0;\r\n        for (const [code, val] of element.PS[props.spec]) {\r\n          console.log(code);\r\n          console.log(val);\r\n\r\n          // if current subject is not transferred, push into the afterTransferPS array\r\n          if (!props.trans.includes(code)) {\r\n            afterTransferPS.set(code, val);\r\n            ch2d[val.defaultYear-1][val.defaultTri-1] += val.ch;\r\n            index++;\r\n          } else {\r\n            creditHour -= val.ch;\r\n          }\r\n        }\r\n        console.log(ch2d);\r\n        console.log(\"current total credit hour : \" + creditHour);\r\n\r\n        /**\r\n         * Logic: 1. get priority of subjects from programme structure after removed,\r\n         *        2. arrange it from high to low in an object array \r\n         *        3. take subject from the array when the trimester's credit hour is not enough\r\n         */\r\n\r\n        /**\r\n         * Step 1: Get priority of all subjects from the PS after removed\r\n         * \r\n         * - Initialize priorityList with all subjects in afterTransferPS, and set the priority to 0\r\n         * - Check if each subject in subjectList exists in the afterTransferPS/priorityList\r\n         * - if yes, check its prerequisites\r\n         * - if prerequisite subject also exists in priorityList/afterTransferPS, increment the priority value\r\n         * - Arrange the priorityList according to the value in non-increasing order\r\n         *  \r\n         */ \r\n        var priorityList = new Map(); \r\n        for (const [code, subj] of afterTransferPS) {\r\n          /**\r\n           * 1190 to Year 1 Trimester 1 subjects\r\n           * 1290 to Year 1 Trimester 2 subjects\r\n           * 1390 to Year 1 Trimester 3 subjects\r\n           * 2190 to Year 2 Trimester 1 subjects\r\n           */\r\n          let yearPriority = (subj.defaultTri === 3) ? subj.defaultYear*1000 + 1000 : subj.defaultYear*1000;\r\n          // yearPriority = (code.includes(\"TPT3101\")) ? yearPriority-1000 : yearPriority;\r\n          priorityList.set(code, yearPriority + subj.defaultTri*100 + 90);\r\n        }\r\n\r\n        console.log(afterTransferPS);\r\n        console.log(priorityList);\r\n        console.log(subList);\r\n\r\n\r\n        for (const [key, value] of subList) {\r\n          if(priorityList.has(key)) { \r\n            // console.log(\"has \" + subj.code);\r\n\r\n            // if the subject is offered once a year: -40  (xx90 -> xx50)\r\n            if(value.offer.length === 2) {\r\n              priorityList.set(key, priorityList.get(key)-10); \r\n            }\r\n            value.prereq.forEach(prereq => {\r\n              if(priorityList.has(prereq)) {\r\n                priorityList.set(prereq, priorityList.get(prereq)-10);\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        let sortedList = new Map([...priorityList.entries()].sort((a, b) => a[1] - b[1]));  // sort into non-decreasing order\r\n        \r\n        priorityList = new Map(sortedList);\r\n        console.log(priorityList);\r\n        \r\n        // Step 2: Initialize visited and toBePlacedSubjects set\r\n        // var visited = [];\r\n        var toBePlacedSubjects = [];    // only contains subjects code\r\n        for (const [code, val] of afterTransferPS) {\r\n          toBePlacedSubjects.push(code);\r\n        }\r\n        console.log(toBePlacedSubjects);    \r\n\r\n        // Step 3: loop until all subjects are placed\r\n        //    - remove existed subject of the current trimester from toBePlacedSubjects list\r\n        //    - check if credit hour of the trimester is enough/full\r\n        //    - if not, take the highest priority subject offered to replace\r\n        for (let thisYear = 1; thisYear <= 3; thisYear++) {\r\n          for (let thisTri = 1; thisTri <= 3; thisTri++) {\r\n\r\n            // remove existed subjects of current trimester from toBePlacedSubjects list\r\n            for (const [code, val] of afterTransferPS) {\r\n              if(val.defaultYear <= thisYear && val.defaultTri <= thisTri && toBePlacedSubjects.includes(code)){\r\n                toBePlacedSubjects.splice(toBePlacedSubjects.indexOf(code), 1);\r\n              }\r\n            }\r\n\r\n            console.log(toBePlacedSubjects);\r\n\r\n            let maxCHOfTri = (thisTri===3) ? props.shortLimit : props.longLimit;\r\n            var candidateSubject = anyReplaceble(thisYear, thisTri, priorityList, toBePlacedSubjects, subList, ch2d, maxCHOfTri, afterTransferPS);\r\n            console.log(\"candidateSubject\");\r\n            console.log(candidateSubject);\r\n            while(ch2d[thisYear-1][thisTri-1] <= maxCHOfTri && candidateSubject) {\r\n\r\n              for (let [code, val] of afterTransferPS) {\r\n                if(code === candidateSubject) {\r\n                  console.log(\"replaced \" + code);\r\n                  console.log(val);\r\n                  ch2d[val.defaultYear-1][val.defaultTri-1] -= val.ch;\r\n                  val.defaultTri = thisTri;\r\n                  val.defaultYear = thisYear;\r\n                  ch2d[thisYear-1][thisTri-1] += val.ch;\r\n                  toBePlacedSubjects.splice(toBePlacedSubjects.indexOf(candidateSubject), 1);\r\n                  break;\r\n                }\r\n              }\r\n              candidateSubject = anyReplaceble(thisYear, thisTri, priorityList, toBePlacedSubjects, subList, ch2d, maxCHOfTri, afterTransferPS);\r\n              console.log(\"candidateSubject\");\r\n              console.log(candidateSubject);\r\n            }\r\n            console.log(ch2d[thisYear-1][thisTri-1]);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    console.log(afterTransferPS);\r\n    return sortPSMap(afterTransferPS);\r\n  }\r\n\r\n  // check if any subject can be replaced\r\n  const anyReplaceble = (thisYear, thisTri, priorityList, toBePlacedSubjects, subList, ch2d, maxCHOfTri, afterTransferPS) => {\r\n    console.log(toBePlacedSubjects);\r\n    for (let index = 0; index < Array.from(priorityList.keys()).length; index++) {\r\n      const prioritySubjectCode = Array.from(priorityList.keys())[index];\r\n      if(subList.get(prioritySubjectCode) && toBePlacedSubjects.includes(prioritySubjectCode) && subList.get(prioritySubjectCode).offer.includes(thisTri) && \r\n          ch2d[thisYear-1][thisTri-1] + subList.get(prioritySubjectCode).ch <= maxCHOfTri && meetPrerequisite(prioritySubjectCode, thisYear, thisTri, afterTransferPS, subList, ch2d)) {\r\n          // && !toBePlacedSubjects.some( ai => subList.get(prioritySubjectCode).prereq.includes(ai) )) {    // check if prerequisite has been taken\r\n        console.log(prioritySubjectCode);\r\n        return prioritySubjectCode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // Function: Sort programme structure map in year and trimester order\r\n  const sortPSMap = (toSortPS) => {\r\n    let sortedPS = new Map();\r\n    for (let y = 1; y <= 3; y++) {\r\n      for (let t = 1; t <= 3; t++) {\r\n        for (let [code, val] of toSortPS) {\r\n          if(val.defaultYear===y && val.defaultTri===t) {\r\n            sortedPS.set(code, val);\r\n          }\r\n        }\r\n      } \r\n    }\r\n    return sortedPS;\r\n  }\r\n\r\n  // calculate total credit transferred credit hours\r\n  const sumTransferredCH = (subList) => {\r\n    let totalCHTransferred = 0;\r\n    props.trans.forEach(transSubject => {\r\n      totalCHTransferred += subList.get(transSubject).ch;\r\n    });\r\n    return totalCHTransferred;\r\n  }\r\n\r\n  /**\r\n   * Check if the subject meets the prerequisite requirements\r\n   * special requirements:\r\n   *  - fyp: 50 credit hours\r\n   *  - industrial training: 60 credit hours\r\n   */\r\n  const meetPrerequisite = (toCheckSubject, thisYear, thisTri, afterTransferPS, subList, ch2d) => {\r\n    let isMeet = true;\r\n    console.log(transferredCH);\r\n    if(toCheckSubject === \"TPT2201\" || toCheckSubject.includes(\"TPT3101\")) {    // if is industrial training \r\n      console.log(\"CHECKING prereq of \" + toCheckSubject);\r\n      let sumCH = 0;\r\n      const minCHRequire = (toCheckSubject === \"TPT2201\") ? 60 : 50;  // 60 for internship, 50 for fyp\r\n      for (let year = 0; year < thisYear; year++) {\r\n        for (let tri = 0; tri < thisTri; tri++) {\r\n          sumCH += ch2d[year][tri];\r\n        }\r\n      }\r\n      \r\n      isMeet = (sumCH+sumTransferredCH(subList) < minCHRequire) ? false : true;   // if total taken credit hour \r\n    }\r\n    // check if prerequisite is all taken in previous trimester \r\n    if(isMeet) {\r\n      subList.get(toCheckSubject).prereq.forEach((prereqSubjCode) => {\r\n        console.log(props.trans.includes(prereqSubjCode));\r\n        if(afterTransferPS.get(prereqSubjCode) && (afterTransferPS.get(prereqSubjCode).defaultYear > thisYear || \r\n            (afterTransferPS.get(prereqSubjCode).defaultYear === thisYear && afterTransferPS.get(prereqSubjCode).defaultTri >= thisTri))){\r\n          isMeet = false;\r\n        }\r\n      });\r\n    }\r\n    return isMeet;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {[1,2,3].map((yearNum) => {\r\n        return (\r\n          <>\r\n          <h1>Year {yearNum}</h1>\r\n          <table id={\"ps-table-y\"+yearNum} className={classes.table}>\r\n            <tr>\r\n              <th style={{padding: \"6px 30px\", width: \"10%\"}}>Category</th>\r\n              <th style={{padding: \"6px 30px\", width: \"20%\"}}>Subject Code</th>\r\n              <th style={{padding: \"6px 30px\", width: \"55%\"}}>Subject Name</th>\r\n              <th style={{padding: \"6px 30px\", width: \"5%\"}}>CH</th>\r\n              <th style={{padding: \"6px 30px\", width: \"10%\"}}>Trimester</th>\r\n            </tr>\r\n            {Array.from(selectedPS.entries()).map((entry) => {\r\n              const [code, val] = entry;\r\n              if (val.defaultYear === yearNum) {\r\n                return (\r\n                  <tr>\r\n                    <td>{val.type}</td>\r\n                    <td>{code}</td>\r\n                    <td>{val.name}</td>\r\n                    <td>{val.ch}</td>\r\n                    <td>{val.defaultTri}</td>\r\n                  </tr>\r\n                );\r\n              } else {\r\n                return <></>;\r\n              }\r\n            })}\r\n          </table>\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { getSteps, ColorlibConnector, ColorlibStepIcon } from './quontoComponent';\r\nimport TransferList from '../../components/Home/transferList';\r\nimport PSTable from '../../components/Home/psTable';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport axios from 'axios';\r\n\r\n// import Trimesters from '../../constants/trimesters.json';\r\n// import Specs from '../../constants/specs.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"100%\",\r\n  },\r\n  container: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  btnContainer: {\r\n    float: \"right\",\r\n  },\r\n  downloadBtn: {\r\n    margin: theme.spacing(0.5, 0),\r\n    padding:  theme.spacing(1, 1.5),\r\n  },\r\n  inputAlert: {\r\n    boxShadow: \"4px 5px #e4e4e4\",\r\n    position: \"absolute\",\r\n    zIndex: 100,\r\n    inlineSize: \"fit-content\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    display: \"none\"\r\n  },\r\n  pstable: {\r\n    textAlign: \"-webkit-center\"\r\n  }\r\n}));\r\n\r\nconst steps = getSteps();\r\n\r\nexport default function Home(props) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [intakeInputSize, setIntakeInputSize] = useState(2);\r\n  const [specInputSize, setSpecInputSize] = useState(2);\r\n  const [Specs, setSpecs] = useState([]);\r\n  const [standardPS, setStandardPS] = useState([]);\r\n  const [data, setData] = useState(\r\n    {\r\n      intake: '',\r\n      year: (new Date()).getFullYear(),\r\n      spec: ''\r\n    }\r\n  );\r\n  const [timerId, setTimerId] = useState(null);\r\n  const [right, setRight] = useState([]);\r\n  const [longTriCHLimit, setLongTriCHLimit] = useState(20);\r\n  const [shortTriCHLimit, setShortTriCHLimit] = useState(10);\r\n  const marksLong = [\r\n    {\r\n      value: 12,\r\n      label: '12 CH',\r\n    },\r\n    {\r\n      value: 20,\r\n      label: '20 CH',\r\n    },\r\n  ];\r\n  const marksShort = [\r\n    {\r\n      value: 6,\r\n      label: '6 CH',\r\n    },\r\n    {\r\n      value: 10,\r\n      label: '10 CH',\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if(window.innerWidth <= 480) {\r\n      setIntakeInputSize(5);\r\n      setSpecInputSize(6);\r\n    }\r\n    axios.get(process.env.REACT_APP_API_PATH + \"/standardPS.json\")\r\n      .then((response) => {\r\n        setStandardPS(response.data);\r\n      });\r\n    \r\n    axios.get(process.env.REACT_APP_API_PATH + \"/specs.json\")\r\n      .then((response) => {\r\n        setSpecs(response.data);\r\n      });\r\n  }, []);\r\n\r\n  const setRightCallback = useCallback((right) => {\r\n    setRight(right);\r\n  }, []);\r\n\r\n  const handleNext = () => {\r\n    if(data.intake && data.year && data.spec) {\r\n      let prevActiveStep = activeStep;\r\n      setActiveStep(prevActiveStep + 1);\r\n    } else {\r\n      showError();\r\n    }\r\n  };\r\n  \r\n  const handleBack = () => {\r\n    let prevActiveStep = activeStep;\r\n    setRight([]);\r\n    setActiveStep(prevActiveStep - 1);\r\n  };\r\n  \r\n  // reset step back to 0\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  \r\n  // handle intake and specialization input selection changes\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const updateData = {\r\n      ...data,\r\n      [name]: event.target.value\r\n    };\r\n    setData(updateData);\r\n  };\r\n\r\n  // pop up error message and close after 5 seconds\r\n  const showError = () => {\r\n    // document.getElementById(\"error-alert\").innerText = message;\r\n    document.getElementById(\"error-alert\").style.display = \"flex\";\r\n    const timerId = setTimeout(() => {\r\n      document.getElementById(\"error-alert\").style.display = \"none\";\r\n      setTimerId(null);\r\n    }, 5000);\r\n  }\r\n\r\n  // export to csv\r\n  var tablesToExcel = (function() {\r\n    var uri = 'data:application/vnd.ms-excel;base64,'\r\n    , tmplWorkbookXML = '<?xml version=\"1.0\"?><?mso-application progid=\"Excel.Sheet\"?><Workbook xmlns=\"urn:schemas-microsoft-com:office:spreadsheet\" xmlns:ss=\"urn:schemas-microsoft-com:office:spreadsheet\">'\r\n      + '<DocumentProperties xmlns=\"urn:schemas-microsoft-com:office:office\"><Author>Axel Richter</Author><Created>{created}</Created></DocumentProperties>'\r\n      + '<Styles>'\r\n      + '<Style ss:ID=\"Currency\"><NumberFormat ss:Format=\"Currency\"></NumberFormat></Style>'\r\n      + '<Style ss:ID=\"Date\"><NumberFormat ss:Format=\"Medium Date\"></NumberFormat></Style>'\r\n      + '</Styles>' \r\n      + '{worksheets}</Workbook>'\r\n    , tmplWorksheetXML = '<Worksheet ss:Name=\"{nameWS}\"><Table>{rows}</Table></Worksheet>'\r\n    , tmplCellXML = '<Cell{attributeStyleID}{attributeFormula}><Data ss:Type=\"{nameType}\">{data}</Data></Cell>'\r\n    , base64 = function(s) { return window.btoa(unescape(encodeURIComponent(s))) }\r\n    , format = function(s, c) { return s.replace(/{(\\w+)}/g, function(m, p) { return c[p]; }) }\r\n    return function(e, tables, wsnames, wbname, appname) {\r\n      e.preventDefault();\r\n      var ctx = \"\";\r\n      var workbookXML = \"\";\r\n      var worksheetsXML = \"\";\r\n      var rowsXML = \"\";\r\n\r\n      for (var i = 0; i < tables.length; i++) {\r\n        console.log(tables[i].nodeType);\r\n        console.log(document.getElementById(tables[i]));\r\n        if (!tables[i].nodeType) tables[i] = document.getElementById(tables[i]);\r\n        for (var j = 0; j < tables[i].rows.length; j++) {\r\n          rowsXML += '<Row>'\r\n          for (var k = 0; k < tables[i].rows[j].cells.length; k++) {\r\n            var dataType = tables[i].rows[j].cells[k].getAttribute(\"data-type\");\r\n            var dataStyle = tables[i].rows[j].cells[k].getAttribute(\"data-style\");\r\n            var dataValue = tables[i].rows[j].cells[k].getAttribute(\"data-value\");\r\n            dataValue = (dataValue)?dataValue:tables[i].rows[j].cells[k].innerHTML;\r\n            var dataFormula = tables[i].rows[j].cells[k].getAttribute(\"data-formula\");\r\n            dataFormula = (dataFormula)?dataFormula:(appname==='Calc' && dataType==='DateTime')?dataValue:null;\r\n            ctx = {  attributeStyleID: (dataStyle==='Currency' || dataStyle==='Date')?' ss:StyleID=\"'+dataStyle+'\"':''\r\n                    , nameType: (dataType==='Number' || dataType==='DateTime' || dataType==='Boolean' || dataType==='Error')?dataType:'String'\r\n                    , data: (dataFormula)?'':dataValue\r\n                    , attributeFormula: (dataFormula)?' ss:Formula=\"'+dataFormula+'\"':''\r\n                  };\r\n            rowsXML += format(tmplCellXML, ctx);\r\n          }\r\n          rowsXML += '</Row>'\r\n        }\r\n        ctx = {rows: rowsXML, nameWS: wsnames[i] || 'Sheet' + i};\r\n        worksheetsXML += format(tmplWorksheetXML, ctx);\r\n        rowsXML = \"\";\r\n      }\r\n\r\n      ctx = {created: (new Date()).getTime(), worksheets: worksheetsXML};\r\n      workbookXML = format(tmplWorkbookXML, ctx);\r\n\r\n\r\n\r\n      var link = document.createElement(\"A\");\r\n      link.href = uri + base64(workbookXML);\r\n      link.download = wbname || 'Workbook.xls';\r\n      link.target = '_blank';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }\r\n  })();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Alert id=\"error-alert\" severity=\"error\" className={classes.inputAlert}>Input field(s) cannot be empty!</Alert>\r\n      <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === 0 ? (\r\n          <div>\r\n            <Grid container spacing={3}>\r\n            {(window.innerWidth > 480 ? \r\n                <Grid item xs>\r\n                  <Paper className={classes.paper}></Paper>\r\n                </Grid>\r\n                :<div></div>\r\n            )}\r\n              <Grid item xs={intakeInputSize}>\r\n                <FormControl required className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"intake-native-simple\">Intake</InputLabel>\r\n                  <Select\r\n                    native\r\n                    value={data.intake}\r\n                    onChange={handleChange}\r\n                    inputProps={{\r\n                      name: 'intake',\r\n                      id: 'intake-native-simple',\r\n                    }}\r\n                    required\r\n                  >\r\n                    <option aria-label=\"None\" value=\"\" />\r\n                    {standardPS.map((item, index) => {\r\n                      return <option key={item.intake}>{item.intake}</option>\r\n                    })}\r\n                  </Select>\r\n                  <FormHelperText>Required</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={specInputSize}>\r\n                <FormControl required className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"spec-native-simple\">Specialization</InputLabel>\r\n                  <Select\r\n                    native\r\n                    value={data.spec}\r\n                    onChange={handleChange}\r\n                    inputProps={{\r\n                      name: 'spec',\r\n                      id: 'spec-native-simple',\r\n                    }}\r\n                  >\r\n                    <option aria-label=\"None\" value=\"\" />\r\n                    {Specs.map((item, index) => {\r\n                      return <option key={item}>{item}</option>\r\n                    })}\r\n                  </Select>\r\n                  <FormHelperText>Required</FormHelperText>\r\n                </FormControl>\r\n              </Grid>\r\n              {(window.innerWidth > 480 ? \r\n                <Grid item xs>\r\n                  <Paper className={classes.paper}></Paper>\r\n                </Grid>\r\n                : <div></div>\r\n              )}\r\n            </Grid>\r\n            <Grid container spacing={8}>\r\n              <Grid item xs></Grid>\r\n              <Grid item xs={3}>\r\n                <Typography id=\"discrete-slider-long\" gutterBottom>\r\n                  Long Trimester\r\n                </Typography>\r\n                <Slider\r\n                  value={longTriCHLimit}\r\n                  id=\"long-slider\"\r\n                  // getAriaValueText={valuetext}\r\n                  aria-labelledby=\"discrete-slider-custom\"\r\n                  step={1}\r\n                  min={12}\r\n                  max={20}\r\n                  valueLabelDisplay=\"auto\"\r\n                  marks={marksLong}\r\n                  onChange={(e, newValue) => {setLongTriCHLimit(newValue);}}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Typography id=\"discrete-slider-short\" gutterBottom>\r\n                  Short Trimester\r\n                </Typography>\r\n                <Slider\r\n                  value={shortTriCHLimit}\r\n                  id=\"short-slider\"\r\n                  // getAriaValueText={valuetext}\r\n                  aria-labelledby=\"discrete-slider-custom\"\r\n                  step={1}\r\n                  min={6}\r\n                  max={10}\r\n                  valueLabelDisplay=\"auto\"\r\n                  marks={marksShort}\r\n                  onChange={(e, newValue) => {setShortTriCHLimit(newValue);}}\r\n                />\r\n              </Grid>\r\n              <Grid item xs></Grid>\r\n            </Grid>\r\n            <Grid container spacing={1} >\r\n            {(window.innerWidth > 480 ? \r\n              <Grid item xs>\r\n                <Paper className={classes.paper}></Paper>\r\n              </Grid>\r\n              : <div></div>\r\n            )}\r\n              <Grid item xs={12}>\r\n                <TransferList\r\n                  rightCallback={setRightCallback}\r\n                />\r\n              </Grid>\r\n            {(window.innerWidth > 480 ? \r\n              <Grid item xs>\r\n                <Paper className={classes.paper}></Paper>\r\n              </Grid>\r\n              : <div></div>\r\n            )}\r\n            </Grid>\r\n            <div className={classes.btnContainer}>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                Next\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.container}>\r\n            <Grid container spacing={3} >\r\n              <Grid item xs>\r\n                <Paper className={classes.paper}></Paper>\r\n              </Grid>\r\n              <Grid item className={classes.pstable} xs={12}>\r\n                <PSTable\r\n                  intake={data.intake}\r\n                  spec={data.spec}\r\n                  trans={right}\r\n                  shortLimit={shortTriCHLimit}\r\n                  longLimit={longTriCHLimit}\r\n                />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Paper className={classes.paper}></Paper>\r\n              </Grid>\r\n            </Grid>\r\n            <div className={classes.btnContainer}>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={(e) => {tablesToExcel(e, ['ps-table-y1','ps-table-y2','ps-table-y3'], ['Year1','Year2','Year3'], 'ProgrammeStructure.xls', 'Excel')}}\r\n                className={classes.button}\r\n              >\r\n                Export to CSV\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = withStyles((theme) => ({\r\n  loginWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  inputAlert: {\r\n    boxShadow: \"4px 5px #e4e4e4\",\r\n    position: \"absolute\",\r\n    zIndex: 100,\r\n    inlineSize: \"fit-content\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    display: \"none\"\r\n  }\r\n}));\r\n\r\nasync function loginUser(credentials) {\r\n  return fetch('http://localhost:4000/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n    .then(data => data.json())\r\n }\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const handleSubmit = async e => {\r\n      e.preventDefault();\r\n      var { username, password } = this.state;\r\n      if(username === \"admin\" && password === \"admin123\") {\r\n        const token = await loginUser({\r\n          username,\r\n          password\r\n        });\r\n        this.props.parentCallback(token);\r\n      } else {\r\n        document.getElementById(\"error-alert\").style.display = \"flex\";\r\n      }\r\n    }\r\n\r\n    return(\r\n      <div className={classes.loginWrapper}>\r\n        <Alert id=\"error-alert\" severity=\"error\" className={classes.inputAlert}>Credentials entered are incorrect!</Alert>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Log in\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoFocus\r\n                onChange={e => {this.setState({username: e.target.value})}}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={e => {this.setState({password: e.target.value})}}\r\n              />\r\n              {/* <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              /> */}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Log In\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n}\r\n\r\nexport default useStyles(Login);","import React, { useEffect } from 'react';\r\n// import clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport axios from 'axios';\r\nconst API_PATH = process.env.REACT_APP_API_PATH;\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  btnSL: {\r\n    width: \"100%\",\r\n    marginTop: 30\r\n  },\r\n  listPaper:  {\r\n    width: \"60vw\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    ['@media (max-width:1023px)']: {\r\n      width: \"70vw\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    ['@media (max-width:733px)']: {\r\n      width: \"90vw\",\r\n    },\r\n    marginBottom: \"15px\",\r\n    height: \"70vh\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  gridContainer: {\r\n    width: \"60vw\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    ['@media (max-width:1023px)']: {\r\n      width: \"70vw\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    ['@media (max-width:733px)']: {\r\n      width: \"90vw\",\r\n    },\r\n  },\r\n  codeInput: {\r\n    // marginRight: \"20px\",\r\n  },\r\n  addBtnGrid: {\r\n    display: \"flex\",\r\n    justifyContent: \"right\",\r\n    alignItems: \"center\",\r\n  },\r\n  addBtn: {\r\n    float: \"right\"\r\n  },\r\n  multiSelect: {\r\n    margin: theme.spacing(1,1,1,0),\r\n    minWidth: \"100%\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  prereq: {\r\n    '&::-webkit-scrollbar': {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  inputFullWidth: {\r\n    width: \"100%\"\r\n  },\r\n  inputSelection: {\r\n    marginRight: \"0px\"\r\n  }\r\n}));\r\n\r\nexport default function EditSubjectList(props) {\r\n  const classes = useStyles();\r\n\r\n  const [subjects, setSubjects] = React.useState(new Map());\r\n  const [openAddPop, setOpenAddPop] = React.useState(false);\r\n  const [addPopMsg, setAddPopMsg] = React.useState('');\r\n  const [alertSev, setAlertSev] = React.useState('error');\r\n  const [newCode, setNewCode] = React.useState('');\r\n  const [newSubject, setNewSubject] = React.useState('');\r\n  const [newCH, setNewCH] = React.useState('');\r\n  const [newOffer, setNewOffer] = React.useState([]);\r\n  const [newPreReq, setNewPreReq] = React.useState([]);\r\n  // const [errorCode, setErrorCode] = React.useState(false);\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n  const [deletingItem, setDeletingItem] = React.useState(null);\r\n  const [removeMsg, setRemoveMsg] = React.useState('');\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     subjects: [],\r\n  //     openAddPop: false,\r\n  //     addPopMsg: '',\r\n  //     alertSev: 'error',\r\n  //     newCode: '',\r\n  //     newSubject: '',\r\n  //     newCH: '',\r\n  //     newOffer: [],\r\n  //     newPreReq: [],\r\n  //     errorCode: false,\r\n  //     openDialog: false,\r\n  //     deletingItem: null,\r\n  //     removeMsg: ''\r\n  //   }\r\n  // }\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 200;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4 + ITEM_PADDING_TOP,\r\n        // width: 400,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get( API_PATH + \"/subjectList.json\")\r\n      .then((response) => {\r\n        setSubjects(new Map(response.data));\r\n        // this.setState({\r\n        //   subjects: response.data.sort((a, b) => (a.code > b.code) ? 1 : ((b.code > a.code) ? -1 : 0))\r\n        // })\r\n      });\r\n  }, []);\r\n\r\n  // const onChange = (event) => {\r\n  //   const { name } = event.target;\r\n  //   this.setState({\r\n  //     [name]: (name === \"newCH\") ? Number(event.target.value) : event.target.value\r\n  //   });\r\n  // }\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenAddPop(false);\r\n    // this.setState({openAddPop: false});\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    var list = subjects;\r\n    list.delete(deletingItem);\r\n    // setSubjects(list);\r\n    // this.setState({\r\n    //   subjects: list\r\n    // });\r\n    axios.post(API_PATH + '/subjectList', {\r\n      subjects: list\r\n    }).then((res) => {\r\n      setAddPopMsg('Subject list updated successfully.');\r\n      setAlertSev('success');\r\n      setOpenAddPop(true);\r\n      // this.setState({\r\n      //   addPopMsg: 'Subject list updated successfully.',\r\n      //   alertSev: 'success',\r\n      //   openAddPop: true,\r\n      //   openList: false\r\n      // });\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    });\r\n\r\n    handleCloseDialog(e);\r\n  };\r\n\r\n  const handleAdd = (event) => {\r\n    event.preventDefault();\r\n    \r\n    var list = subjects;\r\n    // if(list.filter(e => e.code === newCode || e.name === newSubject).length > 0) {\r\n    if(list.has(newCode)) {\r\n      setAddPopMsg('Subject name or code has already existed.');\r\n      setAlertSev('error');\r\n      setOpenAddPop(true);\r\n      // this.setState({\r\n      //   addPopMsg: 'Subject name or code has already existed.', \r\n      //   alertSev: 'error',\r\n      //   openAddPop: true\r\n      // });\r\n    } else {\r\n      list.set(newCode.trim(), {\r\n        name: newSubject.trim(),\r\n        ch: newCH,\r\n        offer: newOffer,\r\n        prereq: newPreReq\r\n      });\r\n      setSubjects(list);\r\n      setNewCode('');\r\n      setNewSubject('');\r\n      setNewCH('');\r\n      setNewOffer([]);\r\n      setNewPreReq([]);\r\n      // this.setState({\r\n      //   subjects: list,\r\n      //   newCode: '',\r\n      //   newSubject: '',\r\n      //   newCH: '',\r\n      //   newPreReq: []\r\n      // });\r\n      axios.post(API_PATH + '/subjectList', {\r\n        subjects: list\r\n      }).then((res) => {\r\n        setAddPopMsg('Subject list updated successfully.');\r\n        setAlertSev('success');\r\n        setOpenAddPop(true);\r\n        // this.setState({\r\n        //   addPopMsg: 'Subject list updated successfully.',\r\n        //   alertSev: 'success',\r\n        //   openAddPop: true,\r\n        //   openList: false\r\n        // });\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOpenDialog = (event, key) => {\r\n    event.preventDefault();\r\n    setDeletingItem(key);\r\n    setRemoveMsg(\"Are you sure to remove \" + key + \" \" + subjects.get(key).name + \" permanently?\");\r\n    setOpenDialog(true);\r\n    // this.setState({\r\n    //   deletingItem: index,\r\n    //   removeMsg: \"Are you sure to remove \" + this.state.subjects[index].code + \" \" + this.state.subjects[index].name + \" permanently?\",\r\n    //   openDialog: true\r\n    // });\r\n  }\r\n\r\n  const handleCloseDialog = (event) => {\r\n    event.preventDefault();\r\n    setDeletingItem(null);\r\n    setOpenDialog(false);\r\n    // this.setState({\r\n    //   deletingItem: null,\r\n    //   openDialog: false\r\n    // });\r\n  }\r\n\r\n  // const handleChangePreReq = (event) => {\r\n  //   setNewPreReq(event.target.value);\r\n  //   // this.setState({newPreReq: event.target.value});\r\n  // };\r\n\r\n  // const handleChangeOffer = (event) => {\r\n  //   setNewOffer(event.target.value.sort());\r\n  //   // this.setState({newOffer: event.target.value});\r\n  // };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.listPaper} elevation={2}>\r\n        <List dense={true}>\r\n          {Array.from(subjects.entries()).map((entry) => {\r\n            const [key, value] = entry;\r\n            const labelId = `checkbox-list-label-${key}`;\r\n\r\n            return (\r\n              <ListItem >\r\n                <ListItemText id={labelId} style={{textAlign: \"left\", width: \"65%\", marginRight: \"10px\"}} primary={`${key} \\t-\\t ${value.name}`} />\r\n                <ListItemText style={{textAlign: \"right\", width: \"5%\", marginRight: \"5px\"}} primary={`${value.offer}`} />\r\n                <ListItemText style={{textAlign: \"right\", width: \"10%\"}} primary={<Typography className={classes.prereq} style={{overflow: \"scroll\"}}>{value.prereq.toString()}</Typography>} />\r\n                <ListItemText style={{textAlign: \"right\", marginRight: \"5px\"}} primary={`${value.ch} CH`} />\r\n                <IconButton onClick={(e) => {handleOpenDialog(e, key)}} style={{width: \"min-content\"}} edge=\"end\" aria-label=\"delete\">\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      </Paper>\r\n      <Grid container spacing={1} className={classes.gridContainer}>\r\n        <Grid item xs={2}>\r\n          <TextField\r\n            className={classes.codeInput}\r\n            margin=\"dense\"\r\n            id=\"code\"\r\n            name=\"newCode\"\r\n            placeholder=\"Code\"\r\n            inputProps={{ maxLength: 8 }}\r\n            // error= {errorCode}\r\n            onChange={(e) => {setNewCode(e.target.value)}}\r\n            variant=\"outlined\"\r\n            // helperText={ errorCode ? \"Invalid format: ABC1234\" : \"\"}\r\n            value={newCode}\r\n          />            \r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <TextField\r\n            required\r\n            margin=\"dense\"\r\n            className={classes.inputFullWidth}\r\n            name=\"newSubject\"\r\n            placeholder=\"Subject Name\"\r\n            variant=\"outlined\"\r\n            onChange={(e) => {setNewSubject(e.target.value)}}\r\n            value={newSubject}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <FormControl className={classes.inputFullWidth}>\r\n            <TextField\r\n              required\r\n              margin=\"dense\"\r\n              id=\"ch\"\r\n              name=\"newCH\"\r\n              type=\"number\"\r\n              placeholder=\"Credit Hour\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => {setNewCH(Number(e.target.value))}}\r\n              value={newCH}\r\n              inputProps={{ 'min': 1, 'max': 8 }}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <FormControl className={classes.multiSelect}>\r\n            <Select\r\n              multiple\r\n              displayEmpty\r\n              value={newOffer}\r\n              onChange={(e) => {setNewOffer(e.target.value.sort())}}\r\n              input={<OutlinedInput margin=\"dense\"/>}\r\n              renderValue={(selected) => {\r\n                if (selected.length === 0) {\r\n                  return <div style={{font: \"inherit\", color: \"#aaa\"}}>Offers In</div>;\r\n                }\r\n\r\n                return selected.join(', ');\r\n              }}\r\n              MenuProps={MenuProps}\r\n              inputProps={{ 'aria-label': 'Without label'}}\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                <div style={{font: \"inherit\", color: \"#aaa\"}}>Offers In</div>\r\n              </MenuItem>\r\n              {[1,2,3].map((item) => (\r\n                <MenuItem key={item} value={item}>\r\n                  {item}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <FormControl className={classes.multiSelect}>\r\n            <Select\r\n              multiple\r\n              displayEmpty\r\n              value={newPreReq}\r\n              onChange={(e) => {setNewPreReq(e.target.value)}}\r\n              input={<OutlinedInput margin=\"dense\"/>}\r\n              renderValue={(selected) => {\r\n                if (selected.length === 0) {\r\n                  return <div style={{font: \"inherit\", color: \"#aaa\"}}>Prerequisites</div>;\r\n                }\r\n\r\n                return selected.join(', ');\r\n              }}\r\n              MenuProps={MenuProps}\r\n              inputProps={{ 'aria-label': 'Without label'}}\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                <div style={{font: \"inherit\", color: \"#aaa\"}}>Prerequisites</div>\r\n              </MenuItem>\r\n              {Array.from(subjects.entries()).map((entry) => {\r\n                const [key, value] = entry;\r\n                return (\r\n                <MenuItem key={key} value={key}>\r\n                  {key + ' - ' + value.name}\r\n                </MenuItem>\r\n              );})}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid className={classes.addBtnGrid} item xs={1}>\r\n          <Button\r\n            className={classes.addBtn}\r\n            id=\"add-subject-button\"\r\n            variant=\"contained\"\r\n            onClick={handleAdd} \r\n            color=\"primary\"\r\n            disabled={\r\n              (newCode && newSubject \r\n                && newCH && (newOffer.length != 0)\r\n                // && this.state.newCode.match(/[A-Z]{3}[0-9]{4}/)\r\n                ) \r\n                ? false : true\r\n            }\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Snackbar open={openAddPop} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity={alertSev}>\r\n          {addPopMsg}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Remove subject from list?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {removeMsg}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React , { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ButtonGroup } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport axios from \"axios\";\r\nconst API_PATH = process.env.REACT_APP_API_PATH;\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectionCont: {\r\n    justifyContent: \"center\"\r\n  },\r\n  table: {\r\n    width: \"70vw\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    overflowX: \"visible\",\r\n  },\r\n  tableBody: {\r\n    overflowY: \"scroll\",\r\n  },\r\n  // btnGrpCont: {\r\n  //   textAlign: \"center\",\r\n  //   marginBottom: \"20px\",\r\n  // },\r\n  typoh1: {\r\n    textAlign: \"center\",\r\n  },\r\n  addBtn: {\r\n    float: \"right\",\r\n  },\r\n  saveBtn: {\r\n    float: \"right\",\r\n    position: \"fixed\",\r\n    bottom: \"3vh\",\r\n    right: \"3vw\",\r\n  },\r\n  formControl: {\r\n    // margin: theme.spacing(1),\r\n    minWidth: \"100%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(0.5),\r\n  },\r\n  speedDial: {\r\n    position: \"absolute\"\r\n  },\r\n}));\r\n\r\nexport default function EditSPS(props) {\r\n  const classes = useStyles();\r\n\r\n  const [years, setYears] = React.useState([]);\r\n  const [subjectList, setSubjectList] = React.useState(new Map());\r\n  const [selectionDisable, setSelectionDisable] = React.useState(false);        // disable initial selection of intake and spec\r\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);                // snackbar visibility\r\n  const [snackbarMsg, setSnackbarMsg] = React.useState(\"\");                     // snackbar message\r\n  const [snackbarSev, setSnackbarSev] = React.useState(\"error\");                // snackbar severity\r\n  const [openDeletePS, setOpenDeletePS] = React.useState(false);                // \r\n  const [openDeletePSDialog, setOpenDeletePSDialog] = React.useState(false);    // open confirmation dialog\r\n  const [openSpeedDial, setOpenSpeedDial] = React.useState(false);              // open speed dial all actions\r\n  const [toDeleteSubject, setToDeleteSubject] = React.useState(-99);            // index of subject to delete\r\n  const [selectedIntake, setSelectedIntake] = React.useState(\"\");               // initial selection intake\r\n  const [selectedSpec, setSelectedSpec] = React.useState(\"\");                   // initial selection specialization\r\n  const [standardPS, setStandardPS] = React.useState([]);                       // standard programme structure from server JSON file\r\n  const [editingPS, setEditingPS] = React.useState(new Map());                         // current editting programme structure (old)\r\n  const [standardIndex, setStandardIndex] = React.useState(\"\");\r\n  const [openAddPS, setOpenAddPS] = React.useState(false);\r\n  const [openCopyPS, setOpenCopyPS] = React.useState(false); \r\n  const [newIntakeMonth, setNewIntakeMonth] = React.useState(\"\");     // month of new intake to be created\r\n  const [newIntakeYear, setNewIntakeYear] = React.useState(\"\");       // year of new intake to be created\r\n  const [copyFromIntake, setCopyFromIntake] = React.useState(\"\");     // intake to be copy from\r\n  const [toDeleteIntake, setToDeleteIntake] = React.useState(\"\");     // programme structure of intake to be deleted\r\n  const [toDeleteSpec, setToDeleteSpec] = React.useState(\"\");         // programme structure of specification to be deleted\r\n  const [inputs, setInputs] = React.useState([\r\n    {\r\n      type: \"\",\r\n      code: \"\",\r\n      name: \"\",\r\n      ch: \"\",\r\n      offer: [],\r\n      defaultTri: \"\",\r\n    },\r\n    {\r\n      type: \"\",\r\n      code: \"\",\r\n      name: \"\",\r\n      ch: \"\",\r\n      offer: [],\r\n      defaultTri: \"\",\r\n    },\r\n    {\r\n      type: \"\",\r\n      code: \"\",\r\n      name: \"\",\r\n      ch: \"\",\r\n      offer: [],\r\n      defaultTri: \"\",\r\n    }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    axios.get(API_PATH + \"/subjectList.json\").then((response) => {\r\n      setSubjectList(new Map(response.data));\r\n      console.log(new Map(response.data));\r\n    });\r\n    \r\n    axios.get(API_PATH + \"/standardPS.json\").then((response) => {\r\n      console.log(response.data);\r\n      setStandardPS(response.data);\r\n    });\r\n\r\n    let thisYear = (new Date()).getFullYear();\r\n    let years = [];\r\n    for(let i = thisYear-1; years.length <= 5; i++) {\r\n      years.push(i);\r\n    }\r\n    setYears(years);\r\n  }, []);\r\n\r\n  // Speed dial tooltips\r\n  const actions = [\r\n    { icon: <AddIcon />, name: 'Add', action: (e) => handleActionAddPS(e), disabled: selectionDisable },\r\n    { icon: <FileCopyIcon />, name: 'Copy', action: (e) => handleActionCopyPS(e), disabled: selectionDisable },\r\n    { icon: (!selectionDisable) ? <EditIcon /> : <CloseIcon />, name: (!selectionDisable) ? 'Edit' : 'Close', \r\n            action: (e) => (!selectionDisable) ? handleActionEditPS(e) : handleActionCloseEditPS(e),\r\n            disabled: (selectedIntake && selectedSpec) ? false : true \r\n    },\r\n    { icon: <DeleteIcon />, name: 'Delete', action: (e) => handleActionDeletePS(e), disabled: selectionDisable },\r\n  ];\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbarMsg(\"\");\r\n    setSnackbarSev(\"\");\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  // onchange input new subjects \r\n  const onChange = (e, inputIndex) => {\r\n    let { name, value } = e.target;\r\n    \r\n    console.log(value);\r\n    if(name === \"subject\") {\r\n      let updateInputs = [...inputs];\r\n      const [key, val] = value; \r\n      updateInputs[inputIndex] = {\r\n        ...updateInputs[inputIndex],\r\n        code: key,\r\n        name: val.name,\r\n        ch: Number(val.ch),\r\n        offer: val.offer\r\n      };\r\n      \r\n      setInputs(updateInputs);\r\n    } else {\r\n      let updateInputs = [...inputs];\r\n      updateInputs[inputIndex] = {\r\n        ...updateInputs[inputIndex],\r\n        [name]: (name === \"defaultTri\") ? Number(value) : value\r\n      };\r\n      \r\n      setInputs(updateInputs);\r\n    }\r\n    console.log(inputs);\r\n  };\r\n\r\n  // Confirmation dialog for delete subject from programme structure\r\n  const handleOpenDialog = (event, subjectCode) => {\r\n    event.preventDefault();\r\n    setToDeleteSubject(subjectCode);\r\n    setOpenDeletePSDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = (event) => {\r\n    event.preventDefault();\r\n    setToDeleteSubject(null);\r\n    setOpenDeletePSDialog(false);\r\n  };\r\n\r\n  // handle add subject to programme structure\r\n  const handleAdd = (e, year) => {\r\n    e.preventDefault();\r\n    if (\r\n      !inputs[year].name ||\r\n      !inputs[year].defaultTri\r\n    ) {\r\n      setSnackbarMsg(\"Subject and default trimesters cannot be empty.\");\r\n      setSnackbarSev(\"error\");\r\n      setOpenSnackbar(true);\r\n    } else {\r\n      let updatePS = new Map(editingPS);\r\n      console.log(updatePS);\r\n      updatePS.set(inputs[year].code, {\r\n        name: inputs[year].name,\r\n        ch: Number(inputs[year].ch),\r\n        type: inputs[year].type,\r\n        defaultTri: Number(inputs[year].defaultTri),\r\n        defaultYear: year + 1,\r\n      });\r\n\r\n      console.log(year);\r\n      console.log(inputs);\r\n      let updateInputs = [...inputs];\r\n      updateInputs[year] = {\r\n        ...updateInputs[year],\r\n        type: \"\",\r\n        code: \"\",\r\n        name: \"\",\r\n        ch: \"\",\r\n        defaultTri: \"\"\r\n      }\r\n      setInputs(updateInputs);\r\n      setEditingPS(new Map(updatePS));\r\n    }\r\n  };\r\n\r\n  // handle delete subject from programme structure\r\n  const handleDelete = (e) => {\r\n    let mapCopy = new Map(editingPS);\r\n    mapCopy.delete(toDeleteSubject);\r\n    setEditingPS(mapCopy);\r\n    setSnackbarMsg(\"Subject removed.\");\r\n    setSnackbarSev(\"success\");\r\n    setOpenSnackbar(true);\r\n    handleCloseDialog(e);\r\n  };\r\n\r\n  // handle save modified programme structure\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n    let copyStandard = JSON.parse(JSON.stringify(standardPS));\r\n    console.log(copyStandard);\r\n    for (let i = 0; i < standardPS.length; i++) {\r\n      const element = standardPS[i];\r\n      if(selectedIntake === element.intake) {\r\n        copyStandard[i].PS[selectedSpec] = [...editingPS];\r\n        break;\r\n      }\r\n    }\r\n    setStandardPS(JSON.parse(JSON.stringify(copyStandard)));\r\n    setSelectionDisable(false);\r\n    let emptyInputs = [\r\n      {\r\n        type: \"\",\r\n        code: \"\",\r\n        name: \"\",\r\n        ch: \"\",\r\n        offer: [],\r\n        defaultTri: \"\",\r\n      },\r\n      {\r\n        type: \"\",\r\n        code: \"\",\r\n        name: \"\",\r\n        ch: \"\",\r\n        offer: [],\r\n        defaultTri: \"\",\r\n      },\r\n      {\r\n        type: \"\",\r\n        code: \"\",\r\n        name: \"\",\r\n        ch: \"\",\r\n        offer: [],\r\n        defaultTri: \"\",\r\n      },\r\n    ];\r\n    axios\r\n      .post(API_PATH + \"/standardPS\", {\r\n        newPS: copyStandard,\r\n      })\r\n      .then((res) => {\r\n        setSnackbarMsg(\"Updated Successfully.\");\r\n        setSnackbarSev(\"success\");\r\n        setOpenSnackbar(true);\r\n        setInputs(emptyInputs);\r\n        // refresh\r\n        // window.location.reload(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    document.getElementById(\"psTable-container\").style.display = \"none\";\r\n  };\r\n  \r\n  // Speed Dial\r\n  const handleCloseSpeedDial = () => {\r\n    setOpenSpeedDial(false);\r\n  };\r\n  \r\n  const handleOpenSpeedDial = () => {\r\n    setOpenSpeedDial(true);\r\n  };\r\n\r\n  // Action: Delete Selected Programme Structure\r\n  const handleActionDeletePS = (e) => {\r\n    e.preventDefault();\r\n    setOpenDeletePS(true);\r\n  };\r\n\r\n  const handleCloseDeletePSDialog = (event) => {\r\n    event.preventDefault();\r\n    setToDeleteSpec(\"\");\r\n    setToDeleteIntake(\"\");\r\n    setOpenDeletePS(false);\r\n  };\r\n\r\n  const confirmDeletePS = () => {\r\n    // let toDeletePS = selectedIntake;\r\n    setSelectedSpec(\"\");\r\n    setSelectedIntake(\"\");\r\n    let temp = JSON.parse(JSON.stringify(standardPS));\r\n    if(!toDeleteSpec) {\r\n      for (let i = 0; i < standardPS.length; i++) {\r\n        const ps = standardPS[i];\r\n        if(ps.intake === toDeleteIntake) {\r\n          temp.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < standardPS.length; i++) {\r\n        const ps = standardPS[i];\r\n        if(ps.intake === toDeleteIntake) {\r\n          temp[i].PS[toDeleteSpec] = [];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    setStandardPS(JSON.parse(JSON.stringify(temp)));\r\n    axios\r\n      .post(API_PATH + \"/standardPS\", {\r\n        newPS: temp\r\n      })\r\n      .then((res) => {\r\n        setSnackbarMsg(toDeleteIntake + ((toDeleteSpec) ? ( \" \" + toDeleteSpec) : \"\") + \" has been deleted.\");\r\n        setSnackbarSev(\"success\");\r\n        setOpenSnackbar(true);\r\n        setToDeleteSpec(\"\");\r\n        setToDeleteIntake(\"\");\r\n        // refresh\r\n        // window.location.reload(false);~\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setOpenDeletePS(false);\r\n  };\r\n\r\n  // Action: Add New Programme Structure\r\n  const handleActionAddPS = (e) => {\r\n    e.preventDefault();\r\n    setOpenAddPS(true);\r\n  };\r\n\r\n  const handleCloseAddPSDialog = (event) => {\r\n    event.preventDefault();\r\n    setNewIntakeMonth(\"\");\r\n    setNewIntakeYear(\"\");\r\n    setOpenAddPS(false);\r\n  };\r\n\r\n  const confirmAddPS = (e) => {\r\n    e.preventDefault();\r\n    let intakes = []\r\n    standardPS.map((item, index) => {\r\n      intakes.push(item.intake);\r\n    })\r\n    if(intakes.includes(newIntakeMonth + \" \" + newIntakeYear)) {\r\n      setSnackbarMsg(newIntakeMonth + \" \" + newIntakeYear + \" existed.\");\r\n      setSnackbarSev(\"error\");\r\n      setOpenSnackbar(true);\r\n      setNewIntakeMonth(\"\");\r\n      setNewIntakeYear(\"\");\r\n      setOpenAddPS(false);\r\n    } else {\r\n      let newIntakePS = {\r\n        \"intake\": newIntakeMonth + \" \" + newIntakeYear,\r\n        \"PS\": {\r\n          \"Software Engineering\": [],\r\n          \"Data Science\": [],\r\n          \"Game Development\": [],\r\n          \"Cybersecurity\": [],\r\n        }\r\n      };\r\n      let currentPS = standardPS;\r\n      currentPS.push(newIntakePS);\r\n      setStandardPS(currentPS);\r\n      // this.setState({standardPS: currentPS});\r\n      axios\r\n        .post(API_PATH + \"/standardPS\", {\r\n          newPS: currentPS\r\n        })\r\n        .then((res) => {\r\n          setSnackbarMsg(\"New Intake Added.\");\r\n          setSnackbarSev(\"success\");\r\n          setOpenSnackbar(true);\r\n          setNewIntakeMonth(\"\");\r\n          setNewIntakeYear(\"\");\r\n          setOpenAddPS(false);\r\n          // refresh\r\n          // window.location.reload(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  // Action: handle edit programme structure\r\n  const handleActionEditPS = (e) => {\r\n    e.preventDefault();\r\n    let index = -1;\r\n    for (let i = 0; i < standardPS.length; i++) {\r\n      const element = standardPS[i];\r\n      if(element.intake === selectedIntake) {\r\n        index = i;\r\n        console.log(\"found \" + i);\r\n        break;\r\n      }\r\n    }\r\n    console.log(standardPS[index]);\r\n    console.log(editingPS);\r\n    console.log(new Map(standardPS[index].PS[selectedSpec]));\r\n    // let toEditPS = standardPS[index].PS[selectedSpec];\r\n    // console.log(toEditPS);\r\n    setEditingPS(new Map(standardPS[index].PS[selectedSpec]));\r\n    setStandardIndex(Number(index));\r\n    setSelectionDisable(true);\r\n    document.getElementById(\"psTable-container\").style.display = \"block\";\r\n  };\r\n\r\n  // Action: close edit programme structure\r\n  const handleActionCloseEditPS = (e) => {\r\n    e.preventDefault();\r\n    let emptyInputs = [\r\n      {\r\n        type: \"\",\r\n        code: \"\",\r\n        name: \"\",\r\n        ch: \"\",\r\n        offer: [],\r\n        defaultTri: \"\",\r\n      },\r\n      {\r\n        type: \"\",\r\n        code: \"\",\r\n        name: \"\",\r\n        ch: \"\",\r\n        offer: [],\r\n        defaultTri: \"\",\r\n      },\r\n      {\r\n        type: \"\",\r\n        code: \"\",\r\n        name: \"\",\r\n        ch: \"\",\r\n        offer: [],\r\n        defaultTri: \"\",\r\n      },\r\n    ];\r\n    setEditingPS(new Map());\r\n    setInputs(emptyInputs);\r\n    setSelectionDisable(false);\r\n    document.getElementById(\"psTable-container\").style.display = \"none\";\r\n  }\r\n\r\n  // Action: handle copy programme structure\r\n  const handleActionCopyPS = (event) => {\r\n    event.preventDefault();\r\n    setOpenCopyPS(true);\r\n  };\r\n\r\n  const handleCloseCopyPSDialog = (event) => {\r\n    event.preventDefault();\r\n    setNewIntakeMonth(\"\");\r\n    setNewIntakeYear(\"\");\r\n    setCopyFromIntake(\"\");\r\n    setOpenCopyPS(false);\r\n  };\r\n\r\n  const confirmCopyPS = () => {\r\n    let copyOfSelectedPS;\r\n    let intakes = []\r\n    standardPS.map((item, index) => {\r\n      intakes.push(item.intake);\r\n    })\r\n    if(intakes.includes(newIntakeMonth + \" \" + newIntakeYear)) {\r\n      setSnackbarMsg(newIntakeMonth + \" \" + newIntakeYear + \" existed.\");\r\n      setSnackbarSev(\"error\");\r\n      setOpenSnackbar(true);\r\n      setNewIntakeMonth(\"\");\r\n      setNewIntakeYear(\"\");\r\n      setOpenAddPS(false);\r\n    } else {\r\n      for (let i = 0; i < standardPS.length; i++) {\r\n        const element = standardPS[i];\r\n        if(element.intake === copyFromIntake) {\r\n          copyOfSelectedPS = {\r\n            \"intake\": newIntakeMonth + \" \" + newIntakeYear,\r\n            \"PS\": element.PS\r\n          };\r\n          let copyStandard = JSON.parse(JSON.stringify(standardPS));\r\n          // console.log(copyStandard);\r\n          copyStandard.push(copyOfSelectedPS);\r\n          // console.log(copyStandard);\r\n          setStandardPS(copyStandard);\r\n          axios\r\n            .post(API_PATH + \"/standardPS\", {\r\n              newPS: copyStandard\r\n            })\r\n            .then((res) => {\r\n              setSnackbarMsg(\"Intake \" + copyFromIntake + \" Copied to \" + newIntakeMonth + \" \" + newIntakeYear + \".\");\r\n              setSnackbarSev(\"success\");\r\n              setOpenSnackbar(true);\r\n              setNewIntakeMonth(\"\");\r\n              setNewIntakeYear(\"\");\r\n              setCopyFromIntake(\"\");\r\n              setOpenAddPS(false);\r\n              // refresh\r\n              // window.location.reload(false);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n            setOpenCopyPS(false);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  function compareMaps(map1, map2) {\r\n    var testVal;\r\n    if (map1.size !== map2.size) {\r\n        return false;\r\n    }\r\n    for (var [key, val] of map1) {\r\n        testVal = map2.get(key);\r\n        // in cases of an undefined value, make sure the key\r\n        // actually exists on the object so there are no false positives\r\n        if (JSON.stringify(testVal) !== JSON.stringify(val) || (testVal === undefined && !map2.has(key))) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3} className={classes.selectionCont}>\r\n        <Grid item>\r\n          <FormControl id=\"selection-intake\" disabled={selectionDisable}>\r\n            <Select\r\n              style={{width: \"200px\"}}\r\n              value={selectedIntake}\r\n              onChange={(e) => {setSelectedIntake(e.target.value)}}\r\n              displayEmpty\r\n              className={classes.selectEmpty}\r\n              renderValue={(selected) => {\r\n                if (!selected) {\r\n                  return <div style={{font: \"inherit\", color: \"#aaa\"}}>Intake</div>;\r\n                }\r\n    \r\n                return selected;\r\n              }}\r\n              inputProps={{ 'aria-label': 'Without label' }}\r\n            >\r\n              {standardPS.map((item, index) => {\r\n                return (\r\n                  <MenuItem value={item.intake}>{item.intake}</MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl disabled={selectionDisable}>\r\n            <Select\r\n              id=\"selection-spec\"\r\n              style={{width: \"200px\"}}\r\n              value={selectedSpec}\r\n              onChange={(e) => {setSelectedSpec(e.target.value)}}\r\n              displayEmpty\r\n              className={classes.selectEmpty}\r\n              renderValue={(selected) => {\r\n                if (!selected) {\r\n                  return <div style={{font: \"inherit\", color: \"#aaa\"}}>Specialization</div>;\r\n                }\r\n    \r\n                return selected;\r\n              }}\r\n              inputProps={{ 'aria-label': 'Without label' }}\r\n            >\r\n              <MenuItem value=\"Software Engineering\">Software Engineering</MenuItem>\r\n              <MenuItem value=\"Data Science\">Data Science</MenuItem>\r\n              <MenuItem value=\"Game Development\">Game Development</MenuItem>\r\n              <MenuItem value=\"Cybersecurity\">Cybersecurity</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid>\r\n          <SpeedDial\r\n            ariaLabel=\"SpeedDial example\"\r\n            className={classes.speedDial}\r\n            hidden={false}\r\n            icon={<SpeedDialIcon />}\r\n            onClose={handleCloseSpeedDial}\r\n            onOpen={handleOpenSpeedDial}\r\n            open={openSpeedDial}\r\n            direction=\"down\"\r\n          >\r\n            {actions.map((action) => (\r\n              <SpeedDialAction\r\n                key={action.name}\r\n                icon={action.icon}\r\n                disabled={action.disabled}\r\n                tooltipTitle={action.name}\r\n                onClick={action.action}\r\n              />\r\n            ))}\r\n          </SpeedDial>\r\n        </Grid>\r\n      </Grid>\r\n      <Paper\r\n        id=\"psTable-container\"\r\n        style={{ display: \"none\" }}\r\n      >\r\n        <TableContainer className={classes.table}>\r\n          {[0,1,2].map((yearIndex) => {\r\n            return (\r\n              <>\r\n              <h1 className={classes.typoh1}>Year {yearIndex + 1}</h1>\r\n              <Table\r\n                className={classes.table}\r\n                size=\"small\"\r\n                stickyHeader\r\n                aria-label=\"caption table\"\r\n              >\r\n                <caption>\r\n                  <Grid container spacing={3} className={classes.gridContainer}>\r\n                    <Grid item xs>\r\n                      <FormControl className={classes.formControl}>\r\n                        <Select\r\n                          value={inputs[yearIndex].type}\r\n                          onChange={(e) => onChange(e, yearIndex)}\r\n                          name=\"type\"\r\n                          displayEmpty\r\n                          className={classes.selectEmpty}\r\n                          renderValue={(selected) => {\r\n                            if (!selected) {\r\n                              return <div style={{font: \"inherit\", color: \"#aaa\"}}>Category</div>;\r\n                            }\r\n                \r\n                            return selected;\r\n                          }}\r\n                          inputProps={{ 'aria-label': 'Without label' }}\r\n                        >\r\n                          <MenuItem value=\"core\">Core</MenuItem>\r\n                          <MenuItem value=\"elective\">Elective</MenuItem>\r\n                          <MenuItem value=\"mpu\">MPU</MenuItem>\r\n                          <MenuItem value=\"spec core\">Specialization Core</MenuItem>\r\n                          <MenuItem value=\"spec elec\">Specialization Elective</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <FormControl className={classes.formControl}>\r\n                        <Select\r\n                          value={\r\n                            (inputs[yearIndex].code) \r\n                              ? inputs[yearIndex].code + \" - \" \r\n                                + inputs[yearIndex].name + \"  [\" \r\n                                + inputs[yearIndex].ch + \"]\" \r\n                              : \"\"}\r\n                          onChange={(e) => onChange(e, yearIndex)}\r\n                          name=\"subject\"\r\n                          displayEmpty\r\n                          className={classes.selectEmpty}\r\n                          renderValue={(selected) => {\r\n                            if (!selected) {\r\n                              return <div style={{font: \"inherit\", color: \"#aaa\"}}>Subject</div>;\r\n                            }\r\n                \r\n                            return selected;\r\n                          }}\r\n                          inputProps={{ 'aria-label': 'Without label' }}\r\n                        >\r\n                          {Array.from(subjectList.entries()).map((entry) => {\r\n                            const [key, value] = entry;\r\n                            return (\r\n                              <MenuItem key={key} value={entry}>{key + \" - \" + value.name + \"  [\" + value.ch + \"]\"}</MenuItem>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <FormControl className={classes.formControl}>\r\n                        <Select\r\n                          value={inputs[yearIndex].defaultTri}\r\n                          onChange={(e) => onChange(e, yearIndex)}\r\n                          name=\"defaultTri\"\r\n                          displayEmpty\r\n                          className={classes.selectEmpty}\r\n                          renderValue={(selected) => {\r\n                            if (!selected) {\r\n                              return <div style={{font: \"inherit\", color: \"#aaa\"}}>Default Trimester</div>;\r\n                            }\r\n                \r\n                            return selected;\r\n                          }}\r\n                          inputProps={{ 'aria-label': 'Without label' }}\r\n                        >\r\n                          {(inputs[yearIndex].offer)\r\n                            ? inputs[yearIndex].offer.map((item, index) => {\r\n                              return (\r\n                                <MenuItem value={item}>{item}</MenuItem>\r\n                              );\r\n                            }) \r\n                            : <></>}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Button\r\n                        className={classes.addBtn}\r\n                        id=\"add-subject-button\"\r\n                        variant=\"contained\"\r\n                        onClick={(e) => {\r\n                          handleAdd(e, yearIndex);\r\n                        }}\r\n                        color=\"primary\"\r\n                        // disabled={\r\n                        //   (newCode && newSubject &&\r\n                        //     newCode.match(/[A-Z]{3}[0-9]{4}/))\r\n                        //     ? false : true\r\n                        // }\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </caption>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell width=\"10%\" align=\"center\">\r\n                      Category\r\n                    </TableCell>\r\n                    <TableCell width=\"15%\" align=\"center\">\r\n                      Subject Code\r\n                    </TableCell>\r\n                    <TableCell width=\"40%\" align=\"center\">\r\n                      Subject Name\r\n                    </TableCell>\r\n                    <TableCell width=\"10%\" align=\"center\">\r\n                      CH\r\n                    </TableCell>\r\n                    <TableCell width=\"15%\" align=\"center\">\r\n                      Default Trimester\r\n                    </TableCell>\r\n                    <TableCell width=\"10%\" align=\"center\">\r\n                      Action\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody className={classes.tableBody}>\r\n                  {Array.from(editingPS.entries()).map((entry) => {\r\n                    const [key, value] = entry;\r\n\r\n                    if (value.defaultYear === yearIndex + 1) {\r\n                      return (\r\n                        <TableRow key={key}>\r\n                          <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                            {value.type}\r\n                          </TableCell>\r\n                          <TableCell align=\"center\">{key}</TableCell>\r\n                          <TableCell>{value.name}</TableCell>\r\n                          <TableCell align=\"center\">{value.ch}</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            {value.defaultTri}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <IconButton\r\n                              onClick={(e) => handleOpenDialog(e, key)}\r\n                            >\r\n                              <DeleteIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    } else {\r\n                      return <></>;\r\n                    }\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n              </>\r\n            );\r\n          })}\r\n          \r\n        </TableContainer>\r\n        <Tooltip title=\"Save Changes\" aria-label=\"save\">\r\n          <Fab\r\n            className={classes.saveBtn}\r\n            color=\"primary\"\r\n            aria-label=\"save\"\r\n            disabled={((standardIndex) && standardPS[standardIndex])\r\n              ? compareMaps(editingPS, new Map(standardPS[standardIndex].PS[selectedSpec]))\r\n               : true}\r\n            onClick={handleSave}\r\n          >\r\n            <SaveIcon />\r\n          </Fab>\r\n        </Tooltip>\r\n      </Paper>\r\n\r\n      {/* Delete Subject From Programme Structure Confirmation Dialog */}\r\n      <Dialog\r\n        open={openDeletePSDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Remove subject?\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure to remove the subject?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Delete Programme Structure Confirmation Dialog */}\r\n      <Dialog\r\n        open={openDeletePS}\r\n        onClose={handleCloseDeletePSDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth={\"xs\"}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Delete Programme Structure\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Select the intake and specialization to be deleted. Specialization is optional.\r\n          </DialogContentText>\r\n          <Select\r\n            style={{width: \"40%\", marginRight: \"5%\"}}\r\n            value={toDeleteIntake}\r\n            onChange={(e) => {setToDeleteIntake(e.target.value)}}\r\n            displayEmpty\r\n            className={classes.selectEmpty}\r\n            renderValue={(selected) => {\r\n              if (!selected) {\r\n                return <div style={{font: \"inherit\", color: \"#aaa\"}}>Intake</div>;\r\n              }\r\n  \r\n              return selected;\r\n            }}\r\n            inputProps={{ 'aria-label': 'Without label' }}\r\n          >\r\n            {standardPS.map((item, index) => {\r\n              return (\r\n                <MenuItem value={item.intake}>{item.intake}</MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n          <Select\r\n              id=\"delete-spec\"\r\n              style={{width: \"55%\"}}\r\n              value={toDeleteSpec}\r\n              onChange={(e) => {setToDeleteSpec(e.target.value)}}\r\n              displayEmpty\r\n              className={classes.selectEmpty}\r\n              renderValue={(selected) => {\r\n                if (!selected) {\r\n                  return <div style={{font: \"inherit\", color: \"#aaa\"}}>Specialization</div>;\r\n                }\r\n    \r\n                return selected;\r\n              }}\r\n              inputProps={{ 'aria-label': 'Without label' }}\r\n            >\r\n              <MenuItem value=\"\" style={{color: \"#aaa\"}}><em>None</em></MenuItem>\r\n              <MenuItem value=\"Software Engineering\">Software Engineering</MenuItem>\r\n              <MenuItem value=\"Data Science\">Data Science</MenuItem>\r\n              <MenuItem value=\"Game Development\">Game Development</MenuItem>\r\n              <MenuItem value=\"Cybersecurity\">Cybersecurity</MenuItem>\r\n            </Select>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDeletePSDialog} color=\"primary\" autoFocus>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={confirmDeletePS} color=\"primary\" disabled={(toDeleteIntake) ? false : true}>\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Add Programme Structure Details */}\r\n      <Dialog open={openAddPS} onClose={handleCloseAddPSDialog} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Add New Programme Structure</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Select intake month and year\r\n          </DialogContentText>\r\n          <Select\r\n            style={{width: \"190px\", marginRight: \"20px\"}}\r\n            value={newIntakeMonth}\r\n            onChange={(e) => {setNewIntakeMonth(e.target.value)}}\r\n            displayEmpty\r\n            className={classes.selectEmpty}\r\n            renderValue={(selected) => {\r\n              if (!selected) {\r\n                return <div style={{font: \"inherit\", color: \"#aaa\"}}>Month</div>;\r\n              }\r\n  \r\n              return selected;\r\n            }}\r\n            inputProps={{ 'aria-label': 'Without label' }}\r\n          >\r\n            <MenuItem value=\"January\">January</MenuItem>\r\n            <MenuItem value=\"February\">February</MenuItem>\r\n            <MenuItem value=\"March\">March</MenuItem>\r\n            <MenuItem value=\"April\">April</MenuItem>\r\n            <MenuItem value=\"May\">May</MenuItem>\r\n            <MenuItem value=\"June\">June</MenuItem>\r\n            <MenuItem value=\"July\">July</MenuItem>\r\n            <MenuItem value=\"August\">August</MenuItem>\r\n            <MenuItem value=\"September\">September</MenuItem>\r\n            <MenuItem value=\"October\">October</MenuItem>\r\n            <MenuItem value=\"November\">November</MenuItem>\r\n            <MenuItem value=\"December\">December</MenuItem>\r\n          </Select>\r\n          <Select\r\n            style={{width: \"130px\"}}\r\n            value={newIntakeYear}\r\n            onChange={(e) => {setNewIntakeYear(e.target.value)}}\r\n            displayEmpty\r\n            className={classes.selectEmpty}\r\n            renderValue={(selected) => {\r\n              if (!selected) {\r\n                return <div style={{font: \"inherit\", color: \"#aaa\"}}>Year</div>;\r\n              }\r\n  \r\n              return selected;\r\n            }}\r\n            inputProps={{ 'aria-label': 'Without label' }}\r\n          >\r\n            {years.map((item, index) => {\r\n              return (\r\n                <MenuItem value={item}>{item}</MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseAddPSDialog} color=\"primary\" autoFocus>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={confirmAddPS} disabled={(newIntakeMonth && newIntakeYear) ? false : true} color=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Copy Programme Structure Details Dialog */}\r\n      <Dialog open={openCopyPS} onClose={handleCloseCopyPSDialog} aria-labelledby=\"form-dialog-title\" maxWidth={\"xs\"}>\r\n        <DialogTitle id=\"form-dialog-title\">Copy Programme Structure</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Select existing programme structure to copy from then select details for intake to copy to.\r\n          </DialogContentText>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <Select\r\n                style={{width: \"100%\", marginRight: \"20px\"}}\r\n                value={copyFromIntake}\r\n                onChange={(e) => {setCopyFromIntake(e.target.value)}}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n                renderValue={(selected) => {\r\n                  if (!selected) {\r\n                    return <div style={{font: \"inherit\", color: \"#aaa\"}}>Intake to copy from</div>;\r\n                  }\r\n      \r\n                  return selected;\r\n                }}\r\n                inputProps={{ 'aria-label': 'Without label' }}\r\n              >\r\n                {standardPS.map((item, index) => {\r\n                  return (\r\n                    <MenuItem value={item.intake}>{item.intake}</MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Select\r\n                style={{width: \"100%\", marginRight: \"20px\"}}\r\n                value={newIntakeMonth}\r\n                onChange={(e) => {setNewIntakeMonth(e.target.value)}}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n                renderValue={(selected) => {\r\n                  if (!selected) {\r\n                    return <div style={{font: \"inherit\", color: \"#aaa\"}}>Month</div>;\r\n                  }\r\n      \r\n                  return selected;\r\n                }}\r\n                inputProps={{ 'aria-label': 'Without label' }}\r\n              >\r\n                <MenuItem value=\"January\">January</MenuItem>\r\n                <MenuItem value=\"February\">February</MenuItem>\r\n                <MenuItem value=\"March\">March</MenuItem>\r\n                <MenuItem value=\"April\">April</MenuItem>\r\n                <MenuItem value=\"May\">May</MenuItem>\r\n                <MenuItem value=\"June\">June</MenuItem>\r\n                <MenuItem value=\"July\">July</MenuItem>\r\n                <MenuItem value=\"August\">August</MenuItem>\r\n                <MenuItem value=\"September\">September</MenuItem>\r\n                <MenuItem value=\"October\">October</MenuItem>\r\n                <MenuItem value=\"November\">November</MenuItem>\r\n                <MenuItem value=\"December\">December</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Select\r\n                style={{width: \"100%\"}}\r\n                value={newIntakeYear}\r\n                onChange={(e) => {setNewIntakeYear(e.target.value)}}\r\n                displayEmpty\r\n                className={classes.selectEmpty}\r\n                renderValue={(selected) => {\r\n                  if (!selected) {\r\n                    return <div style={{font: \"inherit\", color: \"#aaa\"}}>Year</div>;\r\n                  }\r\n      \r\n                  return selected;\r\n                }}\r\n                inputProps={{ 'aria-label': 'Without label' }}\r\n              >\r\n                {years.map((item, index) => {\r\n                  return (\r\n                    <MenuItem value={item}>{item}</MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseCopyPSDialog} color=\"primary\" autoFocus>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={confirmCopyPS} disabled={(newIntakeMonth && newIntakeYear) ? false : true} color=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnackbar}\r\n      >\r\n        <Alert\r\n          onClose={handleCloseSnackbar}\r\n          severity={snackbarSev}\r\n        >\r\n          {snackbarMsg}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Login from '../../components/Admin/Login';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport EditSubjectList from '../../components/Admin/EditSubjectList';\r\nimport EditSPS from '../../components/Admin/EditSPS';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    alignItems: \"center\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction setToken(userToken) {\r\n  sessionStorage.setItem('token', JSON.stringify(userToken));\r\n}\r\n\r\nfunction getToken() {\r\n  const tokenString = sessionStorage.getItem('token');\r\n  const userToken = JSON.parse(tokenString);\r\n  return userToken?.token\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  activeTab: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function Admin(props) {\r\n  const classes = useStyles();\r\n  const [token, setToken] = React.useState(getToken());\r\n  const [activeTab, setActiveTab] = React.useState(0);\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     token: getToken(),\r\n  //     activeTab: 0,\r\n  //   }\r\n  // }\r\n\r\n  const callbackFunction = (childData) => {\r\n    setToken(childData);\r\n    // this.setState({token: childData});\r\n  }\r\n  \r\n  const handleChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n    // this.setState({activeTab: newValue});\r\n  };\r\n\r\n  // DEBUG\r\n  // if(!token) {\r\n  //   return <Login setToken={setToken} parentCallback={callbackFunction} />\r\n  // }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Paper className={classes.root}>\r\n        <Tabs\r\n          value={activeTab}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab label=\"Edit Subject List\" {...a11yProps(0)}/>\r\n          <Tab label=\"Edit Programme Structure\" {...a11yProps(1)}/>\r\n        </Tabs>\r\n      </Paper>\r\n      <TabPanel value={activeTab} index={0}>\r\n        <EditSubjectList />\r\n      </TabPanel>\r\n      <TabPanel value={activeTab} index={1}>\r\n        <EditSPS />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n};","import indigo from \"@material-ui/core/colors/indigo\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst primaryColor = indigo;\r\nconst secondaryColor = green;\r\n\r\nconst themeConfig = {\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: green,\r\n    error: red,\r\n    // Used by `getContrastText()` to maximize the contrast between the background and\r\n    // the text.\r\n    contrastThreshold: 3,\r\n    // Used to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2\r\n  }\r\n};\r\n\r\n// All the following keys are optional.\r\n// We try our best to provide a great default value.\r\nconst defaultTheme = themeConfig;\r\n\r\nexport const settings = createSlice({\r\n  name: 'settings',\r\n  initialState: {\r\n    theme: defaultTheme,\r\n    darkMode: false,\r\n    colorsSwaped: false\r\n  },\r\n  reducers: {\r\n    toggleThemeMode: (state, action) => {\r\n      if (action.payload) { //darknode set\r\n        state.darkMode = true;\r\n        state.theme = {\r\n          ...themeConfig,\r\n          palette: {\r\n            ...themeConfig.palette,\r\n            primary: state.theme.palette.primary,\r\n            secondary: state.theme.palette.secondary,\r\n            type: \"dark\"\r\n          }\r\n        };\r\n      } else {\r\n        state.darkMode = false;\r\n        state.theme = {\r\n          ...themeConfig,\r\n          palette: {\r\n            ...themeConfig.palette,\r\n            primary: state.theme.palette.primary,\r\n            secondary: state.theme.palette.secondary\r\n          }\r\n        };\r\n      }\r\n\r\n      state.value = action.payload;\r\n    },\r\n    swapThemeColors: (state, action) => {\r\n      if (action.payload) { // colorsSwaped\r\n        state.colorsSwaped = true;\r\n        state.theme = {\r\n            ...themeConfig,\r\n            palette: {\r\n              ...state.theme.palette,\r\n              primary: secondaryColor,\r\n              secondary: primaryColor\r\n            }\r\n          };\r\n      } else {\r\n        state.colorsSwaped = false;\r\n        state.theme = {\r\n          ...themeConfig,\r\n          palette: {\r\n            ...state.theme.palette,\r\n            primary: primaryColor,\r\n            secondary: secondaryColor\r\n          }\r\n        };\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleThemeMode, swapThemeColors } = settings.actions;\r\n\r\nexport const isDarkMode = state => state.settings.darkMode;\r\n\r\nexport const isColorSwaped = state => state.settings.colorsSwaped;\r\n\r\nexport const getTheme = state => state.settings.theme;\r\n\r\nexport default settings.reducer;","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport PaletteIcon from \"@material-ui/icons/Palette\";\r\nimport CompareArrowsIcon from \"@material-ui/icons/CompareArrows\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { toggleThemeMode, swapThemeColors, isDarkMode, isColorSwaped } from \"./settingsReducer\";\r\n\r\nexport default function Setting() {\r\n\r\n  const darkMode = useSelector(isDarkMode);\r\n  const colorSwaped = useSelector(isColorSwaped);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n  <div>\r\n    <Typography variant=\"h5\">Settings</Typography>\r\n    <Card>\r\n      <CardContent>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <PaletteIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dark Mode\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                onChange={(e, checked) =>  dispatch(toggleThemeMode(checked))}\r\n                checked={darkMode}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <CompareArrowsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Swap Colors\" />\r\n            <ListItemSecondaryAction>\r\n              <Switch\r\n                onChange={(e, checked) => dispatch(swapThemeColors(checked))}\r\n                checked={colorSwaped}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  </div>);\r\n};\r\n","import Header from \"./Header\";\r\nexport default Header;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  toolbarRoot: {\r\n    paddingRight: 24\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\nconst Header = props => {\r\n  const { classes, handleToggleDrawer } = props;\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <Toolbar disableGutters={true} classes={{ root: classes.toolbarRoot }}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"Open drawer\"\r\n          onClick={handleToggleDrawer}\r\n          className={classes.menuButton}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          Customize Programme Structure\r\n        </Typography>\r\n        {/* <IconButton color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton color=\"inherit\">\r\n          <PersonIcon />\r\n        </IconButton> */}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","import Sidebar from \"./Sidebar\";\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst styles = theme => ({\r\n  drawerPaper: {\r\n    position: \"fixed\",\r\n    top: theme.spacing(8),\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(8),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9)\r\n    }\r\n  }\r\n});\r\n\r\nconst Sidebar = props => {\r\n  const { open, classes } = props;\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: classNames(\r\n          classes.drawerPaper,\r\n          !open && classes.drawerPaperClose\r\n        )\r\n      }}\r\n      open={open}\r\n    >\r\n      <List>\r\n        <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/admin\" style={{ textDecoration: 'none' }}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <PermIdentityIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Admin\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/setting\" style={{ textDecoration: 'none' }}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <SettingsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Settings\" />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Sidebar);\r\n","import React, { Fragment, Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing(9),\r\n    padding: theme.spacing(3),\r\n    marginTop: theme.spacing(7),\r\n    overflowX: \"hidden\"\r\n  },\r\n  contentShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  }\r\n});\r\n\r\nclass MainLayout extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleToggleDrawer = () => {\r\n    this.setState(prevState => {\r\n      return { open: !prevState.open };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, children } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <div className={classes.root}>\r\n          <Header\r\n            handleToggleDrawer={this.handleToggleDrawer}\r\n          />\r\n          <main\r\n            className={classNames(classes.content, {\r\n              [classes.contentShift]: this.state.open\r\n            })}\r\n          >\r\n            {children}\r\n          </main>\r\n        </div>\r\n        <Sidebar open={this.state.open} drawerWidth={drawerWidth} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MainLayout);\r\n","import React from \"react\";\r\n\r\nconst EmptyLayout = props => {\r\n  return <div style={{ height: \"inherit\" }}>{props.children}</div>;\r\n};\r\n\r\nexport default EmptyLayout;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Home from \"./containers/Home/Home\";\r\nimport Admin from \"./containers/Admin/Admin\";\r\nimport Setting from \"./containers/Setting/Setting\";\r\n\r\nimport MainLayout from \"./layouts/MainLayout\";\r\nimport EmptyLayout from \"./layouts/EmptyLayout\";\r\n\r\nimport { getTheme } from \"./containers/Setting/settingsReducer\";\r\n\r\nconst NotFound = () => {\r\n  return <div>NotFound</div>;\r\n};\r\n\r\nconst DashboardRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={matchProps => (\r\n        <MainLayout>\r\n          <Component {...matchProps} />\r\n        </MainLayout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst EmptyRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={matchProps => (\r\n        <EmptyLayout>\r\n          <Component {...matchProps} />\r\n        </EmptyLayout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n\r\n  const theTheme = useSelector(getTheme);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={createMuiTheme(theTheme)}>\r\n      <CssBaseline />\r\n      <div style={{ height: \"100vh\" }}>\r\n        <Router>\r\n          <Switch>\r\n            <DashboardRoute path=\"/dashboard\" component={Home} />\r\n            <DashboardRoute path=\"/admin\" component={Admin} />\r\n            <DashboardRoute path=\"/setting\" component={Setting} />\r\n            <DashboardRoute exact path=\"/\" component={Home} />\r\n            <EmptyRoute component={NotFound} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n};","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport settings from \"../containers/Setting/settingsReducer\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    settings: settings\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}